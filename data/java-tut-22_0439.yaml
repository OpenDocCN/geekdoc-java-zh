- en: How to Use GridLayout
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 GridLayout
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/layout/grid.html](https://docs.oracle.com/javase/tutorial/uiswing/layout/grid.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/layout/grid.html](https://docs.oracle.com/javase/tutorial/uiswing/layout/grid.html)
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:** This lesson covers writing layout code by hand, which can be challenging.
    If you are not interested in learning all the details of layout management, you
    might prefer to use the `GroupLayout` layout manager combined with a builder tool
    to lay out your GUI. One such builder tool is the [NetBeans IDE](../learn/index.html).
    Otherwise, if you want to code by hand and do not want to use `GroupLayout`, then
    `GridBagLayout` is recommended as the next most flexible and powerful layout manager.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 本课程涵盖手动编写布局代码，这可能具有挑战性。如果您不想学习布局管理的所有细节，您可能更喜欢使用`GroupLayout`布局管理器结合构建工具来布局您的
    GUI。其中一个构建工具是[NetBeans IDE](../learn/index.html)。否则，如果您想手动编码且不想使用`GroupLayout`，那么建议使用`GridBagLayout`作为下一个最灵活和强大的布局管理器。'
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: If you are interested in using JavaFX to create your GUI, see [Working With
    Layouts in JavaFX](https://docs.oracle.com/javase/8/javafx/layout-tutorial/index.html).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有兴趣使用 JavaFX 创建 GUI，请参阅[JavaFX 中的布局](https://docs.oracle.com/javase/8/javafx/layout-tutorial/index.html)。
- en: The following figure represents a snapshot of an application that uses the [`GridLayout`](https://docs.oracle.com/javase/8/docs/api/java/awt/GridLayout.html)
    class.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表示使用[`GridLayout`](https://docs.oracle.com/javase/8/docs/api/java/awt/GridLayout.html)类的应用程序的快照。
- en: '![A snapshot of GridLayoutDemo](../Images/014b93e45655af3e7a1f69b4c75c538e.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![GridLayoutDemo 的快照](../Images/014b93e45655af3e7a1f69b4c75c538e.png)'
- en: Click the Launch button to run GridLayoutDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/layout/index.html#GridLayoutDemo).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行`GridLayoutDemo`（[下载
    JDK 7 或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/layout/index.html#GridLayoutDemo)。
- en: '[![Launches the GridLayoutDemo application](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/GridLayoutDemoProject/GridLayoutDemo.jnlp)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[![启动 GridLayoutDemo 应用程序](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/GridLayoutDemoProject/GridLayoutDemo.jnlp)'
- en: The complete code of this demo is in the [`GridLayoutDemo.java`](../examples/layout/GridLayoutDemoProject/src/layout/GridLayoutDemo.java)
    file.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此演示的完整代码位于[`GridLayoutDemo.java`](../examples/layout/GridLayoutDemoProject/src/layout/GridLayoutDemo.java)文件中。
- en: A `GridLayout` object places components in a grid of cells. Each component takes
    all the available space within its cell, and each cell is exactly the same size.
    If the `GridLayoutDemo` window is resized, the `GridLayout` object changes the
    cell size so that the cells are as large as possible, given the space available
    to the container.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`GridLayout` 对象将组件放置在单元格网格中。每个组件占据其单元格中的所有可用空间，每个单元格的大小完全相同。如果调整`GridLayoutDemo`窗口的大小，`GridLayout`
    对象会更改单元格大小，以使单元格尽可能大，给定容器可用的空间。'
- en: The code snippet below creates the `GridLayout` object and the components it
    manages.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段创建了`GridLayout`对象和其管理的组件。
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The constructor of the `GridLayout` class creates an instance that has two columns
    and as many rows as necessary.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`GridLayout` 类的构造函数创建一个具有两列并且必要行数的实例。'
- en: 'Use combo boxes to set up how much vertical or horizontal padding is put around
    the components. Then click the Apply gaps button. The following code snippet shows
    how your selection is processed by using the `setVgap` and `setHgap` methods of
    the `GridLayout` class:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用组合框设置组件周围的垂直或水平填充量，然后单击“应用间隙”按钮。以下代码片段显示了如何使用`GridLayout`类的`setVgap`和`setHgap`方法处理您的选择：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The GridLayout API
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`GridLayout` API'
- en: The following table lists constructors of the `GridLayout` class that specify
    the number of rows and columns.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了指定行数和列数的`GridLayout`类的构造函数。
- en: The `GridLayout` class constructors
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`GridLayout` 类的构造函数'
- en: '| Constructor | Purpose |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 构造函数 | 目的 |'
- en: '| [`GridLayout(int *rows*, int *cols*)`](https://docs.oracle.com/javase/8/docs/api/java/awt/GridLayout.html#GridLayout-int-int-)
    | Creates a grid layout with the specified number of rows and columns. All components
    in the layout are given equal size. One, but not both, of `rows` and `cols` can
    be zero, which means that any number of objects can be placed in a row or in a
    column. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`GridLayout(int *rows*, int *cols*)`](https://docs.oracle.com/javase/8/docs/api/java/awt/GridLayout.html#GridLayout-int-int-)
    | 创建具有指定行数和列数的网格布局。布局中的所有组件都具有相同的大小。`rows`和`cols`中的一个，但不是两者都可以为零，这意味着可以在一行或一列中放置任意数量的对象。
    |'
- en: '| [`GridLayout(int *rows*, int *cols*, int *hgap*, int *vgap*)`](https://docs.oracle.com/javase/8/docs/api/java/awt/GridLayout.html#GridLayout-int-int-int-int-)
    | Creates a grid layout with the specified number of rows and columns. In addition,
    the horizontal and vertical gaps are set to the specified values. Horizontal gaps
    are places between each of columns. Vertical gaps are placed between each of the
    rows. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`GridLayout(int *rows*, int *cols*, int *hgap*, int *vgap*)`](https://docs.oracle.com/javase/8/docs/api/java/awt/GridLayout.html#GridLayout-int-int-int-int-)
    | 创建具有指定行数和列数的网格布局。此外，水平和垂直间隙设置为指定值。水平间隙放置在每列之间。垂直间隙放置在每行之间。 |'
- en: 'The `GridLayout` class has two constructors:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`GridLayout`类有两个构造函数：'
- en: Examples that Use GridLayout
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用`GridLayout`的示例
- en: The following table lists code examples that use the `GridLayout` class and
    provides links to related sections.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了使用`GridLayout`类的代码示例，并提供到相关部分的链接。
- en: '| Example | Where Described | Notes |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 描述位置 | 注释 |'
- en: '| [`GridLayoutDemo`](../examples/layout/index.html#GridLayoutDemo) | This page
    | Uses a 2-column grid. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`GridLayoutDemo`](../examples/layout/index.html#GridLayoutDemo) | 本页面 |
    使用了2列网格。 |'
- en: '| [`ComboBoxDemo2`](../examples/components/index.html#ComboBoxDemo2) | [How
    to Use Combo Boxes](../components/combobox.html) | One of many examples that use
    a 1x1 grid to make a component as large as possible. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`ComboBoxDemo2`](../examples/components/index.html#ComboBoxDemo2) | [如何使用组合框](../components/combobox.html)
    | 其中一个示例，使用1x1网格使组件尽可能大。 |'
- en: '| [`LabelDemo`](../examples/components/index.html#LabelDemo) | [How to Use
    Labels](../components/label.html) | Uses a 3-row grid. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`LabelDemo`](../examples/components/index.html#LabelDemo) | [如何使用标签](../components/label.html)
    | 使用了3行网格。 |'
