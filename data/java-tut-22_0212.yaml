- en: Starvation and Livelock
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 饥饿和活锁
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/starvelive.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/starvelive.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/starvelive.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/starvelive.html)
- en: Starvation and livelock are much less common a problem than deadlock, but are
    still problems that every designer of concurrent software is likely to encounter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 饥饿和活锁问题比死锁问题要少见得多，但仍然是每个并发软件设计者可能会遇到的问题。
- en: Starvation
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 饥饿
- en: '*Starvation* describes a situation where a thread is unable to gain regular
    access to shared resources and is unable to make progress. This happens when shared
    resources are made unavailable for long periods by "greedy" threads. For example,
    suppose an object provides a synchronized method that often takes a long time
    to return. If one thread invokes this method frequently, other threads that also
    need frequent synchronized access to the same object will often be blocked.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*饥饿*描述了一个线程无法定期访问共享资源并且无法取得进展的情况。这种情况发生在"贪婪"线程长时间地使共享资源不可用时。例如，假设一个对象提供了一个经常需要很长时间才能返回的同步方法。如果一个线程频繁调用这个方法，其他也需要频繁同步访问同一对象的线程将经常被阻塞。'
- en: Livelock
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活锁
- en: "A thread often acts in response to the action of another thread. If the other\
    \ thread's action is also a response to the action of another thread, then *livelock*\
    \ may result. As with deadlock, livelocked threads are unable to make further\
    \ progress. However, the threads are not blocked \x97 they are simply too busy\
    \ responding to each other to resume work. This is comparable to two people attempting\
    \ to pass each other in a corridor: Alphonse moves to his left to let Gaston pass,\
    \ while Gaston moves to his right to let Alphonse pass. Seeing that they are still\
    \ blocking each other, Alphone moves to his right, while Gaston moves to his left.\
    \ They're still blocking each other, so..."
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: "一个线程经常是作为对另一个线程动作的响应。如果另一个线程的动作也是对另一个线程动作的响应，那么可能会发生*livelock*。与死锁类似，活锁的线程无法取得进一步的进展。然而，这些线程并没有被阻塞\
    \ \x97 它们只是忙于相互响应而无法恢复工作。这就好比两个人试图在走廊里互相让对方通过：阿方斯向左移动让加斯通通过，而加斯通向右移动让阿方斯通过。看到他们仍然互相阻挡，阿方斯向右移动，而加斯通向左移动。他们仍然互相阻挡，所以..."
