- en: Extensible Stylesheet Language Transformations APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可扩展样式表语言转换 APIs
- en: 原文：[https://docs.oracle.com/javase/tutorial/jaxp/intro/extensible.html](https://docs.oracle.com/javase/tutorial/jaxp/intro/extensible.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/jaxp/intro/extensible.html](https://docs.oracle.com/javase/tutorial/jaxp/intro/extensible.html)
- en: The following [Figure ](#gceys) shows the XSLT APIs in action.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 [图](#gceys) 展示了 XSLT APIs 的运行情况。
- en: Figure  XSLT APIs
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图 XSLT APIs
- en: '![XSLT APIs](../Images/f1a6c4deb4e0bd8988fa1d0754894326.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![XSLT APIs](../Images/f1a6c4deb4e0bd8988fa1d0754894326.png)'
- en: A `TransformerFactory` object is instantiated and used to create a `Transformer`.
    The source object is the input to the transformation process. A source object
    can be created from a SAX reader, from a DOM, or from an input stream.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 `TransformerFactory` 对象，并用它来创建一个 `Transformer`。源对象是转换过程的输入。源对象可以从 SAX 读取器、DOM
    或输入流创建。
- en: Similarly, the result object is the result of the transformation process. That
    object can be a SAX event handler, a DOM, or an output stream.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，结果对象是转换过程的结果。该对象可以是 SAX 事件处理程序、DOM 或输出流。
- en: When the transformer is created, it can be created from a set of transformation
    instructions, in which case the specified transformations are carried out. If
    it is created without any specific instructions, then the transformer object simply
    copies the source to the result.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 创建转换器时，可以根据一组转换指令创建它，这样指定的转换就会执行。如果没有任何特定的指令创建它，那么转换器对象只是将源复制到结果。
- en: XSLT Packages
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XSLT 包
- en: The XSLT APIs are defined in the packages shown in [Table ](#gcfbf).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: XSLT APIs 定义在 [表](#gcfbf) 中所示的包中。
- en: Table  XSLT Packages
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 表 XSLT 包
- en: '| Package | Description |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 包 | 描述 |'
- en: '| `javax.xml.transform` | Defines the `TransformerFactory` and `Transformer`
    classes, which you use to get an object capable of doing transformations. After
    creating a transformer object, you invoke its `transform()` method, providing
    it with an input (source) and output (result). |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `javax.xml.transform` | 定义了 `TransformerFactory` 和 `Transformer` 类，用于获取能够执行转换的对象。创建转换器对象后，调用其
    `transform()` 方法，提供输入（源）和输出（结果）。 |'
- en: '| `javax.xml.transform.dom` | Classes to create input (source) and output (result)
    objects from a DOM. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `javax.xml.transform.dom` | 用于从 DOM 创建输入（源）和输出（结果）对象的类。 |'
- en: '| `javax.xml.transform.sax` | Classes to create input (source) objects from
    a SAX parser and output (result) objects from a SAX event handler. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `javax.xml.transform.sax` | 用于从 SAX 解析器创建输入（源）对象和从 SAX 事件处理程序创建输出（结果）对象的类。
    |'
- en: '| `javax.xml.transform.stream` | Classes to create input (source) objects and
    output (result) objects from an I/O stream. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `javax.xml.transform.stream` | 用于从 I/O 流创建输入（源）对象和输出（结果）对象的类。 |'
