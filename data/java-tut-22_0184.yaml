- en: Managing Metadata (File and File Store Attributes)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理元数据（文件和文件存储属性）
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/fileAttr.html](https://docs.oracle.com/javase/tutorial/essential/io/fileAttr.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/fileAttr.html](https://docs.oracle.com/javase/tutorial/essential/io/fileAttr.html)
- en: 'The definition of *metadata* is "data about other data." With a file system,
    the data is contained in its files and directories, and the metadata tracks information
    about each of these objects: Is it a regular file, a directory, or a link? What
    is its size, creation date, last modified date, file owner, group owner, and access
    permissions?'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*元数据*的定义是“关于其他数据的数据”。在文件系统中，数据包含在其文件和目录中，元数据跟踪每个对象的信息：它是一个常规文件、目录还是链接？它的大小、创建日期、最后修改日期、文件所有者、组所有者和访问权限是什么？'
- en: A file system's metadata is typically referred to as its *file attributes*.
    The `Files` class includes methods that can be used to obtain a single attribute
    of a file, or to set an attribute.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统的元数据通常被称为其*文件属性*。`Files`类包括可用于获取文件的单个属性或设置属性的方法。
- en: '| Methods | Comment |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 说明 |'
- en: '| [`size(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#size-java.nio.file.Path-)
    | Returns the size of the specified file in bytes. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`size(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#size-java.nio.file.Path-)
    | 返回指定文件的大小（以字节为单位）。 |'
- en: '| [`isDirectory(Path, LinkOption)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isDirectory-java.nio.file.Path-java.nio.file.LinkOption...-)
    | Returns true if the specified `Path` locates a file that is a directory. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`isDirectory(Path, LinkOption)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isDirectory-java.nio.file.Path-java.nio.file.LinkOption...-)
    | 如果指定的`Path`定位到一个目录，则返回true。 |'
- en: '| [`isRegularFile(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-)
    | Returns true if the specified `Path` locates a file that is a regular file.
    |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`isRegularFile(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-)
    | 如果指定的`Path`定位到一个常规文件，则返回true。 |'
- en: '| [`isSymbolicLink(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isSymbolicLink-java.nio.file.Path-)
    | Returns true if the specified `Path` locates a file that is a symbolic link.
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`isSymbolicLink(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isSymbolicLink-java.nio.file.Path-)
    | 如果指定的`Path`定位到一个符号链接文件，则返回true。 |'
- en: '| [`isHidden(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isHidden-java.nio.file.Path-)
    | Returns true if the specified `Path` locates a file that is considered hidden
    by the file system. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`isHidden(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#isHidden-java.nio.file.Path-)
    | 如果指定的`Path`定位到文件系统认为是隐藏的文件，则返回true。 |'
- en: '| [`getLastModifiedTime(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getLastModifiedTime-java.nio.file.Path-java.nio.file.LinkOption...-)
    [`setLastModifiedTime(Path, FileTime)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setLastModifiedTime-java.nio.file.Path-java.nio.file.attribute.FileTime-)
    | Returns or sets the specified file''s last modified time. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`getLastModifiedTime(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getLastModifiedTime-java.nio.file.Path-java.nio.file.LinkOption...-)
    [`setLastModifiedTime(Path, FileTime)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setLastModifiedTime-java.nio.file.Path-java.nio.file.attribute.FileTime-)
    | 返回或设置指定文件的最后修改时间。 |'
- en: '| [`getOwner(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getOwner-java.nio.file.Path-java.nio.file.LinkOption...-)
    [`setOwner(Path, UserPrincipal)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setOwner-java.nio.file.Path-java.nio.file.attribute.UserPrincipal-)
    | Returns or sets the owner of the file. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`getOwner(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getOwner-java.nio.file.Path-java.nio.file.LinkOption...-)
    [`setOwner(Path, UserPrincipal)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setOwner-java.nio.file.Path-java.nio.file.attribute.UserPrincipal-)
    | 返回或设置文件的所有者。 |'
- en: '| [`getPosixFilePermissions(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getPosixFilePermissions-java.nio.file.Path-java.nio.file.LinkOption...-)
    [`setPosixFilePermissions(Path, Set<PosixFilePermission>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setPosixFilePermissions-java.nio.file.Path-java.util.Set-)
    | Returns or sets a file''s POSIX file permissions. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`getPosixFilePermissions(Path, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getPosixFilePermissions-java.nio.file.Path-java.nio.file.LinkOption...-)
    [`setPosixFilePermissions(Path, Set<PosixFilePermission>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setPosixFilePermissions-java.nio.file.Path-java.util.Set-)
    | 返回或设置文件的 POSIX 文件权限。 |'
- en: '| [`getAttribute(Path, String, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-)
    [`setAttribute(Path, String, Object, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-)
    | Returns or sets the value of a file attribute. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`getAttribute(Path, String, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-)
    [`setAttribute(Path, String, Object, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-)
    | 返回或设置文件属性的值。 |'
- en: If a program needs multiple file attributes around the same time, it can be
    inefficient to use methods that retrieve a single attribute. Repeatedly accessing
    the file system to retrieve a single attribute can adversely affect performance.
    For this reason, the `Files` class provides two `readAttributes` methods to fetch
    a file's attributes in one bulk operation.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果程序需要同时获取多个文件属性，使用检索单个属性的方法可能效率低下。反复访问文件系统以检索单个属性可能会对性能产生不利影响。因此，`Files` 类提供了两个
    `readAttributes` 方法，以便一次性获取文件的属性。
- en: '| Method | Comment |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 注释 |'
- en: '| [`readAttributes(Path, String, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAttributes-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-)
    | Reads a file''s attributes as a bulk operation. The `String` parameter identifies
    the attributes to be read. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`readAttributes(Path, String, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAttributes-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-)
    | 作为批量操作读取文件的属性。`String` 参数标识要读取的属性。 |'
- en: '| [`readAttributes(Path, Class<A>, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-)
    | Reads a file''s attributes as a bulk operation. The `Class<A>` parameter is
    the type of attributes requested and the method returns an object of that class.
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`readAttributes(Path, Class<A>, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-)
    | 作为批量操作读取文件的属性。`Class<A>` 参数是请求的属性类型，该方法返回该类的对象。 |'
- en: Before showing examples of the `readAttributes` methods, it should be mentioned
    that different file systems have different notions about which attributes should
    be tracked. For this reason, related file attributes are grouped together into
    views. A *view* maps to a particular file system implementation, such as POSIX
    or DOS, or to a common functionality, such as file ownership.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在展示 `readAttributes` 方法的示例之前，应该提到不同的文件系统对应该跟踪哪些属性有不同的概念。因此，相关文件属性被分组到视图中。*视图*
    映射到特定的文件系统实现，如 POSIX 或 DOS，或者映射到常见功能，如文件所有权。
- en: 'The supported views are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的视图如下：
- en: '[`BasicFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/BasicFileAttributeView.html)
    – Provides a view of basic attributes that are required to be supported by all
    file system implementations.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`BasicFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/BasicFileAttributeView.html)
    – 提供必须由所有文件系统实现支持的基本属性视图。'
- en: '[`DosFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/DosFileAttributeView.html)
    – Extends the basic attribute view with the standard four bits supported on file
    systems that support the DOS attributes.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DosFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/DosFileAttributeView.html)
    – 将基本属性视图扩展为在支持 DOS 属性的文件系统上支持的标准四位。'
- en: '[`PosixFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/PosixFileAttributeView.html)
    – Extends the basic attribute view with attributes supported on file systems that
    support the POSIX family of standards, such as UNIX. These attributes include
    file owner, group owner, and the nine related access permissions.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PosixFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/PosixFileAttributeView.html)
    – 将基本属性视图扩展到支持 POSIX 标准族的文件系统上支持的属性，例如 UNIX。这些属性包括文件所有者、组所有者和九个相关的访问权限。'
- en: '[`FileOwnerAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/FileOwnerAttributeView.html)
    – Supported by any file system implementation that supports the concept of a file
    owner.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`FileOwnerAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/FileOwnerAttributeView.html)
    – 受到支持文件所有者概念的任何文件系统实现支持。'
- en: '[`AclFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/AclFileAttributeView.html)
    – Supports reading or updating a file''s Access Control Lists (ACL). The NFSv4
    ACL model is supported. Any ACL model, such as the Windows ACL model, that has
    a well-defined mapping to the NFSv4 model might also be supported.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`AclFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/AclFileAttributeView.html)
    – 支持读取或更新文件的访问控制列表（ACL）。支持 NFSv4 ACL 模型。任何 ACL 模型，例如 Windows ACL 模型，如果与 NFSv4
    模型有明确定义的映射，也可能受支持。'
- en: '[`UserDefinedFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/UserDefinedFileAttributeView.html)
    – Enables support of metadata that is user defined. This view can be mapped to
    any extension mechanisms that a system supports. In the Solaris OS, for example,
    you can use this view to store the MIME type of a file.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`UserDefinedFileAttributeView`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/UserDefinedFileAttributeView.html)
    – 支持用户定义的元数据。此视图可以映射到系统支持的任何扩展机制。例如，在 Solaris 操作系统中，您可以使用此视图存储文件的 MIME 类型。'
- en: A specific file system implementation might support only the basic file attribute
    view, or it may support several of these file attribute views. A file system implementation
    might support other attribute views not included in this API.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 特定的文件系统实现可能仅支持基本文件属性视图，或者可能支持其中几个文件属性视图。文件系统实现可能支持此 API 中未包含的其他属性视图。
- en: In most instances, you should not have to deal directly with any of the `FileAttributeView`
    interfaces. (If you do need to work directly with the `FileAttributeView`, you
    can access it via the [`getFileAttributeView(Path, Class<V>, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getFileAttributeView-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-)
    method.)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，您不应直接处理任何 `FileAttributeView` 接口。（如果您确实需要直接使用 `FileAttributeView`，可以通过
    [`getFileAttributeView(Path, Class<V>, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getFileAttributeView-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-)
    方法访问它。）
- en: The `readAttributes` methods use generics and can be used to read the attributes
    for any of the file attributes views. The examples in the rest of this page use
    the `readAttributes` methods.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`readAttributes` 方法使用泛型，可用于读取任何文件属性视图的属性。本页其余部分的示例使用 `readAttributes` 方法。'
- en: 'The remainder of this section covers the following topics:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的其余部分涵盖以下主题：
- en: '[Basic File Attributes](#basic)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[基本文件属性](#basic)'
- en: '[Setting Time Stamps](#time)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[设置时间戳](#time)'
- en: '[DOS File Attributes](#dos)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[DOS 文件属性](#dos)'
- en: '[POSIX File Permissions](#posix)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[POSIX 文件权限](#posix)'
- en: '[Setting a File or Group Owner](#lookup)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[设置文件或组所有者](#lookup)'
- en: '[User-Defined File Attributes](#user)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用户定义的文件属性](#user)'
- en: '[File Store Attributes](#store)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文件存储属性](#store)'
- en: Basic File Attributes
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本文件属性
- en: As mentioned previously, to read the basic attributes of a file, you can use
    one of the `Files.readAttributes` methods, which reads all the basic attributes
    in one bulk operation. This is far more efficient than accessing the file system
    separately to read each individual attribute. The varargs argument currently supports
    the [`LinkOption`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/LinkOption.html)
    enum, `NOFOLLOW_LINKS`. Use this option when you do not want symbolic links to
    be followed.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，要读取文件的基本属性，可以使用 `Files.readAttributes` 方法之一，该方法一次性读取所有基本属性。这比单独访问文件系统以读取每个单独属性要高效得多。可变参数参数当前支持
    [`LinkOption`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/LinkOption.html)
    枚举，`NOFOLLOW_LINKS`。当您不希望跟随符号链接时，请使用此选项。
- en: '* * *'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**A word about time stamps:** The set of basic attributes includes three time
    stamps: `creationTime`, `lastModifiedTime`, and `lastAccessTime`. Any of these
    time stamps might not be supported in a particular implementation, in which case
    the corresponding accessor method returns an implementation-specific value. When
    supported, the time stamp is returned as an [`FileTime`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/FileTime.html)
    object.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于时间戳的说明：**基本属性集包括三个时间戳：`creationTime`、`lastModifiedTime`和`lastAccessTime`。
    在特定实现中，这些时间戳中的任何一个可能不受支持，如果不支持，则相应的访问器方法返回一个特定于实现的值。 当支持时，时间戳作为[`FileTime`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/FileTime.html)对象返回。'
- en: '* * *'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The following code snippet reads and prints the basic file attributes for a
    given file and uses the methods in the [`BasicFileAttributes`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/BasicFileAttributes.html)
    class.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段读取并打印给定文件的基本文件属性，并使用[`BasicFileAttributes`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/BasicFileAttributes.html)类中的方法。
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In addition to the accessor methods shown in this example, there is a `fileKey`
    method that returns either an object that uniquely identifies the file or `null`
    if no file key is available.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本示例中显示的访问器方法之外，还有一个`fileKey`方法，返回一个唯一标识文件的对象，如果没有文件键可用，则返回`null`。
- en: Setting Time Stamps
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置时间戳
- en: 'The following code snippet sets the last modified time in milliseconds:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段设置最后修改时间（以毫秒为单位）：
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: DOS File Attributes
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DOS 文件属性
- en: DOS file attributes are also supported on file systems other than DOS, such
    as Samba. The following snippet uses the methods of the [`DosFileAttributes`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/DosFileAttributes.html)
    class.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: DOS 文件属性也受支持于除 DOS 外的其他文件系统，如 Samba。 以下代码片段使用[`DosFileAttributes`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/DosFileAttributes.html)类的方法。
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'However, you can set a DOS attribute using the [`setAttribute(Path, String,
    Object, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-)
    method, as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您可以使用[`setAttribute(Path, String, Object, LinkOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-)方法设置
    DOS 属性，如下所示：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: POSIX File Permissions
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: POSIX 文件权限
- en: '*POSIX* is an acronym for Portable Operating System Interface for UNIX and
    is a set of IEEE and ISO standards designed to ensure interoperability among different
    flavors of UNIX. If a program conforms to these POSIX standards, it should be
    easily ported to other POSIX-compliant operating systems.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*POSIX*是 UNIX 可移植操作系统接口的缩写，是一组 IEEE 和 ISO 标准，旨在确保不同 UNIX 变种之间的互操作性。 如果程序符合这些
    POSIX 标准，它应该很容易移植到其他符合 POSIX 标准的操作系统。'
- en: 'Besides file owner and group owner, POSIX supports nine file permissions: read,
    write, and execute permissions for the file owner, members of the same group,
    and "everyone else."'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 除了文件所有者和组所有者，POSIX还支持九种文件权限：文件所有者、同一组成员和“其他所有人”的读取、写入和执行权限。
- en: The following code snippet reads the POSIX file attributes for a given file
    and prints them to standard output. The code uses the methods in the [`PosixFileAttributes`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/PosixFileAttributes.html)
    class.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段读取给定文件的 POSIX 文件属性，并将其打印到标准输出。 该代码使用[`PosixFileAttributes`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/PosixFileAttributes.html)类中的方法。
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The [`PosixFilePermissions`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/PosixFilePermissions.html)
    helper class provides several useful methods, as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PosixFilePermissions`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/PosixFilePermissions.html)辅助类提供了几个有用的方法，如下所示：'
- en: The `toString` method, used in the previous code snippet, converts the file
    permissions to a string (for example, `rw-r--r--`).
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`toString`方法，在前面的代码片段中使用，将文件权限转换为字符串（例如，`rw-r--r--`）。'
- en: The `fromString` method accepts a string representing the file permissions and
    constructs a `Set` of file permissions.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fromString`方法接受表示文件权限的字符串并构造一个文件权限的`Set`。'
- en: The `asFileAttribute` method accepts a `Set` of file permissions and constructs
    a file attribute that can be passed to the `Path.createFile` or `Path.createDirectory`
    method.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`asFileAttribute`方法接受一个文件权限的`Set`并构造一个可传递给`Path.createFile`或`Path.createDirectory`方法的文件属性。'
- en: 'The following code snippet reads the attributes from one file and creates a
    new file, assigning the attributes from the original file to the new file:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段从一个文件中读取属性并创建一个新文件，将原始文件的属性分配给新文件：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `asFileAttribute` method wraps the permissions as a `FileAttribute`. The
    code then attempts to create a new file with those permissions. Note that the
    `umask` also applies, so the new file might be more secure than the permissions
    that were requested.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`asFileAttribute`方法将权限包装为`FileAttribute`。然后代码尝试使用这些权限创建一个新文件。请注意，`umask`也适用，因此新文件可能比请求的权限更安全。'
- en: 'To set a file''s permissions to values represented as a hard-coded string,
    you can use the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件的权限设置为表示为硬编码字符串的值，可以使用以下代码：
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The [``Chmod``](examples/Chmod.java) example recursively changes the permissions
    of files in a manner similar to the `chmod` utility.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[``Chmod``](examples/Chmod.java)示例递归更改文件权限，类似于`chmod`实用程序。'
- en: Setting a File or Group Owner
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置文件或组所有者
- en: To translate a name into an object you can store as a file owner or a group
    owner, you can use the [`UserPrincipalLookupService`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/UserPrincipalLookupService.html)
    service. This service looks up a name or group name as a string and returns a
    `UserPrincipal` object representing that string. You can obtain the user principal
    look-up service for the default file system by using the [`FileSystem.getUserPrincipalLookupService`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getUserPrincipalLookupService--)
    method.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要将名称翻译为可存储为文件所有者或组所有者的对象，您可以使用[`UserPrincipalLookupService`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/attribute/UserPrincipalLookupService.html)服务。此服务查找一个字符串作为名称或组名称，并返回表示该字符串的`UserPrincipal`对象。您可以通过使用[`FileSystem.getUserPrincipalLookupService`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getUserPrincipalLookupService--)方法获取默认文件系统的用户主体查找服务。
- en: 'The following code snippet shows how to set the file owner by using the `setOwner`
    method:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了如何使用`setOwner`方法设置文件所有者：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'There is no special-purpose method in the `Files` class for setting a group
    owner. However, a safe way to do so directly is through the POSIX file attribute
    view, as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`Files`类中没有专门用于设置组所有者的方法。但是，直接通过POSIX文件属性视图安全地执行此操作的方法如下：'
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: User-Defined File Attributes
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户定义的文件属性
- en: If the file attributes supported by your file system implementation aren't sufficient
    for your needs, you can use the `UserDefinedAttributeView` to create and track
    your own file attributes.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的文件系统实现支持的文件属性不足以满足您的需求，您可以使用`UserDefinedAttributeView`来创建和跟踪自己的文件属性。
- en: Some implementations map this concept to features like NTFS Alternative Data
    Streams and extended attributes on file systems such as ext3 and ZFS. Most implementations
    impose restrictions on the size of the value, for example, ext3 limits the size
    to 4 kilobytes.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一些实现将这个概念映射到诸如NTFS替代数据流和文件系统（如ext3和ZFS）上的扩展属性等功能。大多数实现对值的大小施加限制，例如，ext3将大小限制为4千字节。
- en: 'A file''s MIME type can be stored as a user-defined attribute by using this
    code snippet:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 文件的MIME类型可以使用此代码片段存储为用户定义的属性：
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To read the MIME type attribute, you would use this code snippet:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要读取MIME类型属性，您可以使用以下代码片段：
- en: '[PRE10]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The [``Xdd``](examples/Xdd.java) example shows how to get, set, and delete a
    user-defined attribute.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[``Xdd``](examples/Xdd.java)示例显示了如何获取、设置和删除用户定义的属性。'
- en: '* * *'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:** In Linux, you might have to enable extended attributes for user-defined
    attributes to work. If you receive an `UnsupportedOperationException` when trying
    to access the user-defined attribute view, you need to remount the file system.
    The following command remounts the root partition with extended attributes for
    the ext3 file system. If this command does not work for your flavor of Linux,
    consult the documentation.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**在Linux中，您可能需要启用扩展属性才能使用户定义的属性起作用。如果尝试访问用户定义的属性视图时收到`UnsupportedOperationException`，则需要重新挂载文件系统。以下命令重新挂载具有ext3文件系统扩展属性的根分区。如果此命令对您的Linux版本不起作用，请参考文档。'
- en: '[PRE11]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If you want to make the change permanent, add an entry to `/etc/fstab`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要使更改永久生效，请向`/etc/fstab`添加条目。
- en: '* * *'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: File Store Attributes
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件存储属性
- en: You can use the [`FileStore`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileStore.html)
    class to learn information about a file store, such as how much space is available.
    The [`getFileStore(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getFileStore-java.nio.file.Path-)
    method fetches the file store for the specified file.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`FileStore`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileStore.html)类来了解文件存储的信息，例如可用空间有多少。[`getFileStore(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#getFileStore-java.nio.file.Path-)方法获取指定文件的文件存储。
- en: 'The following code snippet prints the space usage for the file store where
    a particular file resides:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段打印了特定文件所在文件存储的空间使用情况：
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The [`DiskUsage`](examples/DiskUsage.java) example uses this API to print disk
    space information for all the stores in the default file system. This example
    uses the [`getFileStores`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getFileStores--)
    method in the `FileSystem` class to fetch all the file stores for the file system.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DiskUsage`](examples/DiskUsage.java)示例使用此API打印默认文件系统中所有存储的磁盘空间信息。此示例使用`FileSystem`类中的[`getFileStores`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getFileStores--)方法来获取文件系统的所有文件存储。'
