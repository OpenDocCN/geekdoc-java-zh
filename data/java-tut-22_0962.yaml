- en: 'Lesson: Full-Screen Exclusive Mode API'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 教程：全屏独占模式 API
- en: 原文：[https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html](https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html](https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html)
- en: '*by Michael Martak*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*作者：迈克尔·马塔克*'
- en: Do you want to use high-performance graphics in the Java development environment?
    Have you always wanted to program a game, but your images wouldn't move fast enough?
    Has your slide show program not worked properly because you had no control over
    the user's display resolution? If you've been asking any of these questions, then
    the full-screen exclusive mode API, introduced in release 1.4, may be what you're
    looking for.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您想在Java开发环境中使用高性能图形吗？您一直想编写游戏，但是您的图像移动得不够快吗？您的幻灯片程序因为无法控制用户的显示分辨率而无法正常工作吗？如果您一直在问这些问题，那么在1.4版本中引入的全屏独占模式
    API 可能是您正在寻找的东西。
- en: '[Full-Screen Exclusive Mode](exclusivemode.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[全屏独占模式](exclusivemode.html)'
- en: Full-screen exclusive mode is a powerful new feature that enables you to suspend
    the windowing system so that drawing can be done directly to the screen.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 全屏独占模式是一个强大的新功能，它使您能够暂停窗口系统，以便直接在屏幕上进行绘制。
- en: '[Display Mode](displaymode.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[显示模式](displaymode.html)'
- en: This section describes how to choose and set the display mode. It also discusses
    why you'd want to set the display mode in the first place.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何选择和设置显示模式。还讨论了为什么首先要设置显示模式。
- en: '[Passive vs. Active Rendering](rendering.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[被动渲染 vs. 主动渲染](rendering.html)'
- en: This section discusses the merits of passive and active rendering. For example,
    painting while on the main event loop using the `paint` method is passive, whereas
    rendering in your own thread is active. Active rendering tips are also listed.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了被动渲染和主动渲染的优点。例如，在主事件循环中使用`paint`方法绘制是被动的，而在自己的线程中渲染是主动的。还列出了主动渲染的技巧。
- en: '[Double Buffering and Page Flipping](doublebuf.html)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[双缓冲和页面翻转](doublebuf.html)'
- en: This section explains double buffering and introduces page-flipping, a double
    buffering technique available in full-screen exclusive mode.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了双缓冲并介绍了页面翻转，这是全屏独占模式中可用的双缓冲技术。
- en: '[BufferStrategy and BufferCapabilities](bufferstrategy.html)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[BufferStrategy 和 BufferCapabilities](bufferstrategy.html)'
- en: This section covers `java.awt.image.BufferStrategy`, a class that allows you
    to draw to surfaces and components without having to know the number of buffers
    used or the technique used to display them. This section also reviews `java.awt.BufferCapabilities`,
    a class that can help you determine the capabilities of your graphics device.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了`java.awt.image.BufferStrategy`类，该类允许您在不知道使用的缓冲区数量或显示它们的技术的情况下绘制到表面和组件。本节还回顾了`java.awt.BufferCapabilities`类，该类可以帮助您确定图形设备的功能。
- en: '[Examples](example.html)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[示例](example.html)'
- en: This page lists several full-screen exclusive mode examples.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本页面列出了几个全屏独占模式示例。
