- en: How to Use the System Tray
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用系统托盘
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/misc/systemtray.html](https://docs.oracle.com/javase/tutorial/uiswing/misc/systemtray.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/misc/systemtray.html](https://docs.oracle.com/javase/tutorial/uiswing/misc/systemtray.html)
- en: The system tray is a specialized area of the desktop where users can access
    currently running programs. This area may be referred to differently on various
    operating systems. On Microsoft Windows, the system tray is referred to as the
    Taskbar Status Area, while on the GNU Network Object Model Environment (GNOME)
    Desktop it is referred to as the Notification Area. On K Desktop Environment (KDE)
    this area is referred to as the System Tray. However, on each system the tray
    area is shared by all applications running on the desktop.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 系统托盘是桌面的一个专门区域，用户可以访问当前运行的程序。在各种操作系统上，这个区域可能有不同的称呼。在 Microsoft Windows 上，系统托盘被称为任务栏状态区，而在
    GNU Network Object Model Environment (GNOME) 桌面上被称为通知区域。在 K Desktop Environment
    (KDE) 中，这个区域被称为系统托盘。然而，在每个系统上，托盘区域被桌面上所有运行的应用程序共享。
- en: The [`java.awt.SystemTray`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html)
    class introduced in Java™ SE version 6 represents the system tray for a desktop.
    The system tray can be accessed by calling the static `SystemTray.getSystemTray()`
    method. Before calling this method, use the static method [`isSupported()`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#isSupported--)
    to check that the system tray is supported. If the system tray is not supported
    on this platform, the `isSupported()` method returns false. If the application
    attempts to call the `getSystemTray()` method in such a case, the method will
    throw a `java.lang.UnsupportedOperationException`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`java.awt.SystemTray`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html)
    类是在 Java™ SE 版本 6 中引入的，代表桌面的系统托盘。可以通过调用静态方法 `SystemTray.getSystemTray()` 来访问系统托盘。在调用此方法之前，使用静态方法
    [`isSupported()`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#isSupported--)
    来检查系统托盘是否受支持。如果该平台不支持系统托盘，则 `isSupported()` 方法返回 false。如果应用程序在这种情况下尝试调用 `getSystemTray()`
    方法，该方法将抛出 `java.lang.UnsupportedOperationException`。'
- en: An application cannot create an instance of the `SystemTray` class. Only a single
    instance created within this class can exist, and this instance can be obtained
    using the [`getSystemTray()`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#getSystemTray--)
    method.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序无法创建 `SystemTray` 类的实例。只能存在一个在该类中创建的单个实例，并且可以使用 [`getSystemTray()`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#getSystemTray--)
    方法获取此实例。
- en: The system tray contains one or more tray icons which are added to the tray
    using the [`add(java.awt.TrayIcon)`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#add-java.awt.TrayIcon-)
    method. They can be removed when they are no longer needed with the [`remove(java.awt.TrayIcon)`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#remove-java.awt.TrayIcon-)
    method.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 系统托盘包含一个或多个托盘图标，可以使用 [`add(java.awt.TrayIcon)`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#add-java.awt.TrayIcon-)
    方法将它们添加到托盘中。当不再需要时，可以使用 [`remove(java.awt.TrayIcon)`](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#remove-java.awt.TrayIcon-)
    方法将它们移除。
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:** The `add()` method can throw an `AWTException` if the operating system
    or the Java runtime determines that the icon cannot be added to the system tray.
    For example, an `AWTException` will be thrown by X-Window desktops if the system
    tray does not exist on the desktop.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果操作系统或 Java 运行时确定无法将图标添加到系统托盘，则 `add()` 方法可能会抛出 `AWTException`。例如，如果桌面上不存在系统托盘，则
    X-Window 桌面会抛出 `AWTException`。'
- en: '* * *'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The [`TrayIcon`](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html)
    class functionality goes beyond the icon that is displayed in the tray. It also
    includes a text tooltip, a popup menu, balloon messages, and a set of listeners
    associated with it. A `TrayIcon` object generates various mouse events and supports
    the addition of corresponding listeners to receive notification of these events.
    The `TrayIcon` class processes some of the events itself. For example, by default,
    when a right-click is performed on the tray icon, it displays the specified pop-up
    menu. When a double-click is performed, the `TrayIcon` object generates an `ActionEvent`
    to launch an application. When the mouse pointer hovers over the tray icon, the
    tooltip is displayed. The icon image is automatically resized to fit the space
    allocated for the image on the tray.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TrayIcon`](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html)类的功能不仅限于在托盘中显示的图标。它还包括文本工具提示、弹出菜单、气球消息以及与之关联的一组监听器。`TrayIcon`对象生成各种鼠标事件，并支持添加相应的监听器以接收这些事件的通知。`TrayIcon`类本身处理某些事件。例如，默认情况下，在托盘图标上执行右键单击时，它会显示指定的弹出菜单。执行双击时，`TrayIcon`对象生成一个`ActionEvent`来启动应用程序。当鼠标指针悬停在托盘图标上时，将显示工具提示。图标图像会自动调整大小以适应在托盘上分配给图像的空间。'
- en: The following demo, developed using the AWT package, demonstrates the features
    of SystemTray and TrayIcon classes.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下演示使用AWT包开发，演示了SystemTray和TrayIcon类的功能。
- en: '![System Tray with opened pop-up menu](../Images/3a4a9b6ba9e0b135470e4f6abe2be35d.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![打开弹出菜单的系统托盘](../Images/3a4a9b6ba9e0b135470e4f6abe2be35d.png)'
- en: Unfortunately, the current implementation of the `TrayIcon` class provides limited
    support of the Swing pop-up menu (the `JPopupMenu` class) and does not enable
    an application to use all of the capabilities of the `javax.swing` package. The
    workaround proposal for this issue is described in the Bug Database, see Bug ID
    [6285881](http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6285881).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，`TrayIcon`类的当前实现对Swing弹出菜单（`JPopupMenu`类）的支持有限，并且不允许应用程序使用`javax.swing`包的所有功能。针对此问题的解决方案建议在Bug数据库中描述，参见Bug
    ID [6285881](http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6285881)。
- en: '* * *'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Place the [`bulb.gif`](../examples/misc/TrayIconDemoProject/src/misc/images/bulb.gif)
    image file in the `image` directory. Compile and run the example, consult the
    [example index](../examples/misc/index.html#TrayIconDemo).
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将[`bulb.gif`](../examples/misc/TrayIconDemoProject/src/misc/images/bulb.gif)图像文件放置在`image`目录中。编译并运行示例，参考[示例索引](../examples/misc/index.html#TrayIconDemo)。
- en: The tray icon will appear in the system tray.![Tray icon image](../Images/de1ccbe2391b32f97249ea6081351885.png)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 托盘图标将出现在系统托盘中。![托盘图标图像](../Images/de1ccbe2391b32f97249ea6081351885.png)
- en: Double-click the tray icon to launch the corresponding application. The dialog
    box will be displayed.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击托盘图标启动相应的应用程序。对话框将显示。
- en: Hover the mouse pointer over the tray icon and click the right mouse button.
    The pop-up menu appears.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在托盘图标上，然后单击鼠标右键。弹出菜单将出现。
- en: Select the Set auto size check box menu item. Notice that the icon appearance
    is changed as follows.![Tray icon image is resized](../Images/09b437679925b62bed534763e23da711.png)
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择设置自动调整大小复选框菜单项。注意图标外观已更改如下。![调整大小后的托盘图标图像](../Images/09b437679925b62bed534763e23da711.png)
- en: Select the Set tooltip check box menu item. Hover the mouse pointer over the
    tray icon. The tooltip appears.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择设置工具提示复选框菜单项。将鼠标指针悬停在托盘图标上。工具提示将出现。
- en: Choose the About menu item. The dialog box appears. Close the dialog box.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择关于菜单项。对话框将出现。关闭对话框。
- en: 'Choose any of the Display submenu items. Each of these items displays a message
    dialog box of a particular type: error, warning, info, or standard.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择任何显示子菜单项。这些项中的每一个都会显示特定类型的消息对话框：错误、警告、信息或标准。
- en: Use the Exit menu item to quit the application.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用退出菜单项退出应用程序。
- en: '* * *'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'The following code snippet shows how to add a tray icon to the system tray
    and apply a pop-up menu:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了如何向系统托盘添加托盘图标并应用弹出菜单：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The complete code for this demo is available in the [`TrayIconDemo.java`](../examples/misc/TrayIconDemoProject/src/misc/TrayIconDemo.java)
    file. This demo also uses the [`bulb.gif`](../examples/misc/TrayIconDemoProject/src/misc/images/bulb.gif)
    image file.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此演示的完整代码可在[`TrayIconDemo.java`](../examples/misc/TrayIconDemoProject/src/misc/TrayIconDemo.java)文件中找到。此演示还使用[`bulb.gif`](../examples/misc/TrayIconDemoProject/src/misc/images/bulb.gif)图像文件。
- en: Removing the current limitations on applying Swing components will enable developers
    to add such components as `JMenuItem` (with image), `JRadioButtonMenuItem`, and
    `JCheckBoxMenuItem`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 解除对应用 Swing 组件的当前限制将使开发人员能够添加诸如`JMenuItem`（带图像）、`JRadioButtonMenuItem`和`JCheckBoxMenuItem`等组件。
- en: The SystemTray API
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SystemTray API
- en: Only a single instance created within `SystemTray` class can exist.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`SystemTray`类中只能存在一个创建的实例。'
- en: '| Method | Purpose |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [add](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#add-java.awt.TrayIcon-)
    | Adds a tray icon to the system tray. The tray icon becomes visible in the system
    tray once it is added. The order in which icons are displayed in a tray is not
    specified — it is platform- and implementation-dependent. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [添加](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#add-java.awt.TrayIcon-)
    | 将一个托盘图标添加到系统托盘中。一旦添加，托盘图标将在系统托盘中可见。托盘中图标显示的顺序没有指定 — 这取决于平台和实现。'
- en: '| [getSystemTray](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#getSystemTray--)
    | Gets the `SystemTray` instance that represents the desktop''s tray area. This
    method always returns the same instance per application. On some platforms the
    system tray may not be supported. Use the `isSupported()` method to check if the
    system tray is supported. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [getSystemTray](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#getSystemTray--)
    | 获取代表桌面托盘区域的`SystemTray`实例。该方法始终为每个应用程序返回相同的实例。在某些平台上，可能不支持系统托盘。使用`isSupported()`方法检查系统托盘是否受支持。'
- en: '| [isSupported](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#isSupported--)
    | Returns information as to whether the system tray is supported on the current
    platform. In addition to displaying the tray icon, minimal system tray support
    includes either a pop-up menu (see the `TrayIcon.setPopupMenu(PopupMenu)` method)
    or an action event (see the `TrayIcon.addActionListener(ActionListener)`). |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [isSupported](https://docs.oracle.com/javase/8/docs/api/java/awt/SystemTray.html#isSupported--)
    | 返回有关当前平台是否支持系统托盘的信息。除了显示托盘图标外，最小的系统托盘支持包括弹出菜单（参见`TrayIcon.setPopupMenu(PopupMenu)`方法）或操作事件（参见`TrayIcon.addActionListener(ActionListener)`）。'
- en: The TrayIcon API
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TrayIcon API
- en: A `TrayIcon` object represents a tray icon that can be added to the system tray.
    A `TrayIcon` object can have a tooltip (text), an image, a pop-up menu, and a
    set of listeners associated with it.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个`TrayIcon`对象代表一个可以添加到系统托盘的托盘图标。`TrayIcon`对象可以具有工具提示（文本）、图像、弹出菜单和与之关联的一组监听器。
- en: '| Method | Purpose |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [setImageAutoSize](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html#setImageAutoSize-boolean-)
    | Sets the auto-size property. Auto-size determines whether the tray image is
    automatically sized to fit the space allocated for the image on the tray. By default,
    the auto-size property is set to `false`. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [setImageAutoSize](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html#setImageAutoSize-boolean-)
    | 设置自动调整大小属性。自动调整大小确定托盘图像是否自动调整大小以适应托盘上为图像分配的空间。默认情况下，自动调整大小属性设置为`false`。'
- en: '| [setPopupMenu](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html#setPopupMenu-java.awt.PopupMenu-)
    | Sets the pop-up menu for this `TrayIcon` object. If pop-up is `null`, no pop-up
    menu will be associated with this `TrayIcon` object. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [setPopupMenu](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html#setPopupMenu-java.awt.PopupMenu-)
    | 为此`TrayIcon`对象设置弹出菜单。如果弹出菜单为`null`，则不会将弹出菜单与此`TrayIcon`对象关联。'
- en: '| [setToolTip](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html#setToolTip-java.lang.String-)
    | Sets the tooltip string for this `TrayIcon` object. The tooltip is displayed
    automatically when the mouse hovers over the icon. Setting the tooltip to `null`
    removes any tooltip text. When displayed, the tooltip string may be truncated
    on some platforms; the number of characters that may be displayed is platform-dependent.
    |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [setToolTip](https://docs.oracle.com/javase/8/docs/api/java/awt/TrayIcon.html#setToolTip-java.lang.String-)
    | 为此`TrayIcon`对象设置工具提示字符串。当鼠标悬停在图标上时，工具提示将自动显示。将工具提示设置为`null`会移除任何工具提示文本。在某些平台上，工具提示字符串可能会被截断；可以显示的字符数取决于平台。'
- en: Examples That Use the SystemTray API
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 SystemTray API 的示例
- en: The following table lists the example that uses tray icons added to the system
    tray.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表列出了使用添加到系统托盘的托盘图标的示例。
- en: '| Example | Where Described | Notes |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 描述位置 | 备注 |'
- en: '| [`TrayIconDemo`](../examples/misc/index.html#TrayIconDemo) | This section
    | Creates the tray icon in the system tray, adds a pop-up menu to the tray icon.
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`TrayIconDemo`](../examples/misc/index.html#TrayIconDemo) | 此部分 | 在系统托盘中创建托盘图标，并向托盘图标添加弹出菜单。
    |'
