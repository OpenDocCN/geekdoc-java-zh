- en: Using the Limits
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用限制
- en: 原文：[https://docs.oracle.com/javase/tutorial/jaxp/limits/using.html](https://docs.oracle.com/javase/tutorial/jaxp/limits/using.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/jaxp/limits/using.html](https://docs.oracle.com/javase/tutorial/jaxp/limits/using.html)
- en: Environment Evaluation
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 环境评估
- en: Evaluation includes, at the system level, the amount of memory available for
    applications, whether XML, XSD, or XSL sources from untrusted sources are accepted
    and processed, and at the application level, whether certain constructs such as
    DTDs are used.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 评估包括在系统级别考虑应用程序可用的内存量，是否接受和处理来自不受信任来源的 XML、XSD 或 XSL 源，以及在应用程序级别考虑是否使用某些构造（如
    DTD）。
- en: Memory Setting and Limits
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内存设置和限制
- en: XML processing can be very memory intensive. The amount of memory that should
    be allowed to be consumed depends on the requirements of the applications in a
    specific environment. Processing of malformed XML data must be prevented from
    consuming excessive memory.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: XML 处理可能非常消耗内存。允许消耗的内存量取决于特定环境中应用程序的要求。必须防止处理格式不正确的 XML 数据消耗过多内存。
- en: The default limits are generally set to allow legitimate XML inputs for most
    applications with memory usage allowed for a small hardware system, such as a
    PC. It is recommended that the limits are set to the smallest possible values,
    so that any malformed input can be caught before it consumes large amount of memory.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 默认限制通常设置为允许大多数应用程序的合法 XML 输入，并允许小型硬件系统（如 PC）的内存使用。建议将限制设置为可能的最小值，以便在消耗大量内存之前捕获任何格式不正确的输入。
- en: 'The limits are correlated, but not entirely redundant. You should set appropriate
    values for all of the limits: usually the limits should be set to a much smaller
    value than the default.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这些限制是相关的，但并非完全冗余。您应为所有限制设置适当的值：通常限制应设置为比默认值小得多的值。
- en: As an example, the `ENTITY_EXPANSION_LIMIT` and `GENERAL_ENTITY_SIZE_LIMIT`
    can be set to prevent excessive entity references. But when the exact combination
    of the expansion and entity sizes are unknown, the `TOTAL_ENTITY_SIZE_LIMIT` can
    serve as a overall control. Similarly, while `TOTAL_ENTITY_SIZE_LIMIT` controls
    the total size of a replacement text, if the text is a very large chunk of XML,
    the `ENTITY_REPLACEMENT_LIMIT` sets a restriction on the total number of nodes
    that can appear in the text and prevents overloading the system.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以设置`ENTITY_EXPANSION_LIMIT`和`GENERAL_ENTITY_SIZE_LIMIT`来防止过多的实体引用。但是当扩展和实体大小的确切组合未知时，`TOTAL_ENTITY_SIZE_LIMIT`可以作为整体控制。同样，虽然`TOTAL_ENTITY_SIZE_LIMIT`控制替换文本的总大小，但如果文本是一个非常大的
    XML 块，`ENTITY_REPLACEMENT_LIMIT`会限制文本中可以出现的节点总数，并防止系统过载。
- en: Estimating the Limits Using the getEntityCountInfo Property
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过使用`getEntityCountInfo`属性估计限制
- en: 'To help you analyze what values you should set for the limits, a special property
    called `http://www.oracle.com/xml/jaxp/properties/getEntityCountInfo` is available.
    The following code snippet shows an example of using the property:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为帮助您分析应设置的限制值，提供了一个名为`http://www.oracle.com/xml/jaxp/properties/getEntityCountInfo`的特殊属性。以下代码片段显示了使用该属性的示例：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: See [Samples](sample.html) for more information on downloading the example code.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[示例](sample.html)以获取有关下载示例代码的更多信息。
- en: 'When the program is run with the DTD in W3C MathML 3.0, it prints out the following
    table:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当程序在 W3C MathML 3.0 中运行时，将打印出以下表格：
- en: '| Property | Limit | Total Size | Size | Entity Name |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 限制 | 总大小 | 大小 | 实体名称 |'
- en: '| `ENTITY_EXPANSION_LIMIT` | 64000 | 1417 | 0 | `null` |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `ENTITY_EXPANSION_LIMIT` | 64000 | 1417 | 0 | `null` |'
- en: '| `MAX_OCCUR_NODE_LIMIT` | 5000 | 0 | 0 | `null` |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `MAX_OCCUR_NODE_LIMIT` | 5000 | 0 | 0 | `null` |'
- en: '| `ELEMENT_ATTRIBUTE_LIMIT` | 10000 | 0 | 0 | `null` |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `ELEMENT_ATTRIBUTE_LIMIT` | 10000 | 0 | 0 | `null` |'
- en: '| `TOTAL_ENTITY_SIZE_LIMIT` | 50000000 | 55425 | 0 | `null` |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `TOTAL_ENTITY_SIZE_LIMIT` | 50000000 | 55425 | 0 | `null` |'
- en: '| `GENERAL_ENTITY_SIZE_LIMIT` | 0 | 0 | 0 | `null` |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `GENERAL_ENTITY_SIZE_LIMIT` | 0 | 0 | 0 | `null` |'
- en: '| `PARAMETER_ENTITY_SIZE_LIMIT` | 1000000 | 0 | 7303 | %MultiScriptExpression
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `PARAMETER_ENTITY_SIZE_LIMIT` | 1000000 | 0 | 7303 | %MultiScriptExpression
    |'
- en: '| `MAX_ELEMENT_DEPTH_LIMIT` | 0 | 2 | 0 | `null` |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `MAX_ELEMENT_DEPTH_LIMIT` | 0 | 2 | 0 | `null` |'
- en: '| `MAX_NAME_LIMIT` | 1000 | 13 | 13 | `null` |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `MAX_NAME_LIMIT` | 1000 | 13 | 13 | `null` |'
- en: '| `ENTITY_REPLACEMENT_LIMIT` | 3000000 | 0 | 0 | `null` |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `ENTITY_REPLACEMENT_LIMIT` | 3000000 | 0 | 0 | `null` |'
- en: In this example, the total number of entity references, or the entity expansion,
    is 1417; the default limit is 64000\. The total size of all entities is 55425;
    the default limit is 50000000\. The biggest parameter entity is `%MultiScriptExpression`
    with a length of 7303 after all references are resolved; the default limit is
    1000000.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，实体引用的总数，或实体扩展，为 1417；默认限制为 64000。所有实体的总大小为 55425；默认限制为 50000000。在解析所有引用后，最大的参数实体是
    `%MultiScriptExpression`，长度为 7303；默认限制为 1000000。
- en: If this is the largest file that the application is expected to process, it
    is recommended that the limits be set to smaller numbers. For example, 2000 for
    `ENTITY_EXPANSION_LIMIT`, 100000 for `TOTAL_ENTITY_SIZE_LIMIT`, and 10000 for
    `PARAMETER_ENTITY_SIZE_LIMIT`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是应用程序预计要处理的最大文件，请建议将限制设置为较小的数字。例如，`ENTITY_EXPANSION_LIMIT` 设置为 2000，`TOTAL_ENTITY_SIZE_LIMIT`
    设置为 100000，`PARAMETER_ENTITY_SIZE_LIMIT` 设置为 10000。
- en: Setting Limits
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置限制
- en: 'Limits can be set in the same way as other JAXP properties. They can be set
    through factory methods, or through the parser:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 限制可以像其他 JAXP 属性一样设置。它们可以通过工厂方法或解析器设置：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following example shows how to set limits using `DocumentBuilderFactory`:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示了如何使用 `DocumentBuilderFactory` 设置限制：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Using System Properties
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用系统属性
- en: System properties may be useful if changing code is not feasible.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改代码不可行，系统属性可能很有用。
- en: 'To set limits for an entire invocation of the JDK or JRE, set the system properties
    on the command line. To set the limits for only a portion of the application,
    the system properties may be set before the section and cleared afterwards. The
    following code shows how system properties may be used:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要为整个 JDK 或 JRE 的调用设置限制，请在命令行上设置系统属性。要仅为应用程序的一部分设置限制，可以在该部分之前设置系统属性，并在之后清除。以下代码显示了如何使用系统属性：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that the values of the properties are expected to be integers. A `NumberFormatException`
    will be thrown if the value entered does not contain a parsable integer; see the
    method [`parseInt(String)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#parseInt-java.lang.String-).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，属性的值应为整数。如果输入的值不包含可解析的整数，将抛出 `NumberFormatException`；请参阅方法 [`parseInt(String)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#parseInt-java.lang.String-)。
- en: See [Samples](sample.html) for more information on downloading the example code.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [示例](sample.html) 以获取有关下载示例代码的更多信息。
- en: Using the jaxp.properties File
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `jaxp.properties` 文件
- en: The `jaxp.properties` file is a configuration file. It is usually located at
    `${*java.home*}/lib/jaxp.properties` where `*java.home*` is the JRE install directory,
    for example, *[path to installation directory]*/jdk8/jre.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`jaxp.properties` 文件是一个配置文件。通常位于 `${*java.home*}/lib/jaxp.properties`，其中 `*java.home*`
    是 JRE 安装目录，例如，*[安装目录路径]*/jdk8/jre。'
- en: 'A limit can be set by adding the following line to the `jaxp.properties` file:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 可通过向 `jaxp.properties` 文件添加以下行来设置限制：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note that the property name is the same as that of the system property and has
    the prefix `jdk.xml`. The values of the properties are expected to be integers.
    A `NumberFormatException` will be thrown if the value entered does not contain
    a parsable integer; see the method [`parseInt(String)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#parseInt-java.lang.String-).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，属性名称与系统属性相同，并具有前缀 `jdk.xml`。属性的值应为整数。如果输入的值不包含可解析的整数，将抛出 `NumberFormatException`；请参阅方法
    [`parseInt(String)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#parseInt-java.lang.String-)。
- en: When the property is set in the file, all invocations of the JDK and JRE will
    observe the limit.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当在文件中设置属性时，所有 JDK 和 JRE 的调用都将遵守限制。
