- en: Guidelines for Securing Rich Internet Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护富互联网应用程序的指南
- en: 原文：[https://docs.oracle.com/javase/tutorial/deployment/doingMoreWithRIA/devGuidelines.html](https://docs.oracle.com/javase/tutorial/deployment/doingMoreWithRIA/devGuidelines.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://docs.oracle.com/javase/tutorial/deployment/doingMoreWithRIA/devGuidelines.html](https://docs.oracle.com/javase/tutorial/deployment/doingMoreWithRIA/devGuidelines.html)'
- en: The following guidelines provide steps you can take to reduce the vulnerability
    of the Rich Internet Applications (RIAs) that you provide to users.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下指南提供了您可以采取的步骤，以减少您向用户提供的富互联网应用程序（RIA）的漏洞性。
- en: '[Follow Secure Coding Guidelines](#coding)'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[遵循安全编码指南](#coding)'
- en: '[Test with the Latest Version of the JRE](#latestJRE)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用最新版本的JRE进行测试](#latestJRE)'
- en: '[Include Manifest Attributes](#manifest)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[包含清单属性](#manifest)'
- en: '[Use a Signed JNLP File](#jnlp)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用已签名的JNLP文件](#jnlp)'
- en: '[Sign and Time Stamp JAR Files](#signStamp)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[签名和时间戳JAR文件](#signStamp)'
- en: '[Use the HTTPS Protocol](#https)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用HTTPS协议](#https)'
- en: '[Avoid Local RIAs](#local)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[避免本地RIA](#local)'
- en: Follow Secure Coding Guidelines
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 遵循安全编码指南
- en: Follow the recommendations in the [Secure Coding Guidelines for the Java Programming
    Language](http://www.oracle.com/technetwork/java/seccodeguide-139067.html). Section
    4, "Accessibility and Extensibility" describes how to limit accessibility to classes
    and packages, which reduces the vulnerability of your code.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循[Java编程语言安全编码指南](http://www.oracle.com/technetwork/java/seccodeguide-139067.html)中的建议。第4节“可访问性和可扩展性”描述了如何限制对类和包的访问权限，从而降低代码的漏洞性。
- en: JavaScript code is considered insecure and is restricted to the security sandbox
    by default. Minimize interactions between your RIA and JavaScript code. Use the
    `AccessController.doPrivileged` block with care because it allows access from
    any HTML page or JavaScript code.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript代码被认为是不安全的，并且默认情况下受到安全沙箱的限制。最小化您的RIA与JavaScript代码之间的交互。谨慎使用`AccessController.doPrivileged`块，因为它允许从任何HTML页面或JavaScript代码访问。
- en: Test with the Latest Version of the JRE
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用最新版本的JRE进行测试
- en: Make sure that your RIA runs on the latest, secure version of the JRE. The Java
    platform supports the ability for RIAs to specify the Java version that is needed
    to run the RIA, however, requiring users to maintain more than one version of
    the JRE, especially older, insecure versions, is a security risk for the user.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您的RIA在最新的安全版本的JRE上运行。Java平台支持RIA指定运行RIA所需的Java版本的能力，然而，要求用户维护多个JRE版本，尤其是旧的、不安全的版本，对用户来说是一个安全风险。
- en: One of the benefits of RIAs is that updated versions of the RIA are automatically
    download to a user's system. Test your RIA against each update of the JRE and
    make sure that it works. If changes are needed, update your RIA on the server
    so that users can install the latest JRE and still run the RIA.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: RIA的一个好处是更新版本的RIA会自动下载到用户的系统中。测试您的RIA与每个JRE更新版本，并确保其正常工作。如果需要更改，请在服务器上更新您的RIA，以便用户可以安装最新的JRE并仍然运行RIA。
- en: Include Manifest Attributes
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包含清单属性
- en: Add attributes to the JAR file manifest that describe the properties of the
    RIA. Values in the JNLP file or the `applet` tag are compared to values in the
    manifest to verify that the correct code is run.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 向JAR文件清单添加属性，描述RIA的属性。与JNLP文件或`applet`标记中的值进行比较，以验证运行正确的代码。
- en: Request sandbox permissions when your RIA does not require access beyond the
    security sandbox. The Java sandbox provides additional protections for users,
    and users might not run a privileged application if they do not understand why
    it requests unrestricted access to their system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的RIA不需要超出安全沙箱的访问权限时，请请求沙箱权限。Java沙箱为用户提供了额外的保护，如果用户不理解为什么需要无限制访问其系统，则可能不运行特权应用程序。
- en: Manifest attributes can also be used to identify the locations from which your
    RIA can be accessed. This includes locations from which JavaScript code can call
    your RIA, and locations of JNLP files or applet tags that can start your RIA.
    See [Enhancing Security with Manifest Attributes](../jar/secman.html) for information
    on the manifest attributes that are available.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 清单属性还可用于标识可以访问您的RIA的位置。这包括JavaScript代码可以调用您的RIA的位置，以及可以启动您的RIA的JNLP文件或applet标记的位置。有关可用的清单属性的信息，请参阅[使用清单属性增强安全性](../jar/secman.html)。
- en: Use a Signed JNLP File
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用已签名的JNLP文件
- en: If your RIA needs to access non-secure system properties or JVM arguments, use
    a signed JNLP. If some variation between the external and internal JNLP files
    is required, use JNLP templates. See [Signed JNLP Files](https://docs.oracle.com/javase/8/docs/technotes/guides/deploy/signed_jnlp.html)
    in the Java Platform, Standard Edition Deployment Guide for information.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的 RIA 需要访问非安全系统属性或 JVM 参数，请使用已签名的 JNLP。如果需要外部和内部 JNLP 文件之间的某种变化，请使用 JNLP
    模板。查看 [已签名的 JNLP 文件](https://docs.oracle.com/javase/8/docs/technotes/guides/deploy/signed_jnlp.html)
    了解信息。
- en: To access non-secure system properties or JVM arguments, include the property
    or argument in the JNLP file as described in [Setting Trusted Arguments and Secure
    Properties](../doingMoreWithRIA/settingArgsProperties.html).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问非安全系统属性或 JVM 参数，请按照 [设置受信任参数和安全属性](../doingMoreWithRIA/settingArgsProperties.html)
    中描述的在 JNLP 文件中包含属性或参数。
- en: Sign and Time Stamp JAR Files
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对 JAR 文件进行签名和时间戳
- en: Obtain a code signing certificate from a trusted certificate authority and use
    it to sign the JAR files for your RIA. Deploy to users only RIAs that are signed
    with a valid certificate.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从受信任的证书颁发机构获取代码签名证书，并用它来签署您的 RIA 的 JAR 文件。仅部署使用有效证书签名的 RIA 给用户。
- en: When you sign your JAR file, also time stamp the signature. Time stamping verifies
    that the certificate was valid at the time that the JAR was signed, so the RIA
    is not automatically blocked when the certificate expires. See [Signing JAR Files](../jar/signing.html)
    for information on signing and time stamping.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当您对 JAR 文件进行签名时，也要对签名进行时间戳。时间戳验证证书在签署 JAR 时是有效的，因此当证书过期时，RIA 不会自动被阻止。查看 [签署
    JAR 文件](../jar/signing.html) 了解有关签署和时间戳的信息。
- en: Self-signed and unsigned RIAs are considered unsafe and are not allowed to run
    unless an exception site list or deployment rule set is set up to allow specific
    applications. However, self-signing can be useful for testing purposes. To test
    using your self-signed RIA, you can import the self-signed certificate into the
    trusted keystore.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 自签名和未签名的 RIA 被视为不安全，并且除非设置例外站点列表或部署规则集以允许特定应用程序运行，否则不允许运行。但是，自签名对于测试目的可能是有用的。要使用您的自签名
    RIA 进行测试，您可以将自签名证书导入到受信任的密钥库中。
- en: Use the HTTPS Protocol
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 HTTPS 协议
- en: Use the HTTPS protocol for the web server from which users get your RIA. The
    HTTPS protocol is encrypted and validated by the server, making it more difficult
    for anyone to tamper with your RIA.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 HTTPS 协议为用户获取您的 RIA 的 Web 服务器。HTTPS 协议是加密的，并由服务器验证，使任何人更难篡改您的 RIA。
- en: Avoid Local RIAs
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免本地的 RIA
- en: Local RIAs are not intended for use in production. To ensure that users run
    the code that you intend for them to run, host your RIA on an application server.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本地的 RIA 不适用于生产环境。为确保用户运行您打算让他们运行的代码，请将您的 RIA 托管在应用程序服务器上。
- en: For testing, the use of a web server is recommended. Another option is to add
    your application to the exception site list, which is managed in the Security
    tab of the Java Control Panel.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试，建议使用 Web 服务器。另一个选项是将您的应用程序添加到例外站点列表中，在 Java 控制面板的安全选项卡中进行管理。
