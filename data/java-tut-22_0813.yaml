- en: Running the Example Programs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行示例程序
- en: 原文：[https://docs.oracle.com/javase/tutorial/rmi/running.html](https://docs.oracle.com/javase/tutorial/rmi/running.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/rmi/running.html](https://docs.oracle.com/javase/tutorial/rmi/running.html)
- en: A Note About Security
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于安全性的说明
- en: 'The server and client programs run with a security manager installed. When
    you run either program, you need to specify a security policy file so that the
    code is granted the security permissions it needs to run. Here is an example [policy
    file to use with the server program](examples/server.policy):'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器和客户端程序都安装了安全管理器。当您运行任一程序时，您需要指定一个安全策略文件，以便代码被授予其运行所需的安全权限。这是一个用于服务器程序的示例[策略文件](examples/server.policy)。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here is an example [policy file to use with the client program](examples/client.policy):'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用于客户端程序的示例[策略文件](examples/client.policy)。
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For both example policy files, all permissions are granted to the classes in
    the program's local class path, because the local application code is trusted,
    but no permissions are granted to code downloaded from other locations. Therefore,
    the compute engine server restricts the tasks that it executes (whose code is
    not known to be trusted and might be hostile) from performing any operations that
    require security permissions. The example client's `Pi` task does not require
    any permissions to execute.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两个示例策略文件，所有权限都授予程序本地类路径中的类，因为本地应用程序代码是受信任的，但不授予从其他位置下载的代码任何权限。因此，计算引擎服务器限制其执行的任务（其代码未知是否受信任且可能具有敌意）执行需要安全权限的任何操作。示例客户端的`Pi`任务不需要任何权限来执行。
- en: In this example, the policy file for the server program is named `server.policy`,
    and the policy file for the client program is named `client.policy`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，服务器程序的策略文件名为`server.policy`，客户端程序的策略文件名为`client.policy`。
- en: Starting the Server
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动服务器
- en: Before starting the compute engine, you need to start the RMI registry. The
    RMI registry is a simple server-side bootstrap naming facility that enables remote
    clients to obtain a reference to an initial remote object. It can be started with
    the `rmiregistry` command. Before you execute `rmiregistry`, you must make sure
    that the shell or window in which you will run `rmiregistry` either has no `CLASSPATH`
    environment variable set or has a `CLASSPATH` environment variable that does not
    include the path to any classes that you want downloaded to clients of your remote
    objects.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动计算引擎之前，您需要启动RMI注册表。RMI注册表是一个简单的服务器端引导命名工具，使远程客户端能够获取对初始远程对象的引用。它可以通过`rmiregistry`命令启动。在执行`rmiregistry`之前，您必须确保您将运行`rmiregistry`的shell或窗口要么没有设置`CLASSPATH`环境变量，要么具有不包括您希望下载到远程对象的客户端的任何类路径的`CLASSPATH`环境变量。
- en: To start the registry on the server, execute the `rmiregistry` command. This
    command produces no output and is typically run in the background. For this example,
    the registry is started on the host `mycomputer`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要在服务器上启动注册表，请执行`rmiregistry`命令。此命令不会产生任何输出，并且通常在后台运行。在此示例中，注册表在主机`mycomputer`上启动。
- en: '**Microsoft Windows** (use `javaw` if `start` is not available):'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft Windows**（如果`start`不可用，请使用`javaw`）：'
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Solaris OS or Linux**:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Solaris操作系统或Linux**：'
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: By default, the registry runs on port 1099\. To start the registry on a different
    port, specify the port number on the command line. Do not forget to unset your
    `CLASSPATH` environment variable.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，注册表在端口1099上运行。要在不同端口上启动注册表，请在命令行上指定端口号。不要忘记取消设置`CLASSPATH`环境变量。
- en: '**Microsoft Windows**:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft Windows**：'
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Solaris OS or Linux**:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Solaris操作系统或Linux**：'
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Once the registry is started, you can start the server. You need to make sure
    that both the `compute.jar` file and the remote object implementation class are
    in your class path. When you start the compute engine, you need to specify, using
    the `java.rmi.server.codebase` property, where the server's classes are network
    accessible. In this example, the server-side classes to be made available for
    downloading are the `Compute` and `Task` interfaces, which are available in the
    `compute.jar` file in the `public_html\classes` directory of user `ann`. The compute
    engine server is started on the host `mycomputer`, the same host on which the
    registry was started.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦注册表启动，你可以启动服务器。你需要确保`compute.jar`文件和远程对象实现类都在你的类路径中。当你启动计算引擎时，你需要使用`java.rmi.server.codebase`属性指定服务器类的网络访问位置。在这个例子中，要提供下载的服务器端类是`Compute`和`Task`接口，在用户`ann`的`public_html\classes`目录中的`compute.jar`文件中可用。计算引擎服务器在主机`mycomputer`上启动，与注册表启动的主机相同。
- en: '**Microsoft Windows**:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft Windows**:'
- en: '[PRE6]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Solaris OS or Linux**:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**Solaris OS 或 Linux**:'
- en: '[PRE7]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The above `java` command defines the following system properties:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 上述`java`命令定义了以下系统属性：
- en: The `java.rmi.server.codebase` property specifies the location, a codebase URL,
    from which the definitions for classes originating *from* this server can be downloaded.
    If the codebase specifies a directory hierarchy (as opposed to a JAR file), you
    must include a trailing slash at the end of the codebase URL.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`java.rmi.server.codebase`属性指定了一个代码库 URL，从这个服务器可以下载源自*的类的定义。如果代码库指定了一个目录层次结构（而不是一个
    JAR 文件），你必须在代码库 URL 的末尾包含一个斜杠。'
- en: The `java.rmi.server.hostname` property specifies the host name or address to
    put in the stubs for remote objects exported in this Java virtual machine. This
    value is the host name or address used by clients when they attempt to communicate
    remote method invocations. By default, the RMI implementation uses the server's
    IP address as indicated by the `java.net.InetAddress.getLocalHost` API. However,
    sometimes, this address is not appropriate for all clients and a fully qualified
    host name would be more effective. To ensure that RMI uses a host name (or IP
    address) for the server that is routable from all potential clients, set the `java.rmi.server.hostname`
    property.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`java.rmi.server.hostname`属性指定了要放在此 Java 虚拟机中导出的远程对象存根中的主机名或地址。当客户端尝试通信远程方法调用时，客户端使用的值是主机名或地址。默认情况下，RMI
    实现使用服务器的 IP 地址，如`java.net.InetAddress.getLocalHost` API 所示。然而，有时，这个地址对于所有客户端都不合适，一个完全合格的主机名会更有效。为了确保
    RMI 使用一个对所有潜在客户端都可路由的主机名（或 IP 地址）作为服务器，设置`java.rmi.server.hostname`属性。'
- en: The `java.security.policy` property is used to specify the policy file that
    contains the permissions you intend to grant.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`java.security.policy`属性用于指定包含您打算授予的权限的策略文件。'
- en: Starting the Client
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动客户端
- en: 'Once the registry and the compute engine are running, you can start the client,
    specifying the following:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦注册表和计算引擎运行起来，你可以启动客户端，指定以下内容：
- en: The location where the client serves its classes (the `Pi` class) by using the
    `java.rmi.server.codebase` property
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端提供其类（`Pi`类）的位置，使用`java.rmi.server.codebase`属性
- en: The `java.security.policy` property, which is used to specify the security policy
    file that contains the permissions you intend to grant to various pieces of code
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`java.security.policy`属性用于指定包含您打算授予各种代码片段的权限的安全策略文件'
- en: As command-line arguments, the host name of the server (so that the client knows
    where to locate the `Compute` remote object) and the number of decimal places
    to use in the ![the pi symbol](../Images/1000ed6961e308609010dca5338f3e68.png)
    calculation
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为命令行参数，服务器的主机名（以便客户端知道在哪里找到`Compute`远程对象）和在![π符号](../Images/1000ed6961e308609010dca5338f3e68.png)计算中使用的小数位数
- en: 'Start the client on another host (a host named `mysecondcomputer`, for example)
    as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一台主机上启动客户端（例如名为`mysecondcomputer`的主机）如下：
- en: '* * *'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Microsoft Windows**:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft Windows**:'
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Solaris OS or Linux**:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**Solaris OS 或 Linux**:'
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note that the class path is set on the command line so that the interpreter
    can find the client classes and the JAR file containing the interfaces. Also note
    that the value of the `java.rmi.server.codebase` property, which specifies a directory
    hierarchy, ends with a trailing slash.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，类路径是在命令行上设置的，以便解释器可以找到客户端类和包含接口的 JAR 文件。还要注意，`java.rmi.server.codebase`属性的值，指定一个目录层次结构，以斜杠结尾。
- en: 'After you start the client, the following output is displayed:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动客户端后，将显示以下输出：
- en: '[PRE10]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The following figure illustrates where the `rmiregistry`, the `ComputeEngine`
    server, and the `ComputePi` client obtain classes during program execution.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示说明了在程序执行期间`rmiregistry`、`ComputeEngine`服务器和`ComputePi`客户端获取类的位置。
- en: '![the registry, the compute engine, and the client obtaining classes during
    program execution](../Images/91058ce266bc5f55ff3a2428253468af.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![在程序执行期间注册表、计算引擎和客户端获取类](../Images/91058ce266bc5f55ff3a2428253468af.png)'
- en: When the `ComputeEngine` server binds its remote object reference in the registry,
    the registry downloads the `Compute` and `Task` interfaces on which the stub class
    depends. These classes are downloaded from either the `ComputeEngine` server's
    web server or file system, depending on the type of codebase URL used when starting
    the server.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当`ComputeEngine`服务器在注册表中绑定其远程对象引用时，注册表会下载存根类依赖的`Compute`和`Task`接口。这些类是从`ComputeEngine`服务器的Web服务器或文件系统下载的，具体取决于启动服务器时使用的代码库URL的类型。
- en: Because the `ComputePi` client has both the `Compute` and the `Task` interfaces
    available in its class path, it loads their definitions from its class path, not
    from the server's codebase.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`ComputePi`客户端在其类路径中同时具有`Compute`和`Task`接口的定义，它从其类路径加载它们的定义，而不是从服务器的代码库加载。
- en: Finally, the `Pi` class is loaded into the `ComputeEngine` server's Java virtual
    machine when the `Pi` object is passed in the `executeTask` remote call to the
    `ComputeEngine` object. The `Pi` class is loaded by the server from either the
    client's web server or file system, depending on the type of codebase URL used
    when starting the client.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当`Pi`对象在`executeTask`远程调用中传递给`ComputeEngine`对象时，`Pi`类被加载到`ComputeEngine`服务器的Java虚拟机中。`Pi`类是由服务器从客户端的Web服务器或文件系统加载的，具体取决于启动客户端时使用的代码库URL的类型。
