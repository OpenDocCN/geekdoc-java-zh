- en: Converting Non-Unicode Text
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换非Unicode文本
- en: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/convertintro.html](https://docs.oracle.com/javase/tutorial/i18n/text/convertintro.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/convertintro.html](https://docs.oracle.com/javase/tutorial/i18n/text/convertintro.html)
- en: In the Java programming language `char` values represent Unicode characters.
    Unicode is a 16-bit character encoding that supports the world's major languages.
    You can learn more about the Unicode standard at the [Unicode Consortium Web site](http://www.unicode.org/)
    .
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在Java编程语言中，`char`值表示Unicode字符。Unicode是一种支持世界主要语言的16位字符编码。您可以在[Unicode联盟网站](http://www.unicode.org/)了解有关Unicode标准的更多信息。
- en: 'Few text editors currently support Unicode text entry. The text editor we used
    to write this section''s code examples supports only ASCII characters, which are
    limited to 7 bits. To indicate Unicode characters that cannot be represented in
    ASCII, such as ö, we used the `\uXXXX` escape sequence. Each `X` in the escape
    sequence is a hexadecimal digit. The following example shows how to indicate the
    ö character with an escape sequence:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 目前很少有文本编辑器支持Unicode文本输入。我们用来编写本节代码示例的文本编辑器仅支持ASCII字符，这些字符仅限于7位。为了表示ASCII无法表示的Unicode字符，例如ö，我们使用`\uXXXX`转义序列。转义序列中的每个`X`都是一个十六进制数字。以下示例显示了如何使用转义序列表示ö字符：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'A variety of character encodings are used by systems around the world. Currently
    few of these encodings conform to Unicode. Because your program expects characters
    in Unicode, the text data it gets from the system must be converted into Unicode,
    and vice versa. Data in text files is automatically converted to Unicode when
    its encoding matches the default file encoding of the Java Virtual Machine. You
    can identify the default file encoding by creating an `OutputStreamWriter` using
    it and asking for its canonical name:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 世界各地的系统使用各种字符编码。目前，很少有这些编码符合Unicode标准。因为您的程序期望字符为Unicode格式，所以从系统获取的文本数据必须转换为Unicode格式，反之亦然。当文本文件的编码与Java虚拟机的默认文件编码匹配时，文本数据会自动转换为Unicode格式。您可以通过创建一个`OutputStreamWriter`并询问其规范名称来确定默认文件编码：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the default file encoding differs from the encoding of the text data you
    want to process, then you must perform the conversion yourself. You might need
    to do this when processing text from another country or computing platform.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果默认文件编码与您要处理的文本数据的编码不同，则必须自行进行转换。当处理来自其他国家或计算平台的文本时，您可能需要这样做。
- en: This section discusses the APIs you use to translate non-Unicode text into Unicode.
    Before using these APIs, you should verify that the character encoding you wish
    to convert into Unicode is supported. The list of supported character encodings
    is not part of the Java programming language specification. Therefore the character
    encodings supported by the APIs may vary with platform. To see which encodings
    the Java Development Kit supports, see the [Supported Encodings](https://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html)
    document.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了用于将非Unicode文本转换为Unicode的API。在使用这些API之前，您应该验证要转换为Unicode的字符编码是否受支持。支持的字符编码列表不是Java编程语言规范的一部分。因此，API支持的字符编码可能因平台而异。要查看Java开发工具包支持的编码，请参阅[支持的编码](https://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html)文档。
- en: The material that follows describes two techniques for converting non-Unicode
    text to Unicode. You can convert non-Unicode byte arrays into `String` objects,
    and vice versa. Or you can translate between streams of Unicode characters and
    byte streams of non-Unicode text.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的内容描述了将非Unicode文本转换为Unicode的两种技术。您可以将非Unicode字节数组转换为`String`对象，反之亦然。或者您可以在Unicode字符流和非Unicode文本的字节流之间进行转换。
- en: '[Byte Encodings and Strings](string.html)'
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[字节编码和字符串](string.html)'
- en: This section shows you how to convert non-Unicode byte arrays into `String`
    objects, and vice versa.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本节向您展示如何将非Unicode字节数组转换为`String`对象，反之亦然。
- en: '[Character and Byte Streams](stream.html)'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[字符流和字节流](stream.html)'
- en: In this section you'll learn how to translate between streams of Unicode characters
    and byte streams of non-Unicode text.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何在Unicode字符流和非Unicode文本的字节流之间进行转换。
