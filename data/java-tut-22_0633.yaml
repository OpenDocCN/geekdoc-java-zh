- en: 'Lesson: Service Providers for Internationalization'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 教程：国际化的服务提供者
- en: 原文：[https://docs.oracle.com/javase/tutorial/i18n/serviceproviders/index.html](https://docs.oracle.com/javase/tutorial/i18n/serviceproviders/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/i18n/serviceproviders/index.html](https://docs.oracle.com/javase/tutorial/i18n/serviceproviders/index.html)
- en: Service providers for internationalization enable the plug-in of locale-dependent
    data and services. Because locale-dependent data and services can be plugged-in,
    third parties are able to provide implementations of most locale-sensitive classes
    in the `java.text` and `java.util` packages.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 国际化的服务提供者使得可以插入区域相关的数据和服务。由于可以插入区域相关的数据和服务，第三方能够提供`java.text`和`java.util`包中大多数区域敏感类的实现。
- en: A service is a set of programming interfaces and classes that provide access
    to a specific application's functionality or feature. A service provider interface
    (SPI) is the set of public interfaces and abstract classes that a service defines.
    A service provider implements the SPI. Service providers enable you to create
    extensible applications, which you can extend without modifying its original code
    base. You can enhance their functionality with new plug-ins or modules. For more
    information about service providers and extensible applications, see [Creating
    Extensible Applications](../../ext/basics/spi.html).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 服务是一组提供对特定应用程序功能或特性访问的编程接口和类。服务提供者接口（SPI）是服务定义的一组公共接口和抽象类。服务提供者实现了SPI。服务提供者使您能够创建可扩展的应用程序，可以在不修改其原始代码库的情况下进行扩展。您可以通过新的插件或模块增强其功能。有关服务提供者和可扩展应用程序的更多信息，请参阅[创建可扩展应用程序](../../ext/basics/spi.html)。
- en: 'You can use service providers for internationalization to provide custom implementations
    of the following locale-sensitive classes:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用国际化的服务提供者来提供以下区域敏感类的自定义实现：
- en: '[`BreakIterator`](https://docs.oracle.com/javase/8/docs/api/java/text/BreakIterator.html)
    objects'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`BreakIterator`](https://docs.oracle.com/javase/8/docs/api/java/text/BreakIterator.html)
    对象'
- en: '[`Collator`](https://docs.oracle.com/javase/8/docs/api/java/text/Collator.html)
    objects'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Collator`](https://docs.oracle.com/javase/8/docs/api/java/text/Collator.html)
    对象'
- en: Language code, country code, and variant name for the [`Locale`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html)
    class
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Locale`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html)
    类的语言代码、国家代码和变体名称'
- en: Time zone names
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时区名称
- en: Currency symbols
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 货币符号
- en: '[`DateFormat`](https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html)
    objects'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DateFormat`](https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html)
    对象'
- en: '[`DateFormatSymbols`](https://docs.oracle.com/javase/8/docs/api/java/text/DateFormatSymbols.html)
    objects'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DateFormatSymbols`](https://docs.oracle.com/javase/8/docs/api/java/text/DateFormatSymbols.html)
    对象'
- en: '[`NumberFormat`](https://docs.oracle.com/javase/8/docs/api/java/text/NumberFormat.html)
    objects'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`NumberFormat`](https://docs.oracle.com/javase/8/docs/api/java/text/NumberFormat.html)
    对象'
- en: '[`DecimalFormatSymbols`](https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormatSymbols.html)
    objects'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DecimalFormatSymbols`](https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormatSymbols.html)
    对象'
- en: 'The corresponding SPIs are contained both in `java.text.spi` and in `java.util.spi`
    packages:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的SPI包含在`java.text.spi`和`java.util.spi`包中：
- en: '| `java.util.spi` | `java.text.spi` |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `java.util.spi` | `java.text.spi` |'
- en: '|'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[`CurrencyNameProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/CurrencyNameProvider.html)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CurrencyNameProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/CurrencyNameProvider.html)'
- en: '[`LocaleServiceProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/LocaleServiceProvider.html)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`LocaleServiceProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/LocaleServiceProvider.html)'
- en: '[`TimeZoneNameProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/TimeZoneNameProvider.html)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TimeZoneNameProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/TimeZoneNameProvider.html)'
- en: '|'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[`BreakIteratorProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/BreakIteratorProvider.html)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`BreakIteratorProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/BreakIteratorProvider.html)'
- en: '[`CollatorProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/CollatorProvider.html)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CollatorProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/CollatorProvider.html)'
- en: '[`DateFormatProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/DateFormatProvider.html)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DateFormatProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/DateFormatProvider.html)'
- en: '[`DateFormatSymbolsProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/DateFormatSymbolsProvider.html)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DateFormatSymbolsProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/DateFormatSymbolsProvider.html)'
- en: '[`DecimalFormatSymbolsProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/DecimalFormatSymbolsProvider.html)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DecimalFormatSymbolsProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/DecimalFormatSymbolsProvider.html)'
- en: '[`NumberFormatProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/NumberFormatProvider.html)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`NumberFormatProvider`](https://docs.oracle.com/javase/8/docs/api/java/text/spi/NumberFormatProvider.html)'
- en: '|'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'For example, if you want to provide a `NumberFormat` object for a new locale,
    implement the `java.text.spi.NumberFormatProvider` class and implement these methods:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您想为新的区域设置提供一个`NumberFormat`对象，请实现`java.text.spi.NumberFormatProvider`类并实现以下方法：
- en: '`getCurrencyInstance(Locale locale)`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getCurrencyInstance(Locale locale)`'
- en: '`getIntegerInstance(Locale locale)`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getIntegerInstance(Locale locale)`'
- en: '`getNumberInstance(Locale locale)`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getNumberInstance(Locale locale)`'
- en: '`getPercentInstance(Locale locale)`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getPercentInstance(Locale locale)`'
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: These methods first check whether the Java runtime environment supports the
    requested locale; if so, the methods use that support. Otherwise, the methods
    invoke the `getAvailableLocales` methods of installed providers for the appropriate
    interface to find a provider that supports the requested locale.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法首先检查Java运行时环境是否支持请求的区域设置；如果支持，则使用该支持。否则，方法会调用已安装提供者的适当接口的`getAvailableLocales`方法，以找到支持请求的区域设置的提供者。
- en: For an in-depth example of how to use service providers for internationalization,
    see [Installing a Custom Resource Bundle as an Extension](../../i18n/serviceproviders/resourcebundlecontrolprovider.html).
    This section shows you how to implement the [`ResourceBundleControlProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/ResourceBundleControlProvider.html)
    interface, which enables you to use any custom `ResourceBundle.Control` classes
    without any additional changes to the source code of your application.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要深入了解如何使用国际化服务提供者的示例，请参阅[将自定义资源包作为扩展安装](../../i18n/serviceproviders/resourcebundlecontrolprovider.html)。本节展示了如何实现[`ResourceBundleControlProvider`](https://docs.oracle.com/javase/8/docs/api/java/util/spi/ResourceBundleControlProvider.html)接口，使您能够在不对应用程序源代码进行任何其他更改的情况下使用任何自定义`ResourceBundle.Control`类。
