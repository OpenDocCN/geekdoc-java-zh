- en: Java Web Start and Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java Web Start和安全性
- en: 原文：[https://docs.oracle.com/javase/tutorial/deployment/webstart/security.html](https://docs.oracle.com/javase/tutorial/deployment/webstart/security.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/deployment/webstart/security.html](https://docs.oracle.com/javase/tutorial/deployment/webstart/security.html)
- en: 'This section describes the basics of security for applications deployed through
    Java Web Start and includes:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了通过Java Web Start部署的应用程序的安全基础知识，包括：
- en: 'Applications launched with Java Web Start are, by default, run in a restricted
    environment, known as a *sandbox*. In this sandbox, Java Web Start:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Java Web Start启动的应用程序默认在被称为*沙盒*的受限环境中运行。在这个沙盒中，Java Web Start：
- en: Protects users against malicious code that could affect local files
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护用户免受可能影响本地文件的恶意代码
- en: Protects enterprises against code that could attempt to access or destroy data
    on networks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护企业免受可能试图访问或破坏网络数据的代码
- en: Sandbox applications that are launched by Java Web Start remain in this sandbox,
    meaning they cannot access local files or the network. See [Security in Rich Internet
    Applications](../doingMoreWithRIA/security.html) for information.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Java Web Start启动的沙箱应用程序仍保持在此沙箱中，这意味着它们无法访问本地文件或网络。有关详细信息，请参阅[富互联网应用程序中的安全性](../doingMoreWithRIA/security.html)
- en: Dynamic Downloading of HTTPS Certificates
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动态下载HTTPS证书
- en: Java Web Start dynamically imports certificates as browsers typically do. To
    do this, Java Web Start sets its own `https` handler, using the `java.protocol.handler.pkgs`
    system properties, to initialize defaults for the [`SSLSocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html)
    and [`HostnameVerifier`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HostnameVerifier.html).
    It sets the defaults with the methods [`HttpsURLConnection.setDefaultSSLSocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setDefaultSSLSocketFactory-javax.net.ssl.SSLSocketFactory-)
    and [`HttpsURLConnection.setDefaultHostnameVerifier`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setDefaultHostnameVerifier-javax.net.ssl.HostnameVerifier-).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Java Web Start动态导入证书，就像浏览器通常做的那样。为此，Java Web Start设置了自己的`https`处理程序，使用`java.protocol.handler.pkgs`系统属性来初始化[`SSLSocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html)和[`HostnameVerifier`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HostnameVerifier.html)的默认值。它使用方法[`HttpsURLConnection.setDefaultSSLSocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setDefaultSSLSocketFactory-javax.net.ssl.SSLSocketFactory-)和[`HttpsURLConnection.setDefaultHostnameVerifier`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/HttpsURLConnection.html#setDefaultHostnameVerifier-javax.net.ssl.HostnameVerifier-)设置默认值。
- en: If your application uses these two methods, ensure that they are invoked after
    the Java Web Start initializes the `https` handler, otherwise your custom handler
    will be replaced by the Java Web Start default handler.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序使用这两种方法，请确保它们在Java Web Start初始化`https`处理程序之后被调用，否则您的自定义处理程序将被Java Web
    Start默认处理程序替换。
- en: 'You can ensure that your own customized `SSLSocketFactory` and `HostnameVerifiter`
    are used by doing one of the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以确保使用自定义的`SSLSocketFactory`和`HostnameVerifier`之一：
- en: Install your own `https` handler, to replace the Java Web Start `https` handler.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装您自己的`https`处理程序，以替换Java Web Start的`https`处理程序。
- en: In your application, invoke `HttpsURLConnection.setDefaultSSLSocketFactory`
    or `HttpsURLConnection.setDefaultHostnameVerifier` only after the first `https
    URL` object is created, which executes the Java Web Start `https` handler initialization
    code first.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的应用程序中，只有在创建第一个`https URL`对象之后才调用`HttpsURLConnection.setDefaultSSLSocketFactory`或`HttpsURLConnection.setDefaultHostnameVerifier`，这会首先执行Java
    Web Start的`https`处理程序初始化代码。
