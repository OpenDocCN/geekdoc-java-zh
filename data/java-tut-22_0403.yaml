- en: Solving Common Component Problems
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决常见组件问题
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/problems.html](https://docs.oracle.com/javase/tutorial/uiswing/components/problems.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/problems.html](https://docs.oracle.com/javase/tutorial/uiswing/components/problems.html)
- en: 'This section discusses problems that you might encounter while using components.
    If you do not find your problem in this section, consult the following sections:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论您在使用组件时可能遇到的问题。如果在本节中找不到您的问题，请参考以下章节：
- en: '[Solving Common Problems Using Other Swing Features](../misc/problems.html)'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解决使用其他Swing功能的常见问题](../misc/problems.html)'
- en: '[Solving Common Layout Problems](../layout/problems.html)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解决常见布局问题](../layout/problems.html)'
- en: '[Solving Common Event-Handling Problems](../events/problems.html)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解决常见事件处理问题](../events/problems.html)'
- en: '[Solving Common Painting Problems](../painting/problems.html)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解决常见绘制问题](../painting/problems.html)'
- en: '**Problem:** I am having trouble implementing a model (or some other code that
    is similar to something already in Java SE Platform, Standard Edition).'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 我在实现一个模型（或者类似于Java SE平台标准版中的某些代码）时遇到了困难。'
- en: Look at the Java SE source code. It is distributed with the JDK, and it is a
    great resource for finding code examples of implementing models, firing events,
    and the like.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看Java SE源代码。它随JDK一起分发，是一个很好的资源，可以找到实现模型、触发事件等代码示例。
- en: '**Problem:** Whenever the text in my text field updates, the text field''s
    size changes.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 每当文本字段中的文本更新时，文本字段的大小会发生变化。'
- en: You should specify the preferred width of the text field by specifying the number
    of columns it should have room to display. To do this, you can use either an `int`
    argument to the `JTextField` constructor or the `setColumns` method.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该通过指定文本字段应具有的列数来指定文本字段的首选宽度。为此，您可���使用`JTextField`构造函数的`int`参数或`setColumns`方法。
- en: '**Problem:** Certain areas of the content pane look weird when they are repainted.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 当重新绘制时，内容窗格的某些区域看起来很奇怪。'
- en: If you set the content pane, make sure it is opaque. You can do this by invoking
    `setOpaque(true)` on your content pane. Note that although `JPanel`s are opaque
    in most look and feels, that is not true in the GTK+ look and feel. See [Adding
    Components to the Content Pane](toplevel.html#contentpane) for details.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设置内容窗格，请确保它是不透明的。您可以通过在内容窗格上调用`setOpaque(true)`来实现。请注意，尽管在大多数外观和感觉中`JPanel`是不透明的，但在GTK+外观和感觉中并非如此。有关详细信息，请参阅[将组件添加到内容窗格](toplevel.html#contentpane)。
- en: If one or more of your components performs custom painting, make sure you implemented
    it correctly. See [Solving Common Painting Problems](../painting/problems.html)
    for help.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的一个或多个组件执行自定义绘制，请确保您正确实现了它。查看[解决常见绘制问题](../painting/problems.html)以获取帮助。
- en: You might have a thread safety problem. See the next entry.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可能遇到了线程安全问题。请参阅下一条目。
- en: '**Problem:** My program is exhibiting weird symptoms that sometimes seem to
    be related to timing.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 我的程序表现出一些奇怪的症状，有时似乎与时间有关。'
- en: Make sure your code is thread-safe. See [Concurrency in Swing](../concurrency/index.html)
    for details.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保您的代码是线程安全的。有关详细信息，请参阅[Swing中的并发性](../concurrency/index.html)。
- en: '**Problem:** My modal dialog gets lost behind other windows.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 我的模态对话框被其他窗口遮挡。'
- en: If the dialog has a null parent component, try setting it to a valid frame or
    component when you create it.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果对话框没有父组件，请在创建时尝试将其设置为有效的框架或组件。
- en: This bug was fixed in the 6.0 release. For more information, see [4255200](http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4255200).
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此错误已在6.0版本中修复。有关更多信息，请参阅[4255200](http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4255200)。
- en: '**Problem:** The scroll bar policies do not seem to be working as advertised.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 滚动条策略似乎没有按照广告中描述的那样工作。'
- en: Some Swing releases contain bugs in the implementations for the `VERTICAL_SCROLLBAR_AS_NEEDED`
    and the `HORIZONTAL_SCROLLBAR_AS_NEEDED` policies. If feasible for your project,
    use the most recent release of Swing.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些Swing版本中的实现可能存在`VERTICAL_SCROLLBAR_AS_NEEDED`和`HORIZONTAL_SCROLLBAR_AS_NEEDED`策略的错误。如果您的项目可行，尽量使用最新版本的Swing。
- en: If the scroll pane's client can change size dynamically, the program should
    set the client's preferred size and then call `revalidate` on the client.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果滚动窗格的客户端可以动态更改大小，则程序应设置客户端的首选大小，然后在客户端上调用`revalidate`。
- en: Make sure you specified the policy you intended for the orientation you intended.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保您为您打算的方向指定了所需的策略。
- en: '**Problem:** My scroll pane has no scroll bars.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 我的滚动窗格没有滚动条。'
- en: If you want a scroll bar to appear all the time, specify either `VERTICAL_SCROLLBAR_ALWAYS`
    or `HORIZONTAL_SCROLLBAR_ALWAYS` for the scroll bar policy as appropriate.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要始终显示滚动条，请根据需要指定 `VERTICAL_SCROLLBAR_ALWAYS` 或 `HORIZONTAL_SCROLLBAR_ALWAYS`
    作为滚动条策略。
- en: 'If you want the scroll bars to appear as needed, and you want to force the
    scroll bars to be needed when the scroll pane is created, you have two choices:
    either set the preferred size of scroll pane or its container, or implement a
    scroll-savvy class and return a value smaller than the component''s standard preferred
    size from the `getPreferredScrollableViewportSize` method. Refer to [Sizing a
    Scroll Pane](scrollpane.html#sizing) for information.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果希望根据需要显示滚动条，并且希望在创建滚动窗格时强制需要滚动条，有两种选择：要么设置滚动窗格或其容器的首选大小，要么实现一个具有滚动功能的类，并从
    `getPreferredScrollableViewportSize` 方法返回小于组件标准首选大小的值。有关信息，请参阅 [调整滚动窗格的大小](scrollpane.html#sizing)。
- en: '**Problem:** The divider in my split pane does not move!'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 我的分割窗格中的分隔符不移动！'
- en: You need to set the minimum size of at least one of the components in the split
    pane. Refer to [Positioning the Divider and Restricting Its Range](splitpane.html#divider)
    for information.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要设置分割窗格中至少一个组件的最小大小。有关信息，请参阅 [定位分隔符并限制其范围](splitpane.html#divider)。
- en: '**Problem:** The `setDividerLocation` method of `JSplitPane` does not work.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** `JSplitPane` 的 `setDividerLocation` 方法无效。'
- en: The `setDividerLocation(double)` method has no effect if the split pane has
    no size (typically true if it is not onscreen yet). You can either use `setDividerLocation(int)`
    or specify the preferred sizes of the split pane's contained components and the
    split pane's resize weight instead. Refer to [Positioning the Divider and Restricting
    Its Range](splitpane.html#divider) for information.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果分割窗格没有大小（通常在尚未显示在屏幕上时为真），则 `setDividerLocation(double)` 方法无效。您可以使用 `setDividerLocation(int)`
    或指定分割窗格包含组件的首选大小和分割窗格的调整权重。有关信息，请参阅 [定位分隔符并限制其范围](splitpane.html#divider)。
- en: '**Problem:** The borders on nested split panes look too wide.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 嵌套分割窗格上的边框看起来太宽。'
- en: "If you nest split panes, the borders accumulate \x97 the border of the inner\
    \ split panes display next to the border of the outer split pane causing borders\
    \ that look extra wide. The problem is particularly noticeable when nesting many\
    \ split panes. The workaround is to set the border to null on any split pane that\
    \ is placed within another split pane. For information, see bug # [4131528](http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4131528)\
    \ in the Java Bug Database."
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: "如果嵌套分割窗格，则边框会累积 \x97 内部分割窗格的边框会显示在外部分割窗格的边框旁边，导致边框看起来特别宽。当嵌套许多分割窗格时，问题尤为明显。解决方法是在放置在另一个分割窗格中的任何分割窗格上将边框设置为\
    \ null。有关详细信息，请参阅 Java Bug 数据库中的 bug # [4131528](http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4131528)。"
- en: '**Problem:** The buttons in my tool bar are too big.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 我的工具栏中的按钮太大。'
- en: 'Try reducing the margin for the buttons. For example:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试减少按钮的边距。例如：
- en: '[PRE0]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: "**Problem:** The components in my layered pane are not layered correctly. In\
    \ fact, the layers seem to be inversed \x97 the lower the depth the higher the\
    \ component."
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: "**问题：** 我的分层窗格中的组件层次不正确。实际上，层次似乎是相反的 \x97 深度越低，组件越高。"
- en: This can happen if you use an `int` instead of an `Integer` when adding components
    to a layered pane. To see what happens, in the `LayeredPaneDemo` class, change
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在分层窗格中添加组件时使用 `int` 而不是 `Integer`，就会出现这种情况。要查看发生了什么，在 `LayeredPaneDemo` 类中更改
- en: '`layeredPane.add(label, new Integer(i));`'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`layeredPane.add(label, new Integer(i));`'
- en: to
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为
- en: '`layeredPane.add(label, **i**);`.'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`layeredPane.add(label, **i**);`.'
- en: '**Problem:** The method call `*colorChooser*.setPreviewPanel(null)` does not
    remove the color chooser''s preview panel as expected.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 调用方法 `*colorChooser*.setPreviewPanel(null)` 未按预期删除颜色选择器的预览面板。'
- en: 'A `null` argument specifies the default preview panel. To remove the preview
    panel, specify a standard panel with no size, like this: `*colorChooser*.setPreviewPanel(new
    JPanel());`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `null` 参数指定默认预览面板。要删除预览面板，请指定一个没有大小的标准面板，如此：`*colorChooser*.setPreviewPanel(new
    JPanel());`
