- en: How to Write a Mouse-Wheel Listener
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何编写鼠标滚轮监听器
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/events/mousewheellistener.html](https://docs.oracle.com/javase/tutorial/uiswing/events/mousewheellistener.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/events/mousewheellistener.html](https://docs.oracle.com/javase/tutorial/uiswing/events/mousewheellistener.html)
- en: Mouse-wheel events notify when the wheel on the mouse rotates. For information
    on listening to other mouse events, such as clicks, see [How to Write a Mouse
    Listener](mouselistener.html). For information on listening to mouse-dragged events,
    see [How to Write a Mouse-Motion Listener](mousemotionlistener.html). Not all
    mice have wheels and, in that case, mouse-wheel events are never generated. There
    is no way to programmatically detect whether the mouse is equipped with a mouse
    wheel.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 鼠标滚轮事件会在鼠标滚轮旋转时通知。有关监听其他鼠标事件（如点击）的信息，请参阅[如何编写鼠标监听器](mouselistener.html)。有关监听鼠标拖动事件的信息，请参阅[如何编写鼠标移动监听器](mousemotionlistener.html)。并非所有鼠标都配备鼠标滚轮，在这种情况下，将不会生成鼠标滚轮事件。无法通过编程方式检测鼠标是否配备鼠标滚轮。
- en: Alternatively, use the corresponding [`MouseAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseAdapter.html)
    AWT class, which implements the `MouseWheelListener` interface, to create a `MouseWheelEvent`
    and override the methods for the specific events.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用相应的[`MouseAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseAdapter.html)
    AWT类，该类实现了`MouseWheelListener`接口，以创建`MouseWheelEvent`并重写特定事件的方法。
- en: Usually it is not necessary to implement a mouse-wheel listener because the
    mouse wheel is used primarily for scrolling. Scroll panes automatically register
    mouse-wheel listeners that react to the mouse wheel appropriately.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通常不需要实现鼠标滚轮监听器，因为鼠标滚轮主要用于滚动。滚动窗格会自动注册鼠标滚轮监听器，以适当地响应鼠标滚轮。
- en: However, to create a custom component to be used inside a scroll pane you may
    need to customize its scrolling behavior — specifically you might need to set
    the unit and block increments. For a text area, for example, scrolling one unit
    means scrolling by one line of text. A block increment typically scrolls an entire
    "page", or the size of the viewport. For more information, see [Implementing a
    Scrolling-Savvy Client](../components/scrollpane.html#scrollable) in the [How
    to Use Scroll Panes](../components/scrollpane.html) page.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，要创建一个自定义组件用于滚动窗格内部，您可能需要自定义其滚动行为 —— 具体来说，您可能需要设置单位和块增量。例如，对于文本区域，滚动一个单位意味着滚动一行文本。块增量通常会滚动整个“页面”或视口的大小。有关更多信息，请参阅[实现滚动智能客户端](../components/scrollpane.html#scrollable)页面中的[如何使用滚动窗格](../components/scrollpane.html)。
- en: To generate mouse-wheel events, the cursor must be *over* the component registered
    to listen for mouse-wheel events. The type of scrolling that occurs, either `WHEEL_UNIT_SCROLL`
    or `WHEEL_BLOCK_SCROLL`, is platform dependent. The amount that the mouse wheel
    scrolls is also platform dependent. Both the type and amount of scrolling can
    be set via the mouse control panel for the platform.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成鼠标滚轮事件，光标必须位于已注册监听鼠标滚轮事件的组件*上方*。发生的滚动类型，无论是`WHEEL_UNIT_SCROLL`还是`WHEEL_BLOCK_SCROLL`，都取决于平台。鼠标滚轮滚动的量也取决于平台。滚动的类型和量都可以通过平台的鼠标控制面板进行设置。
- en: The following example demonstrates mouse-wheel events.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了鼠标滚轮事件。
- en: '![](../Images/f727de06d91f1422cd29860799dfa939.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f727de06d91f1422cd29860799dfa939.png)'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run MouseWheelEventDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/events/index.html#MouseWheelEventDemo).[![Launches
    the MouseWheelEventDemo application](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/MouseWheelEventDemoProject/MouseWheelEventDemo.jnlp)
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行MouseWheelEventDemo（[下载
    JDK 7 或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参阅[示例索引](../examples/events/index.html#MouseWheelEventDemo)。[![启动MouseWheelEventDemo应用程序](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/MouseWheelEventDemoProject/MouseWheelEventDemo.jnlp)
- en: Move the cursor over the text area.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标移动到文本区域上。
- en: Rotate the mouse wheel away from you. You will see one or more mouse-wheel events
    in the *up* direction.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标滚轮远离您。您将看到一个或多个鼠标滚轮事件向*上*方向。
- en: Rotate the mouse wheel in the opposite direction. You will see mouse-wheel events
    in the *down* direction.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标滚轮向相反方向旋转。您将看到鼠标滚轮事件向*下*方向。
- en: Try changing your mouse wheel's scrolling behavior your system's mouse control
    panel to see how the output changes. You should not need to restart the demo to
    see the changes take effect.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试更改系统的鼠标控制面板中鼠标滚轮的滚动行为，看看输出如何变化。您不需要重新启动演示以使更改生效。
- en: '* * *'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'The output from MouseWheelEventDemo for a system that uses unit increments
    for its mouse wheel might look as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其鼠标滚轮使用单位增量的系统的MouseWheelEventDemo的输出可能如下所示：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The scroll amount, returned by the `getScrollAmount` method, indicates how many
    units will be scrolled and always presents a positive number. The units to scroll,
    returned by the `getUnitsToScroll` method, are positive when scrolling down and
    negative when scrolling up. The number of pixels for the vertical unit is obtained
    from the vertical scroll bar using the `getUnitIncrement` method. In the preceding
    example, rolling the mouse wheel one notch upward should result in the text area
    scrolling upward 48 pixels (3x16).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由`getScrollAmount`方法返回的滚动量指示将滚动多少个单位，并始终呈现正数。由`getUnitsToScroll`方法返回的滚动单位在向下滚动时为正，在向上滚动时为负。垂直单位的像素数是使用`getUnitIncrement`方法从垂直滚动条获取的。在前面的示例中，向上滚动鼠标滚轮一个刻度应导致文本区域向上滚动48像素（3x16）。
- en: 'For a system that uses block increments for mouse-wheel scrolling, for the
    same movement of the mouse wheel the output might look as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用块增量进行鼠标滚轮滚动的系统，对于鼠标滚轮的相同移动，输出可能如下所示：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The vertical block increment is obtained from the vertical scroll bar using
    the `getBlockIncrement` method. In this case, rolling the mouse wheel upward one
    notch means that the text area should scroll upward 307 pixels.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直块增量是使用`getBlockIncrement`方法从垂直滚动条获取的。在这种情况下，向上滚动鼠标滚轮一个刻度意味着文本区域应向上滚动307像素。
- en: 'Find the demo''s code in the [`MouseWheelEventDemo.java`](../examples/events/MouseWheelEventDemoProject/src/events/MouseWheelEventDemo.java)
    file. The following code snippet is related to the mouse-wheel event handling:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`MouseWheelEventDemo.java`](../examples/events/MouseWheelEventDemoProject/src/events/MouseWheelEventDemo.java)文件中找到演示的代码。以下代码片段与鼠标滚轮事件处理相关：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Mouse Wheel Listener API
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 鼠标滚轮监听器API
- en: The MouseWheelListener Interface
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 鼠标滚轮监听器接口
- en: '*Although `MouseWheelListener` has only one method, it has the corresponding
    adapter class — `MouseAdapter`. This capability enables an application to have
    only one adapter class instance for the component to manage all types of events
    from the mouse pointer.*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管`MouseWheelListener`只有一个方法，但它有相应的适配器类——`MouseAdapter`。这种能力使应用程序只需一个适配器类实例来管理来自鼠标指针的所有类型的事件。
- en: '| Method | Purpose |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [mouseWheelMoved(MouseWheelEvent)](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelListener.html#mouseWheelMoved-java.awt.event.MouseWheelEvent-)
    | Called when the mouse wheel is rotated. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [mouseWheelMoved(MouseWheelEvent)](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelListener.html#mouseWheelMoved-java.awt.event.MouseWheelEvent-)
    | 当鼠标滚轮旋转时调用。 |'
- en: The MouseWheelEvent Class
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 鼠标滚轮事件类
- en: '| Method | Purpose |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [int getScrollType()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getScrollType--)
    | Returns the type of scrolling to be used. Possible values are `WHEEL_BLOCK_SCROLL`
    and `WHEEL_UNIT_SCROLL`, and are determined by the native platform. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [int getScrollType()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getScrollType--)
    | 返回要使用的滚动类型。可能的值为`WHEEL_BLOCK_SCROLL`和`WHEEL_UNIT_SCROLL`，由本机平台确定。'
- en: '| [int getWheelRotation()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getWheelRotation--)
    | Returns the number of notches the mouse wheel was rotated. If the mouse wheel
    rotated towards the user (down) the value is positive. If the mouse wheel rotated
    away from the user (up) the value is negative. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [int getWheelRotation()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getWheelRotation--)
    | 返回鼠标滚轮旋转的刻度数。如果鼠标滚轮朝向用户（向下）旋转，则值为正。如果鼠标滚轮远离用户（向上）旋转，则值为负。'
- en: '| [int getScrollAmount()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getScrollAmount--)
    | Returns the number of units that should be scrolled per notch. This is always
    a positive number and is only valid if the scroll type is `MouseWheelEvent.WHEEL_UNIT_SCROLL`.
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [int getScrollAmount()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getScrollAmount--)
    | 返回每个刻度应滚动的单位数。这始终是一个正数，并且仅在滚动类型为`MouseWheelEvent.WHEEL_UNIT_SCROLL`时有效。 |'
- en: '| [int getUnitsToScroll()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getUnitsToScroll--)
    | Returns the positive or negative units to scroll for the current event. This
    is only valid when the scroll type is `MouseWheelEvent.WHEEL_UNIT_SCROLL`. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [int getUnitsToScroll()](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseWheelEvent.html#getUnitsToScroll--)
    | 返回当前事件应滚动的正负单位数。仅在滚动类型为`MouseWheelEvent.WHEEL_UNIT_SCROLL`时有效。 |'
- en: Examples That Use Mouse Wheel Listeners
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用鼠标滚轮监听器的示例
- en: The following table lists the examples that use mouse-wheel listeners.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了使用鼠标滚轮监听器的示例。
- en: '| Example | Where Described | Notes |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 描述位置 | 备注 |'
- en: '| [`MouseWheelEventDemo`](../examples/events/index.html#MouseWheelEventDemo)
    | This section | Reports all mouse wheel events that occur within a text area
    to demonstrate the circumstances under which mouse wheel events are fired. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`MouseWheelEventDemo`](../examples/events/index.html#MouseWheelEventDemo)
    | 本节 | 报告在文本区域内发生的所有鼠标滚轮事件，以展示触发鼠标滚轮事件的情况。 |'
