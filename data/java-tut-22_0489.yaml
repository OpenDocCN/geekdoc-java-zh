- en: How to Write a Document Listener
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何编写文档监听器
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/events/documentlistener.html](https://docs.oracle.com/javase/tutorial/uiswing/events/documentlistener.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/events/documentlistener.html](https://docs.oracle.com/javase/tutorial/uiswing/events/documentlistener.html)
- en: A Swing text component uses a [`Document`](https://docs.oracle.com/javase/8/docs/api/javax/swing/text/Document.html)
    to represent its content. Document events occur when the content of a document
    changes in any way. You attach a document listener to a text component's document,
    rather than to the text component itself. See [Implementing a Document Filter](../components/generaltext.html#filter)for
    more information.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Swing文本组件使用[`Document`](https://docs.oracle.com/javase/8/docs/api/javax/swing/text/Document.html)来表示其内容。文档事件发生在文档的内容以任何方式更改时。你将文档监听器附加到文本组件的文档上，而不是文本组件本身。有关更多信息，请参见[实现文档过滤器](../components/generaltext.html#filter)。
- en: The following example demonstrates document events on two plain text components.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了两个纯文本组件上的文档事件。
- en: '![This screenshot demonstrates the output of DocumentEventDemo example.](../Images/a4499b16b23e6821ada0187f80d6a918.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![此屏幕截图展示了DocumentEventDemo示例的输出。](../Images/a4499b16b23e6821ada0187f80d6a918.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**试一试：**'
- en: Click the Launch button to run DocumentEventDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/events/index.html#Beeper).[![Launches
    the DocumentEventDemo example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/DocumentEventDemoProject/DocumentEventDemo.jnlp)
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行DocumentEventDemo（[下载
    JDK 7 或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/events/index.html#Beeper)。[![启动DocumentEventDemo示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/DocumentEventDemoProject/DocumentEventDemo.jnlp)
- en: Type in the text field at the upper left of the window or the text area beneath
    the text field.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在窗口左上角的文本字段��文本字段下方的文本区域中键入文本。
- en: One document event is fired for each character typed.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每次键入字符时都会触发一个文档事件。
- en: Delete text with the backspace key.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用退格键删除文本。
- en: One document event is fired for each backspace key typed.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每次按退格键键入时都会触发一个文档事件。
- en: Select text and then delete it by typing backspace or by using a keyboard command
    such as `CTRL-X` (cut).
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择文本，然后通过按退格键或使用`CTRL-X`（剪切）等键盘命令删除。
- en: One document event is fired for the entire deletion.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 整个删除操作会触发一个文档事件。
- en: Copy text from one text component into the other using keyboard commands such
    as `CTRL-C` (copy) and `CTRL-V` (paste).
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用键盘命令如`CTRL-C`（复制）和`CTRL-V`（粘贴）将文本从一个文本组件复制到另一个文本组件。
- en: One document event is fired for the entire paste operation regardless of the
    length of the text pasted. If text is selected in the target text component before
    the paste command is issued, an additional document event is fired because the
    selected text is deleted first.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论粘贴的文本长度如何，整个粘贴操作都会触发一个文档事件。如果在发出粘贴命令之前在目标文本组件中选择文本，则会触发额外的文档事件，因为首先删除所选文本。
- en: '* * *'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'You can find the demo''s code in [`DocumentEventDemo.java`](../examples/events/DocumentEventDemoProject/src/events/DocumentEventDemo.java).
    Here is the demo''s document event handling code:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[`DocumentEventDemo.java`](../examples/events/DocumentEventDemoProject/src/events/DocumentEventDemo.java)中找到演示代码。以下是演示文档事件处理代码：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Document listeners should not modify the contents of the document; The change
    is already complete by the time the listener is notified of the change. Instead,
    write a custom document that overrides the `insertString` or `remove` methods,
    or both. See [Listening for Changes on a Document](../components/generaltext.html#doclisteners)
    for details.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 文档监听器不应修改文档的内容；在监听器被通知更改时，更改已经完成。相反，编写一个自定义文档，覆盖`insertString`或`remove`方法，或两者都覆盖。详细信息请参见[监听文档更改](../components/generaltext.html#doclisteners)。
- en: The Document Listener API
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档监听器API
- en: The DocumentListener Interface
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 文档监听器接口
- en: '*`DocumentListener` has no adapter class.*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*`DocumentListener`没有适配器类。*'
- en: '| Method | Purpose |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [changedUpdate(DocumentEvent)](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentListener.html#changedUpdate-javax.swing.event.DocumentEvent-)
    | Called when the style of some of the text in the listened-to document changes.
    This sort of event is fired only from a `StyledDocument` — a `PlainDocument` does
    not fire these events. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [changedUpdate(DocumentEvent)](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentListener.html#changedUpdate-javax.swing.event.DocumentEvent-)
    | 当监听文档中的一些文本样式发生变化时调用。这种事件仅从`StyledDocument`中触发 — `PlainDocument`不会触发这些事件。'
- en: '| [insertUpdate(DocumentEvent)](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentListener.html#insertUpdate-javax.swing.event.DocumentEvent-)
    | Called when text is inserted into the listened-to document. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [insertUpdate(DocumentEvent)](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentListener.html#insertUpdate-javax.swing.event.DocumentEvent-)
    | 当文本插入到监听文档中时调用。'
- en: '| [removeUpdate(DocumentEvent)](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentListener.html#removeUpdate-javax.swing.event.DocumentEvent-)
    | Called when text is removed from the listened-to document. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [removeUpdate(DocumentEvent)](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentListener.html#removeUpdate-javax.swing.event.DocumentEvent-)
    | 当从监听文档中删除文本时调用。'
- en: The DocumentEvent Interface
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 文档事件接口
- en: Each document event method is passed an object that implements the `DocumentEvent`
    interface. Typically, this is an instance of [`DefaultDocumentEvent`](https://docs.oracle.com/javase/8/docs/api/javax/swing/text/AbstractDocument.DefaultDocumentEvent.html),
    defined in `AbstractDocument`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 每个文档事件方法都会传递一个实现`DocumentEvent`接口的对象。通常，这是`AbstractDocument`中定义的[`DefaultDocumentEvent`](https://docs.oracle.com/javase/8/docs/api/javax/swing/text/AbstractDocument.DefaultDocumentEvent.html)的实例。
- en: '| Method | Purpose |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [Document getDocument()](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getDocument--)
    | Returns the document that fired the event. Note that the `DocumentEvent` interface
    does not inherit from `EventObject`. Therefore, it does not inherit the `getSource`
    method. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [获取文档的Document对象](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getDocument--)
    | 返回触发事件的文档。请注意，`DocumentEvent`接口不继承自`EventObject`。因此，它不继承`getSource`方法。'
- en: '| [int getLength()](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getLength--)
    | Returns the length of the change. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [获取长度的int方法](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getLength--)
    | 返回更改的长度。'
- en: '| [int getOffset()](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getOffset--)
    | Returns the location within the document of the first character changed. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [获取偏移量的int方法](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getOffset--)
    | 返回更改的第一个字符在文档中的位置。'
- en: '| [ElementChange getChange(Element)](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getChange-javax.swing.text.Element-)
    | Returns details about what elements in the document have changed and how. [`ElementChange`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.ElementChange.html)
    is an interface defined within the `DocumentEvent` interface. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [获取更改的ElementChange方法](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getChange-javax.swing.text.Element-)
    | 返回文档中已更改的元素及其详细信息。[`ElementChange`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.ElementChange.html)是在`DocumentEvent`接口中定义的一个接口。'
- en: '| [EventType getType()](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getType--)
    | Returns the type of change that occurred. [`EventType`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.EventType.html)
    is a class defined within the `DocumentEvent` interface that enumerates the possible
    changes that can occur on a document: insert text, remove text, and change text
    style. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [获取类型的EventType方法](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.html#getType--)
    | 返回发生的更改类型。[`EventType`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/DocumentEvent.EventType.html)是在`DocumentEvent`接口中定义的一个类，列举了文档上可能发生的更改类型：插入文本、删除文本和更改文本样式。'
- en: Examples that Use Document Listeners
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用文档监听器的示例
- en: The following table lists the examples that use document listeners.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表列出了使用文档监听器的示例。
- en: '| Example | Where Described | Notes |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 描述位置 | 注意事项 |'
- en: '| [`DocumentEventDemo`](../examples/events/index.html#DocumentEventDemo) |
    This section | Reports all document events that occur on the documents for both
    a text field and a text area. One listener listens to both text components and
    uses a client property on the document to determine which component fired the
    event. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`DocumentEventDemo`](../examples/events/index.html#DocumentEventDemo) |
    本节 | 报告文本字段和文本区域上发生的所有文档事件。一个监听器同时监听两个文本组件，并使用文档上的客户端属性来确定哪个组件触发了事件。 |'
- en: '| [`TextComponentDemo`](../examples/components/index.html#TextComponentDemo)
    | [Listening for Changes on a Document](../components/generaltext.html#doclisteners)
    | Updates a change log every time text in the listened-to document changes. The
    document in this example supports styled text, so `changedUpdate` gets called
    in this example. Requires this additional source file: [`DocumentSizeFilter`](../examples/components/index.html#DocumentSizeFilter)
    |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`TextComponentDemo`](../examples/components/index.html#TextComponentDemo)
    | [监听文档变化](../components/generaltext.html#doclisteners) | 每当被监听文档中的文本发生变化时更新变更日志。本示例中的文档支持样式文本，因此在本示例中调用`changedUpdate`。需要额外的源文件：[`DocumentSizeFilter`](../examples/components/index.html#DocumentSizeFilter)
    |'
