- en: Retrieving Class Objects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索类对象
- en: 原文：[https://docs.oracle.com/javase/tutorial/reflect/class/classNew.html](https://docs.oracle.com/javase/tutorial/reflect/class/classNew.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/reflect/class/classNew.html](https://docs.oracle.com/javase/tutorial/reflect/class/classNew.html)
- en: The entry point for all reflection operations is [`java.lang.Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html).
    With the exception of [`java.lang.reflect.ReflectPermission`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/ReflectPermission.html),
    none of the classes in [`java.lang.reflect`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/package-summary.html)
    have public constructors. To get to these classes, it is necessary to invoke appropriate
    methods on [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html).
    There are several ways to get a [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    depending on whether the code has access to an object, the name of class, a type,
    or an existing [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 所有反射操作的入口点是[`java.lang.Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。除了[`java.lang.reflect.ReflectPermission`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/ReflectPermission.html)之外，[`java.lang.reflect`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/package-summary.html)中的类都没有公共构造函数。要访问这些类，需要在[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)上调用适当的方法。有几种方法可以获取[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)，具体取决于代码是否可以访问对象、类的名称、类型或现有的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。
- en: Object.getClass()
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`Object.getClass()`'
- en: If an instance of an object is available, then the simplest way to get its [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    is to invoke [`Object.getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--).
    Of course, this only works for reference types which all inherit from [`Object`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html).
    Some examples follow.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对象的实例可用，则获取其[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)的最简单方法是调用[`Object.getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)。当然，这仅适用于所有继承自[`Object`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html)的引用类型。以下是一些示例。
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Returns the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    for [`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 返回[`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There is a unique console associated with the virtual machine which is returned
    by the `static` method [`System.console()`](https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#console--).
    The value returned by [`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)
    is the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponding to [`java.io.Console`](https://docs.oracle.com/javase/8/docs/api/java/io/Console.html).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 与虚拟机关联的唯一控制台由`static`方法[`System.console()`](https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#console--)返回。[`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)返回的值是对应于[`java.io.Console`](https://docs.oracle.com/javase/8/docs/api/java/io/Console.html)的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`A` is an instance of the enum `E`; thus [`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)
    returns the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponding to the enumeration type `E`.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`A`是枚举`E`的一个实例；因此[`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)返回对应于枚举类型`E`的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。'
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Since arrays are [`Objects`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html),
    it is also possible to invoke [`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)
    on an instance of an array. The returned [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponds to an array with component type `byte`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于数组是[`Objects`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html)，因此也可以在数组实例上调用[`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)。返回的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)对应于具有组件类型`byte`的数组。
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this case, [`java.util.Set`](https://docs.oracle.com/javase/8/docs/api/java/util/Set.html)
    is an interface to an object of type [`java.util.HashSet`](https://docs.oracle.com/javase/8/docs/api/java/util/HashSet.html).
    The value returned by [`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)
    is the class corresponding to [`java.util.HashSet`](https://docs.oracle.com/javase/8/docs/api/java/util/HashSet.html).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，[`java.util.Set`](https://docs.oracle.com/javase/8/docs/api/java/util/Set.html)是一个指向类型为[`java.util.HashSet`](https://docs.oracle.com/javase/8/docs/api/java/util/HashSet.html)的对象的接口。[`getClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--)返回的值是与[`java.util.HashSet`](https://docs.oracle.com/javase/8/docs/api/java/util/HashSet.html)对应的类。
- en: The .class Syntax
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .class语法
- en: If the type is available but there is no instance then it is possible to obtain
    a [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html) by
    appending `".class"` to the name of the type. This is also the easiest way to
    obtain the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    for a primitive type.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类型可用但没有实例，则可以通过在类型名称后附加`".class"`来获得一个[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。这也是获取原始类型对应的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)的最简单方式。
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that the statement `boolean.getClass()` would produce a compile-time error
    because a `boolean` is a primitive type and cannot be dereferenced. The `.class`
    syntax returns the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponding to the type `boolean`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，语句`boolean.getClass()`会产生编译时错误，因为`boolean`是原始类型，不能被解引用。`.class`语法返回与类型`boolean`对应的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The variable `c` will be the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponding to the type [`java.io.PrintStream`](https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 变量`c`将是与类型[`java.io.PrintStream`](https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html)对应的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `.class` syntax may be used to retrieve a [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponding to a multi-dimensional array of a given type.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`.class`语法可用于检索与给定类型的多维数组对应的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。'
- en: Class.forName()
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Class.forName()
- en: If the fully-qualified name of a class is available, it is possible to get the
    corresponding [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    using the static method [`Class.forName()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#forName-java.lang.String-).
    This cannot be used for primitive types. The syntax for names of array classes
    is described by [`Class.getName()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getName--).
    This syntax is applicable to references and primitive types.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果类的完全限定名称可用，则可以使用静态方法[`Class.forName()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#forName-java.lang.String-)获取相应的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。这不能用于原始类型。数组类名称的语法由[`Class.getName()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getName--)描述。此语法适用于引用和原始类型。
- en: '[PRE8]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This statement will create a class from the given fully-qualified name.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句将根据给定的完全限定名称创建一个类。
- en: '[PRE9]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The variable `cDoubleArray` will contain the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponding to an array of primitive type `double` (that is, the same as `double[].class`).
    The `cStringArray` variable will contain the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    corresponding to a two-dimensional array of [`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)
    (that is, identical to `String[][].class`).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 变量`cDoubleArray`将包含与原始类型`double`的数组对应的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)（即与`double[].class`相同）。变量`cStringArray`将包含与[`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)的二维数组对应的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)（即与`String[][].class`相同）。
- en: TYPE Field for Primitive Type Wrappers
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 原始类型包装器的TYPE字段
- en: The `.class` syntax is a more convenient and the preferred way to obtain the
    [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html) for
    a primitive type; however there is another way to acquire the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html).
    Each of the primitive types and `void` has a wrapper class in [`java.lang`](https://docs.oracle.com/javase/8/docs/api/java/lang/package-summary.html)
    that is used for boxing of primitive types to reference types. Each wrapper class
    contains a field named `TYPE` which is equal to the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    for the primitive type being wrapped.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`.class` 语法是获取原始类型的 [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    更方便且更常用的方式；然而还有另一种获取 [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    的方法。每种原始类型和 `void` 在 [`java.lang`](https://docs.oracle.com/javase/8/docs/api/java/lang/package-summary.html)
    中都有一个包装类，用于将原始类型装箱为引用类型。每个包装类都包含一个名为 `TYPE` 的字段，该字段等于被包装的原始类型的 [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。'
- en: '[PRE10]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: There is a class [`java.lang.Double`](https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html)
    which is used to wrap the primitive type `double` whenever an [`Object`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html)
    is required. The value of [`Double.TYPE`](https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html#TYPE)
    is identical to that of `double.class`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一个类 [`java.lang.Double`](https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html)
    用于包装原始类型 `double`，每当需要一个 [`Object`](https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html)
    时。[`Double.TYPE`](https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html#TYPE)
    的值与 `double.class` 相同。
- en: '[PRE11]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[`Void.TYPE`](https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html#TYPE)
    is identical to `void.class`.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Void.TYPE`](https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html#TYPE)
    与 `void.class` 相同。'
- en: Methods that Return Classes
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 返回类的方法
- en: There are several Reflection APIs which return classes but these may only be
    accessed if a [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    has already been obtained either directly or indirectly.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个反射 API 返回类，但只有在已经直接或间接地获取了 [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    后才能访问这些类。
- en: '[`Class.getSuperclass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getSuperclass--)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Class.getSuperclass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getSuperclass--)'
- en: Returns the super class for the given class.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 返回给定类的超类。
- en: '[PRE12]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The super class of [`javax.swing.JButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html)
    is [`javax.swing.AbstractButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`javax.swing.JButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html)
    的超类是 [`javax.swing.AbstractButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html)。'
- en: '[`Class.getClasses()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getClasses--)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Class.getClasses()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getClasses--)'
- en: Returns all the public classes, interfaces, and enums that are members of the
    class including inherited members.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类的所有公共类、接口和枚举，包括继承的成员。
- en: '[PRE13]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    contains two member classes [`Character.Subset`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.Subset.html)
    and [`Character.UnicodeBlock`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.UnicodeBlock.html).'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    包含两个成员类 [`Character.Subset`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.Subset.html)
    和 [`Character.UnicodeBlock`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.UnicodeBlock.html)。'
- en: '[`Class.getDeclaredClasses()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getDeclaredClasses--)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Class.getDeclaredClasses()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getDeclaredClasses--)'
- en: Returns all of the classes interfaces, and enums that are explicitly declared
    in this class.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在此类中显式声明的所有类、接口和枚举。
- en: '[PRE14]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    contains two public member classes [`Character.Subset`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.Subset.html)
    and [`Character.UnicodeBlock`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.UnicodeBlock.html)
    and one private class `Character.CharacterCache`.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    包含两个公共成员类 [`Character.Subset`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.Subset.html)
    和 [`Character.UnicodeBlock`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.UnicodeBlock.html)
    以及一个私有类 `Character.CharacterCache`。'
- en: '[`Class.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getDeclaringClass--)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Class.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getDeclaringClass--)。'
- en: '[`java.lang.reflect.Field.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Field.html#getDeclaringClass--)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[`java.lang.reflect.Field.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Field.html#getDeclaringClass--)。'
- en: '[`java.lang.reflect.Method.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html#getDeclaringClass--)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`java.lang.reflect.Method.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html#getDeclaringClass--)。'
- en: '[`java.lang.reflect.Constructor.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Constructor.html#getDeclaringClass--)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[`java.lang.reflect.Constructor.getDeclaringClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Constructor.html#getDeclaringClass--)。'
- en: Returns the [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    in which these members were declared. [Anonymous Class Declarations](https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.9.5)
    will not have a declaring class but will have an enclosing class.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 返回声明这些成员的[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)。[匿名类声明](https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.9.5)不会有声明类，但会有封闭类。
- en: '[PRE15]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The field [`out`](https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#out)
    is declared in [`System`](https://docs.oracle.com/javase/8/docs/api/java/lang/System.html).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 字段[`out`](https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#out)在[`System`](https://docs.oracle.com/javase/8/docs/api/java/lang/System.html)中声明。
- en: '[PRE16]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The declaring class of the anonymous class defined by `o` is `null`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由`o`定义的匿名类的声明类为`null`。
- en: '[`Class.getEnclosingClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getEnclosingClass--)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Class.getEnclosingClass()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getEnclosingClass--)。'
- en: Returns the immediately enclosing class of the class.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类的直接封闭类。
- en: '[PRE17]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The enclosing class of the enum [`Thread.State`](https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html)
    is [`Thread`](https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举[`Thread.State`](https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html)的封闭类为[`Thread`](https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html)。
- en: '[PRE18]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The anonymous class defined by `o` is enclosed by `MyClass`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由`o`定义的匿名类由`MyClass`封闭。
