- en: Language Tag Filtering and Lookup
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 语言标签过滤和查找
- en: 原文：[https://docs.oracle.com/javase/tutorial/i18n/locale/matching.html](https://docs.oracle.com/javase/tutorial/i18n/locale/matching.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/i18n/locale/matching.html](https://docs.oracle.com/javase/tutorial/i18n/locale/matching.html)
- en: The Java Programming language contains internationalization support for language
    tags, language tag filtering, and language tag lookup. These features are specified
    by [IETF BCP 47](http://tools.ietf.org/html/bcp47) , which contains [RFC 5646
    "Tags for Identifying Languages"](http://tools.ietf.org/html/rfc5646) and [RFC
    4647 "Matching of Language Tags."](http://tools.ietf.org/html/rfc4647) This lesson
    describes how this support is provided in the JDK.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Java编程语言包含对语言标签、语言标签过滤和语言标签查找的国际化支持。这些功能由[IETF BCP 47](http://tools.ietf.org/html/bcp47)规定，其中包括[RFC
    5646“用于标识语言的标签”](http://tools.ietf.org/html/rfc5646)和[RFC 4647“语言标签的匹配”](http://tools.ietf.org/html/rfc4647)。本课程描述了JDK中提供这种支持的方式。
- en: What Are Language Tags?
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是语言标签？
- en: Language tags are specially formatted strings that provide information about
    a particular language. A language tag might be something simple (such as "en"
    for English), something complex (such as "zh-cmn-Hans-CN" for Chinese, Mandarin,
    Simplified script, as used in China), or something in between (such as "sr-Latn",
    for Serbian written using Latin script). Language tags consist of "subtags" separated
    by hyphens; this terminology is used throughout the API documentation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 语言标签是专门格式化的字符串，提供有关特定语言的信息。语言标签可能是简单的（如“en”表示英语）、复杂的（如“zh-cmn-Hans-CN”表示中国普通话，简体字，用于中国）或介于两者之间的（如“sr-Latn”，表示使用拉丁文写的塞尔维亚语）。语言标签由连字符分隔的“子标签”组成；这个术语在整��API文档中使用。
- en: 'The [`java.util.Locale`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html)
    class provides support for language tags. A `Locale` contains several different
    fields: language (such as "en" for English, or "ja" for Japanese), script (such
    as "Latn" for Latin or "Cyrl" for Cyrillic), country (such as "US" for United
    States or "FR" for France), variant (which indicates some variant of a locale),
    and extensions (which provides a map of single character keys to `String` values,
    indicating extensions apart from language identification). To create a `Locale`
    object from a language tag `String`, invoke [`Locale.forLanguageTag(String)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#forLanguageTag-java.lang.String-),
    passing in the language tag as its only argument. Doing so creates and returns
    a new `Locale` object for use in your application.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`java.util.Locale`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html)类提供对语言标签的支持。`Locale`包含几个不同的字段：语言（如“en”表示英语，或“ja”表示日语）、脚本（如“Latn”表示拉丁文或“Cyrl”表示西里尔文）、国家（如“US”表示美国或“FR”表示法国）、变体（指示区域的某些变体）和扩展（提供单字符键到`String`值的映射，表示除语言标识之外的扩展）。要从语言标签`String`创建`Locale`对象，请调用[`Locale.forLanguageTag(String)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#forLanguageTag-java.lang.String-)，将语言标签作为唯一参数传入。这样做会创建并返回一个新的`Locale`对象，供应用程序使用。'
- en: 'Example 1:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 示例1：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that the Locale API only requires that your language tag be syntactically
    well-formed. It does not perform any extra validation (such as checking to see
    if the tag is registered in the IANA Language Subtag Registry).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Locale API只要求您的语言标签在语法上是格式良好的。它不执行任何额外的验证（例如检查标签是否在IANA语言子标签注册表中注册）。
- en: What Are Language Ranges?
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是语言范围？
- en: Language ranges (represented by class [`java.util.Locale.LanguageRange`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.LanguageRange.html))
    identify sets of language tags that share specific attributes. Language ranges
    are classified as either basic or extended, and are similar to language tags in
    that they consist of subtags separated by hyphens. Examples of basic language
    ranges include "en" (English), "ja-JP" (Japanese, Japan), and "*" (a special language
    range which matches any language tag). Examples of extended language ranges include
    "*-CH" (any language, Switzerland), "es-*" (Spanish, any regions), and "zh-Hant-*"
    (Traditional Chinese, any region).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 语言范围（由类[`java.util.Locale.LanguageRange`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.LanguageRange.html)表示）标识具有特定属性的语言标签集。语言范围分为基本和扩展两类，类似于语言标签，由连字符分隔的子标签组成。基本语言范围的示例包括“en”（英语）、“ja-JP”（日语，日本）和“*”（特殊语言范围，匹配任何语言标签）。扩展语言范围的示例包括“*-CH”（任何语言，瑞士）、“es-*”（西班牙语，任何地区）和“zh-Hant-*”（繁体中文，任何地区）。
- en: Furthermore, language ranges may be stored in Language Priority Lists, which
    enable users to prioritize their language preferences in a weighted list. Language
    Priority Lists are expressed by placing `LanguageRange` objects into a [`java.util.List`](https://docs.oracle.com/javase/8/docs/api/java/util/List.html),
    which can then be passed to the `Locale` methods that accept a `List` of `LanguageRange`
    objects.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，语言范围可以存储在语言优先级列表中，这使用户可以在加权列表中优先考虑他们的语言偏好。语言优先级列表通过将`LanguageRange`对象放入[`java.util.List`](https://docs.oracle.com/javase/8/docs/api/java/util/List.html)中来表示，然后可以将其传递给接受`List`的`LanguageRange`对象的`Locale`方法。
- en: Creating a Language Range
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建语言范围
- en: 'The [`Locale.LanguageRange`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.LanguageRange.html)
    class provides two different constructors for creating language ranges:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Locale.LanguageRange`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.LanguageRange.html)类提供了两种不同的构造函数来创建语言范围：'
- en: '`public Locale.LanguageRange(String range)`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public Locale.LanguageRange(String range)`'
- en: '`public Locale.LanguageRange(String range, double weight)`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public Locale.LanguageRange(String range, double weight)`'
- en: The only difference between them is that the second version allows a weight
    to be specified; this weight will be considered if the range is placed into a
    Language Priority List.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 它们之间唯一的区别是第二个版本允许指定权重；如果将范围放入语言优先级列表中，则将考虑此权重。
- en: '`Locale.LanguageRange` also specifies some constants to be used with these
    constructors:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`Locale.LanguageRange`还指定了一些常量，用于与这些构造函数一起使用：'
- en: '`public static final double MAX_WEIGHT`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public static final double MAX_WEIGHT`'
- en: '`public static final double MIN_WEIGHT`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public static final double MIN_WEIGHT`'
- en: The `MAX_WEIGHT` constant holds a value of 1.0, which indicates that it is a
    good fit for the user. The `MIN_WEIGHT` constant holds a value of 0.0, indicating
    that it is not.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`MAX_WEIGHT`常量保存值1.0，表示它非常适合用户。`MIN_WEIGHT`常量保存值0.0，表示它不适合。'
- en: 'Example 2:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Example 2 creates three language ranges: English (United States), English (Great
    Britain), and French (France). These ranges are weighted to express the user''s
    preferences, in order from most preferred to least preferred.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2创建了三种语言范围：英语（美国）、英语（英国）和法语（法国）。这些范围被加权以表达用户的偏好，从最喜欢到最不喜欢的顺序。
- en: Creating a Language Priority List
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建语言优先级列表
- en: You can create a Language Priority List from a list of language ranges by using
    the [`LanguageRange.parse(String)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.LanguageRange.html#parse-java.lang.String-)
    method. This method accepts a list of comma-separated language ranges, performs
    a syntactic check for each language range in the given ranges, and then returns
    the newly created Language Priority List.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`LanguageRange.parse(String)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.LanguageRange.html#parse-java.lang.String-)方法从语言范围列表创建语言优先级列表。此方法接受一个逗号分隔的语言范围列表，在给定范围中对每个语言范围执行语法检查，然后返回新创建的语言优先级列表。
- en: For detailed information about the required format of the "ranges" parameter,
    see the API specification for this method.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有关“ranges”参数所需格式的详细信息，请参阅此方法的API规范。
- en: 'Example 3:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 示例3：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Example 3 creates the same three language ranges as Example 2, but stores them
    in a `String` object, which is passed to the `parse(String)` method. The returned
    `List` of `LanguageRange` objects is the Language Priority List.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 3创建了与示例2相同的三种语言范围，但将它们存储在一个`String`对象中，该对象被传递给`parse(String)`方法。返回的`LanguageRange`对象的`List`是语言优先级列表。
- en: Filtering Language Tags
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过滤语言标签
- en: 'Language tag filtering is the process of matching a set of language tags against
    a user''s Language Priority List. The result of filtering will be a complete list
    of all matching results. The `Locale` class defines two filter methods that return
    a list of `Locale` objects. Their signatures are as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 语言标签过滤是将一组语言标签与用户的语言优先级列表进行匹配的过程。过滤的结果将是所有匹配结果的完整列表。`Locale`类定义了两个过滤方法，它们返回一个`Locale`对象的列表。它们的签名如下：
- en: '[`public static List<Locale> filter (List<Locale.LanguageRange> priorityList,
    Collection<Locale> locales)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filter-java.util.List-java.util.Collection-)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`public static List<Locale> filter (List<Locale.LanguageRange> priorityList,
    Collection<Locale> locales)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filter-java.util.List-java.util.Collection-)'
- en: '[`public static List<Locale> filter (List<Locale.LanguageRange> priorityList,
    Collection<Locale> locales, Locale.FilteringMode mode)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filter-java.util.List-java.util.Collection-java.util.Locale.FilteringMode-)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`public static List<Locale> filter (List<Locale.LanguageRange> priorityList,
    Collection<Locale> locales, Locale.FilteringMode mode)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filter-java.util.List-java.util.Collection-java.util.Locale.FilteringMode-)'
- en: In both methods, the first argument specifies the user's Language Priority List
    as described in the previous section.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种方法中，第一个参数指定了用户的语言优先级列表，如前一节所述。
- en: The second argument specifies a `Collection` of `Locale` objects to match against.
    The match itself will take place according to the rules specified by RFC 4647.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个参数指定要匹配的`Locale`对象的`Collection`。匹配本身将根据RFC 4647指定的规则进行。
- en: The third argument (if provided) specifies the "filtering mode" to use. The
    [`Locale.FilteringMode`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.FilteringMode.html)
    enum provides a number of different values to choose from, such as `AUTOSELECT_FILTERING`
    (for basic language range filtering) or `EXTENDED_FILTERING` (for extended language
    range filtering).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个参数（如果提供）指定要使用的“过滤模式”。[`Locale.FilteringMode`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.FilteringMode.html)枚举提供了许多不同的值可供选择，例如`AUTOSELECT_FILTERING`（用于基本语言范围过滤）或`EXTENDED_FILTERING`（用于扩展语言范围过滤）。
- en: Example 4 provides a demonstration of language tag filtering.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 示例4演示了语言标记过滤。
- en: 'Example 4:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 示例4：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output of this program is:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序的输出是：
- en: en_US
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: en_US
- en: en_GB
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: en_GB
- en: This returned list is ordered according to the weights specified in the user's
    Language Priority List.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的列表根据用户的语言优先级列表中指定的权重进行排序。
- en: The `Locale` class also defines `filterTags` methods for filtering language
    tags as `String` objects.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`Locale`类还定义了`filterTags`方法，用于将语言标记过滤为`String`对象。'
- en: 'The method signatures are as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 方法签名如下：
- en: '[`public static List<String> filterTags (List<Locale.LanguageRange> priorityList,
    Collection<String> tags)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filterTags-java.util.List-java.util.Collection-)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`public static List<String> filterTags (List<Locale.LanguageRange> priorityList,
    Collection<String> tags)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filterTags-java.util.List-java.util.Collection-)'
- en: '[`public static List<String> filterTags (List<Locale.LanguageRange> priorityList,
    Collection<String> tags, Locale.FilteringMode mode)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filterTags-java.util.List-java.util.Collection-java.util.Locale.FilteringMode-)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`public static List<String> filterTags (List<Locale.LanguageRange> priorityList,
    Collection<String> tags, Locale.FilteringMode mode)`](https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#filterTags-java.util.List-java.util.Collection-java.util.Locale.FilteringMode-)'
- en: Example 5 provides the same search as Example 4, but uses `String` objects instead
    of `Locale` objects.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 示例5提供了与示例4相同的搜索，但使用了`String`对象而不是`Locale`对象。
- en: 'Example 5:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 示例5：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As before, the search will match and return "en-US" and "en-GB" (in that order).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前一样，搜索将匹配并返回“en-US”和“en-GB”（按顺序）。
- en: Performing Language Tag Lookup
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行语言标记查找
- en: 'In contrast to language tag filtering, language tag lookup is the process of
    matching language ranges to sets of language tags and returning the one language
    tag that best matches the range. RFC4647 states that: "Lookup produces the single
    result that best matches the user''s preferences from the list of available tags,
    so it is useful in cases in which a single item is required (and for which only
    a single item can be returned). For example, if a process were to insert a human-readable
    error message into a protocol header, it might select the text based on the user''s
    language priority list. Since the process can return only one item, it is forced
    to choose a single item and it has to return some item, even if none of the content''s
    language tags match the language priority list supplied by the user."'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 与语言标记过滤相反，语言标记查找是将语言范围与语言标记集匹配并返回最佳匹配的语言标记的过程。RFC4647规定：“查找从可用标记列表中产生最佳匹配用户偏好的单个结果，因此在需要单个项目的情况下很有用（并且只能返回一个项目）。例如，如果一个过程要将可读的错误消息插入协议头部，它可能会根据用户的语言优先级列表选择文本。由于该过程只能返回一个项目，因此必须选择一个项目并返回某个项目，即使内容的语言标记都不匹配用户提供的语言优先级列表。”
- en: 'Example 6:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 示例6：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In contrast to the filtering examples, the lookup demo in Example 6 returns
    the one object that is the best match (`en-US` in this case). For completeness,
    Example 7 shows how to perform the same lookup using `String` objects.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 与过滤示例相比，在示例6中的查找演示返回最佳匹配的一个对象（在这种情况下是`en-US`）。为了完整起见，示例7展示了如何使用`String`对象执行相同的查找。
- en: 'Example 7:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '示例7:'
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This example returns the single object that best matches the user's Language
    Priority List.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例返回与用户的语言优先级列表最匹配的单个对象。
