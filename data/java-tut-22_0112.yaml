- en: Summary of Characters and Strings
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字符和字符串总结
- en: 原文：[https://docs.oracle.com/javase/tutorial/java/data/stringsummary.html](https://docs.oracle.com/javase/tutorial/java/data/stringsummary.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/java/data/stringsummary.html](https://docs.oracle.com/javase/tutorial/java/data/stringsummary.html)
- en: "Most of the time, if you are using a single character value, you will use the\
    \ primitive `char` type. There are times, however, when you need to use a char\
    \ as an object\x97for example, as a method argument where an object is expected.\
    \ The Java programming language provides a *wrapper* class that \"wraps\" the\
    \ `char` in a `Character` object for this purpose. An object of type `Character`\
    \ contains a single field whose type is `char`. This [`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)\
    \ class also offers a number of useful class (that is, static) methods for manipulating\
    \ characters."
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: "大多数情况下，如果您使用单个字符值，您将使用基本的`char`类型。然而，有时您需要将char用作对象\x97例如，作为期望对象的方法参数。Java编程语言为此提供了一个*包装*类，将`char`包装在`Character`对象中。`Character`类型的对象包含一个类型为`char`的单个字段。这个[`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)类还提供了许多有用的类（即静态）方法来操作字符。"
- en: Strings are a sequence of characters and are widely used in Java programming.
    In the Java programming language, strings are objects. The [`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)
    class has over 60 methods and 13 constructors.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串是字符序列，在Java编程中被广泛使用。在Java编程语言中，字符串是对象。[`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)类有60多个方法和13个构造函数。
- en: Most commonly, you create a string with a statement like
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的是，您可以使用类似于以下语句创建一个字符串
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: rather than using one of the `String` constructors.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是使用其中一个`String`构造函数。
- en: The `String` class has many methods to find and retrieve substrings; these can
    then be easily reassembled into new strings using the `+` concatenation operator.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`String`类有许多方法可以查找和检索子字符串；然后可以使用`+`连接运算符将它们轻松重新组装成新的字符串。'
- en: The `String` class also includes a number of utility methods, among them `split()`,
    `toLowerCase()`, `toUpperCase()`, and `valueOf()`. The latter method is indispensable
    in converting user input strings to numbers. The `Number` subclasses also have
    methods for converting strings to numbers and vice versa.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`String`类还包括许多实用方法，其中包括`split()`、`toLowerCase()`、`toUpperCase()`和`valueOf()`。后者方法在将用户输入的字符串转换为数字时是不可或缺的。`Number`子类还有将字符串转换为数字以及反之的方法。'
- en: In addition to the `String` class, there is also a [`StringBuilder`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html)
    class. Working with `StringBuilder` objects can sometimes be more efficient than
    working with strings. The `StringBuilder` class offers a few methods that can
    be useful for strings, among them `reverse()`. In general, however, the `String`
    class has a wider variety of methods.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`String`类之外，还有一个[`StringBuilder`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html)类。与字符串一起工作相比，使用`StringBuilder`对象有时可能更有效率。`StringBuilder`类提供了一些对字符串有用的方法，其中包括`reverse()`。然而，总的来说，`String`类具有更广泛的方法。
- en: A string can be converted to a string builder using a `StringBuilder` constructor.
    A string builder can be converted to a string with the `toString()` method.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`StringBuilder`构造函数将字符串转换为字符串构建器。可以使用`toString()`方法将字符串构建器转换为字符串。
