- en: SSL and Custom Sockets
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL和自定义套接字
- en: 原文：[https://docs.oracle.com/javase/tutorial/jndi/ldap/ssl.html](https://docs.oracle.com/javase/tutorial/jndi/ldap/ssl.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/jndi/ldap/ssl.html](https://docs.oracle.com/javase/tutorial/jndi/ldap/ssl.html)
- en: In addition to SASL authentication, most LDAP servers allow their services to
    be accessed through SSL. SSL is especially useful for LDAP v2 servers because
    the v2 protocol does not support SASL authentication.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 除了SASL身份验证外，大多数LDAP服务器允许通过SSL访问其服务。SSL对于LDAP v2服务器特别有用，因为v2协议不支持SASL身份验证。
- en: An SSL-enabled server often supports SSL in two ways. In the most basic way,
    the server supports SSL ports in addition to normal (unprotected) ports. The other
    way in which a server supports SSL is via the use of the Start TLS Extension (
    [RFC 2830](http://www.ietf.org/rfc/rfc2830.txt)). This option is available only
    to LDAP v3 servers and is described in detail in the section.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 启用SSL的服务器通常以两种方式支持SSL。在最基本的方式中，服务器支持SSL端口以及普通（未受保护）端口。服务器支持SSL的另一种方式是通过使用“启动TLS扩展”（[RFC
    2830](http://www.ietf.org/rfc/rfc2830.txt)）。此选项仅适用于LDAP v3服务器，并在该部分中有详细描述。
- en: Using the SSL Socket Property
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用SSL套接字属性
- en: By default, the LDAP service provider in the JDK uses plain sockets when communicating
    with the LDAP server. To request that SSL sockets be use, set the [`Context.SECURITY_PROTOCOL`](https://docs.oracle.com/javase/8/docs/api/javax/naming/Context.html#SECURITY_PROTOCOL)
    property to `"ssl"`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，JDK中的LDAP服务提供程序在与LDAP服务器通信时使用普通套接字。要求使用SSL套接字，请将[`Context.SECURITY_PROTOCOL`](https://docs.oracle.com/javase/8/docs/api/javax/naming/Context.html#SECURITY_PROTOCOL)属性设置为`"ssl"`。
- en: In the [`following example`](examples/Ssl.java), the LDAP server is offering
    SSL at port 636\. To run this program, you must enable SSL on port 636 on your
    LDAP server. This procedure is typically carried out by the directory's administrator.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`以下示例`](examples/Ssl.java)中，LDAP服务器在端口636上提供SSL。要运行此程序，您必须在LDAP服务器上的端口636上启用SSL。此过程通常由目录管理员执行。
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Server Requirements:** The LDAP server must be set up with an X.509 SSL server
    certificate and have SSL enabled. Typically, you must first obtain a signed certificate
    for the server from a certificate authority (CA). Then, follow the instructions
    from your directory vendor on how to enable SSL. Different vendors have different
    tools for doing this.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务器要求：** LDAP服务器必须设置为具有X.509 SSL服务器证书并启用SSL。通常，您必须首先从证书颁发机构（CA）为服务器获取签名证书。然后，按照目录供应商的说明启用SSL。不同的供应商有不同的工具来执行此操作。'
- en: 'For the [Oracle Directory Server, v5.2](http://www.oracle.com/technetwork/testcontent/index-085178.html)
    , use the Manage Certificates tool in the Administration Console to generate a
    Certificate Signing Request (CSR). Submit the CSR to a CA to obtain an X.509 SSL
    server certificate. Using the Administration Console, add the certificate to the
    server''s list of certificates. Also install the CA''s certificate if it is not
    already in the server''s list of trusted CAs. Enable SSL by using the Configuration
    tab in the Administration Console. Select the server in the left pane. Select
    the Encryption tab in the right pane. Click the check boxes for "Enable SSL for
    this server" and "Use this cipher family: RSA", ensuring that the server certificate
    you have added is in the list of certificates.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[Oracle Directory Server, v5.2](http://www.oracle.com/technetwork/testcontent/index-085178.html)，请在管理控制台中使用“管理证书”工具生成证书签名请求（CSR）。将CSR提交给CA以获取X.509
    SSL服务器证书。使用管理控制台，将证书添加到服务器的证书列表中。如果CA的证书尚未在服务器的受信任CA列表中，则也需安装CA的证书。通过在管理控制台中使用“配置”选项卡启用SSL。在左窗格中选择服务器。在右窗格中选择“加密”选项卡。选中“为此服务器启用SSL”和“使用此密码族：RSA”的复选框，确保您添加的服务器证书在证书列表中。
- en: '**Client Requirements:** You need to ensure that the client trusts the LDAP
    server that you''ll be using. You must install the server''s certificate (or its
    CA''s certificate) in your JRE''s database of trusted certificates. Here is an
    example.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**客户端要求：** 您需要确保客户端信任您将要使用的LDAP服务器。您必须在JRE的受信任证书数据库中安装服务器的证书（或其CA的证书）。这里是一个例子。'
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For information on how to use the security tools, see the [Security](../../security/index.html)
    trail. For information on the JSSE, see the [Java Secure Socket Extension (JSSE)
    Reference Guide](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何使用安全工具的信息，请参阅[安全](../../security/index.html)指南。有关JSSE的信息，请参阅[Java安全套接字扩展（JSSE）参考指南](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html)。
- en: '* * *'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '* * *'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:** If you use SSL to connect to a server on a port that is *not* using
    SSL, then your program will hang. Similarly, if you use a plain socket to connect
    to a server''s SSL socket, then your application will hang. This is a characteristic
    of the SSL protocol.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果您使用 SSL 连接到未使用 SSL 的端口的服务器，则您的程序将挂起。同样，如果您使用普通套接字连接到服务器的 SSL 套接字，则您的应用程序将挂起。这是
    SSL 协议的特性。'
- en: '* * *'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Using the LDAPS URL
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 LDAPS URL
- en: Instead of requesting the use of SSL via the use of the [`Context.SECURITY_PROTOCOL`](https://docs.oracle.com/javase/8/docs/api/javax/naming/Context.html#SECURITY_PROTOCOL)
    property, you can also request the use of SSL via the use of LDAPS URLs. An LDAPS
    URL is similar to an LDAP URL except that the URL scheme is "ldaps" instead of
    "ldap". It specifies the use of SSL when communicating with the LDAP server.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用[`Context.SECURITY_PROTOCOL`](https://docs.oracle.com/javase/8/docs/api/javax/naming/Context.html#SECURITY_PROTOCOL)属性请求使用
    SSL，您还可以通过使用 LDAPS URL 请求使用 SSL。LDAPS URL 类似于 LDAP URL，只是 URL 方案为 "ldaps" 而不是
    "ldap"。它指定与 LDAP 服务器通信时使用 SSL。
- en: In the [`following example`](examples/Ldaps.java), the LDAP server is offering
    SSL at port 636\. To run this program, you must enable SSL on port 636 on your
    LDAP server.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`以下示例`](examples/Ldaps.java)中，LDAP 服务器在端口 636 上提供 SSL。要运行此程序，您必须在 LDAP 服务器上的端口
    636 上启用 SSL。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: LDAPS URLs are accepted anywhere LDAP URLs are accepted. Check out the [JNDI
    Tutorial](https://docs.oracle.com/javase/jndi/tutorial/ldap/misc/url.html) for
    details on LDAP and LDAPS URLs.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: LDAPS URL 可以在任何接受 LDAP URL 的地方使用。查看[JNDI 教程](https://docs.oracle.com/javase/jndi/tutorial/ldap/misc/url.html)了解有关
    LDAP 和 LDAPS URL 的详细信息。
- en: 'Client Authentication: Using SSL with the External SASL Mechanism'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端身份验证：使用外部 SASL 机制的 SSL
- en: SSL provides authentication and other security services at a lower layer than
    the LDAP. If authentication has already been done at the SSL, the LDAP layer can
    use that authentication information from SSL by using the [External](http://www.ietf.org/rfc/rfc2222.txt)
    SASL mechanism.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: SSL 在比 LDAP 更低的层次提供身份验证和其他安全服务。如果在 SSL 上已经完成了身份验证，则 LDAP 层可以通过使用[External](http://www.ietf.org/rfc/rfc2222.txt)
    SASL 机制从 SSL 中使用该身份验证信息。
- en: The [`following example`](examples/External.java) is like the [`previous SSL
    example`](examples/Ssl.java), except that instead of using simple authentication,
    it uses the External SASL authentication. By using External, you do not need to
    supply any principal or password information, because they get picked up from
    the SSL.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`以下示例`](examples/External.java)类似于[`先前的 SSL 示例`](examples/Ssl.java)，只是它不使用简单身份验证，而是使用外部
    SASL 身份验证。通过使用 External，您无需提供任何主体或密码信息，因为它们会从 SSL 中获取。'
- en: '* * *'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Server Requirements:** This example requires the LDAP server to allow certificate-based
    client authentication. In addition, the LDAP server must trust (the CAs of) the
    client certificates that it receives, and must be able to map the owner distinguished
    names in the client certificates to principals that it knows about. Follow the
    instructions from your directory vendor on how to perform these tasks.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务器要求：** 此示例要求 LDAP 服务器允许基于证书的客户端身份验证。此外，LDAP 服务器必须信任（CA 的）接收到的客户端证书，并且必须能够将客户端证书中的所有者可分辨名称映射到其了解的主体。请按照您的目录供应商的说明执行这些任务。'
- en: '**Client Requirements:** This example requires the client to have an X.509
    SSL client certificate. Moreover, the certificate must be stored as the first
    key entry in a keystore file. If this entry is password-protected, it must have
    the same password as the keystore. For more information about JSSE keystores,
    see the [Java Secure Socket Extension (JSSE) Reference Guide](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**客户端要求：** 此示例要求客户端具有 X.509 SSL 客户端证书。此外，证书必须存储为密钥库文件中的第一个密钥条目。如果此条目受密码保护，则必须与密钥库具有相同的密码。有关
    JSSE 密钥库的更多信息，请参阅[Java 安全套接字扩展（JSSE）参考指南](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html)。'
- en: '* * *'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To run this program so that the client's certificate is used for authentication,
    you must provide (as system properties) the location and password of the keystore
    containing the client's certificate. Here is an example of how to run the program.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行此程序以便使用客户端证书进行身份验证，您必须提供（作为系统属性）包含客户端证书的密钥库的位置和密码。以下是运行程序的示例。
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you do not supply a keystore, the program will run using anonymous authentication
    because no client credential exists at the SSL.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有提供密钥库，程序将使用匿名身份验证运行，因为在 SSL 上不存在客户端凭据。
- en: This example shows the most basic way to accomplish certificate-based client
    authentication. More advanced ways can be accomplished by writing and using a
    custom socket factory that accesses the client certificate in a more flexible
    manner, perhaps by using an LDAP directory. The next section shows how to use
    a custom socket factory with your JNDI application.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例展示了实现基于证书的客户端身份验证的最基本方法。 通过编写和使用访问客户端证书的自定义套接字工厂，可以以更灵活的方式实现更高级的方法，也许通过使用LDAP目录。
    下一节将展示如何在JNDI应用程序中使用自定义套接字工厂。
- en: Using Custom Sockets
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用自定义套接字
- en: When using SSL, the LDAP provider will, by default, use the socket factory,
    [`javax.net.ssl.SSLSocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html),
    for creating an SSL socket to communicate with the server, using the default JSSE
    configuration. The JSSE can be customized in a variety of ways, as detailed in
    the [Java Secure Socket Extension (JSSE) Reference Guide](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html).
    However, there are times when those customizations are not sufficient and you
    need to have more control over the SSL sockets, or sockets in general, used by
    the LDAP service provider. For example, you might need sockets that can bypass
    firewalls, or JSSE sockets that use non-default caching/retrieval policies for
    its trust and key stores. To set the socket factory implementation used by the
    LDAP service provider, set the `"java.naming.ldap.factory.socket"` property to
    the fully qualified class name of the socket factory. This class must implement
    the [`javax.net.SocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/SocketFactory.html)
    abstract class and provide an implementation of the [`getDefault()`](https://docs.oracle.com/javase/8/docs/api/javax/net/SocketFactory.html#getDefault--)
    method that returns an instance of the socket factory. See the [Java Secure Socket
    Extension (JSSE) Reference Guide](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用SSL时，默认情况下，LDAP提供程序将使用套接字工厂，[`javax.net.ssl.SSLSocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocketFactory.html)，用于创建与服务器通信的SSL套接字，使用默认的JSSE配置。
    JSSE可以以多种方式进行自定义，详细信息请参阅[Java安全套接字扩展（JSSE）参考指南](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html)。
    但是，有时这些自定义不足以满足需求，您需要对LDAP服务提供程序使用的SSL套接字或一般套接字进行更多控制。 例如，您可能需要能够绕过防火墙的套接字，或者JSSE套接字使用非默认的缓存/检索策略来管理其信任和密钥存储。
    要设置LDAP服务提供程序使用的套接字工厂实现，请将`"java.naming.ldap.factory.socket"`属性设置为套接字工厂的完全限定类名。
    此类必须实现[`javax.net.SocketFactory`](https://docs.oracle.com/javase/8/docs/api/javax/net/SocketFactory.html)抽象类，并提供实现[`getDefault()`](https://docs.oracle.com/javase/8/docs/api/javax/net/SocketFactory.html#getDefault--)方法的实例，该方法返回套接字工厂的实例。
    请参阅[Java安全套接字扩展（JSSE）参考指南](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html)。
- en: Here is an example of a [`custom socket factory`](examples/CustomSocketFactory.java)
    that produces plain sockets.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个产生普通套接字的[`自定义套接字工厂`](examples/CustomSocketFactory.java)的示例。
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that this example creates a new instance of `CustomSocketFactory` each
    time a new LDAP connection is created. This might be appropriate for some applications
    and socket factories. If you want to reuse the same socket factory, `getDefault()`
    should return a singleton.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此示例每次创建新的LDAP连接时都会创建`CustomSocketFactory`的新实例。 这对某些应用程序和套接字工厂可能是合适的。 如果要重用相同的套接字工厂，`getDefault()`应返回一个单例。
- en: To use this custom socket factory with a JNDI program, set the `"java.naming.ldap.factory.socket"`
    property, as shown in the [`following example`](examples/UseFactory.java).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要在JNDI程序中使用此自定义套接字工厂，请设置`"java.naming.ldap.factory.socket"`属性，如[`以下示例`](examples/UseFactory.java)所示。
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `"java.naming.ldap.factory.socket"` property is useful for setting the socket
    factory on a per context basis. Another way to control the sockets used by the
    LDAP service provider is to set the socket factory for all sockets used in the
    entire program, by using [`java.net.Socket.setSocketImplFactory()`](https://docs.oracle.com/javase/8/docs/api/java/net/Socket.html#setSocketImplFactory-java.net.SocketImplFactory-).
    Use of this method is less flexible because it affects all socket connections,
    not just LDAP connections and therefore, should be used with care.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`"java.naming.ldap.factory.socket"` 属性可用于在每个上下文基础上设置套接字工厂。另一种控制 LDAP 服务提供程序使用的套接字的方法是通过使用[`java.net.Socket.setSocketImplFactory()`](https://docs.oracle.com/javase/8/docs/api/java/net/Socket.html#setSocketImplFactory-java.net.SocketImplFactory-)为整个程序中使用的所有套接字设置套接字工厂。使用这种方法不够灵活，因为它影响所有套接字连接，而不仅仅是
    LDAP 连接，因此应谨慎使用。'
