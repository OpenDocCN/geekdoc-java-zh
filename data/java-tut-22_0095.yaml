- en: Writing Final Classes and Methods
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写最终类和方法
- en: 原文：[https://docs.oracle.com/javase/tutorial/java/IandI/final.html](https://docs.oracle.com/javase/tutorial/java/IandI/final.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/java/IandI/final.html](https://docs.oracle.com/javase/tutorial/java/IandI/final.html)
- en: "You can declare some or all of a class's methods *final*. You use the `final`\
    \ keyword in a method declaration to indicate that the method cannot be overridden\
    \ by subclasses. The `Object` class does this\x97a number of its methods are `final`."
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将类的一些或所有方法声明为*最终*。在方法声明中使用`final`关键字表示该方法不能被子类重写。`Object`类就是这样做的——它的一些方法是`final`的。
- en: 'You might wish to make a method final if it has an implementation that should
    not be changed and it is critical to the consistent state of the object. For example,
    you might want to make the `getFirstPlayer` method in this `ChessAlgorithm` class
    final:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个方法有一个不应该被更改的实现，并且对对象的一致状态至关重要，你可能希望将其设置为最终方法。例如，你可能想要将`ChessAlgorithm`类中的`getFirstPlayer`方法设置为最终方法：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Methods called from constructors should generally be declared final. If a constructor
    calls a non-final method, a subclass may redefine that method with surprising
    or undesirable results.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从构造函数中调用的方法通常应该声明为最终方法。如果构造函数调用一个非最终方法，子类可能重新定义该方法，导致意想不到或不希望的结果。
- en: Note that you can also declare an entire class final. A class that is declared
    final cannot be subclassed. This is particularly useful, for example, when creating
    an immutable class like the `String` class.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你也可以声明整个类为最终类。声明为最终类的类不能被子类化。例如，当创建像`String`类这样的不可变类时，这是非常有用的。
