- en: When to Use Nested Classes, Local Classes, Anonymous Classes, and Lambda Expressions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 何时使用嵌套类、局部类、匿名类和Lambda表达式
- en: 原文：[https://docs.oracle.com/javase/tutorial/java/javaOO/whentouse.html](https://docs.oracle.com/javase/tutorial/java/javaOO/whentouse.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/java/javaOO/whentouse.html](https://docs.oracle.com/javase/tutorial/java/javaOO/whentouse.html)
- en: 'As mentioned in the section [Nested Classes](nested.html), nested classes enable
    you to logically group classes that are only used in one place, increase the use
    of encapsulation, and create more readable and maintainable code. Local classes,
    anonymous classes, and lambda expressions also impart these advantages; however,
    they are intended to be used for more specific situations:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如在[嵌套类](nested.html)一节中所述，嵌套类使您能够逻辑地将仅在一个地方使用的类分组，增加封装的使用，并创建更易读和可维护的代码。局部类、匿名类和Lambda表达式也具有这些优点；但是，它们旨在用于更具体的情况：
- en: '[Local class](localclasses.html): Use it if you need to create more than one
    instance of a class, access its constructor, or introduce a new, named type (because,
    for example, you need to invoke additional methods later).'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[局部类](localclasses.html)：如果需要创建一个类的多个实例、访问其构造函数或引入一个新的命名类型（例如，因为您需要稍后调用其他方法），请使用它。'
- en: '[Anonymous class](anonymousclasses.html): Use it if you need to declare fields
    or additional methods.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[匿名类](anonymousclasses.html)：如果需要声明字段或额外方法，请使用它。'
- en: '[Lambda expression](lambdaexpressions.html):'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Lambda表达式](lambdaexpressions.html)：'
- en: Use it if you are encapsulating a single unit of behavior that you want to pass
    to other code. For example, you would use a lambda expression if you want a certain
    action performed on each element of a collection, when a process is completed,
    or when a process encounters an error.
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您要封装要传递给其他代码的单个行为单元，请使用它。例如，如果您希望对集合的每个元素执行某个操作，当进程完成时，或者当进程遇到错误时，您将使用Lambda表达式。
- en: Use it if you need a simple instance of a functional interface and none of the
    preceding criteria apply (for example, you do not need a constructor, a named
    type, fields, or additional methods).
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果需要一个功能接口的简单实例，并且前述条件均不适用（例如，您不需要构造函数、命名类型、字段或额外方法），请使用它。
- en: '[Nested class](nested.html): Use it if your requirements are similar to those
    of a local class, you want to make the type more widely available, and you don''t
    require access to local variables or method parameters.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[嵌套类](nested.html)：如果您的需求类似于局部类，并且希望使类型更广泛可用，且不需要访问局部变量或方法参数时，请使用它。'
- en: Use a non-static nested class (or inner class) if you require access to an enclosing
    instance's non-public fields and methods. Use a static nested class if you don't
    require this access.
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果需要访问封闭实例的非公共字段和方法，请使用非静态嵌套类（或内部类）。如果不需要此访问权限，请使用静态嵌套类。
