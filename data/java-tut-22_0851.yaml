- en: Export the Public Key Certificate
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出公钥证书
- en: 原文：[https://docs.oracle.com/javase/tutorial/security/toolfilex/step4.html](https://docs.oracle.com/javase/tutorial/security/toolfilex/step4.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/security/toolfilex/step4.html](https://docs.oracle.com/javase/tutorial/security/toolfilex/step4.html)
- en: 'You now have a signed JAR file `sContract.jar`. Recipients wanting to use this
    file will also want to authenticate your signature. To do this, they need the
    public key that corresponds to the private key you used to generate your signature.
    You supply your public key by sending them a copy of the certificate that contains
    your public key. Copy that certificate from the keystore `examplestanstore` to
    a file named `StanSmith.cer` via the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在拥有一个已签名的JAR文件`sContract.jar`。想要使用此文件的接收方也希望验证您的签名。为此，他们需要与您用于生成签名的私钥对应的公钥。您可以通过将包含您的公钥的证书副本发送给他们来提供您的公钥。通过以下方式，将该证书从密钥库`examplestanstore`复制到名为`StanSmith.cer`的文件中：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You will be prompted for the store password.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 系统会提示您输入存储密码。
- en: Once they have that certificate and the signed JAR file, your recipient can
    use the `jarsigner` tool to authenticate your signature. See [Steps for the Contract
    Receiver](receiver.html).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦他们获得了该证书和签名的JAR文件，您的接收方可以使用`jarsigner`工具来验证您的签名。请参阅[合同接收方的步骤](receiver.html)。
