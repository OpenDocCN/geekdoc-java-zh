- en: 'Lesson: Annotations'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 课程：注解
- en: 原文：[https://docs.oracle.com/javase/tutorial/java/annotations/index.html](https://docs.oracle.com/javase/tutorial/java/annotations/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/java/annotations/index.html](https://docs.oracle.com/javase/tutorial/java/annotations/index.html)
- en: '*Annotations*, a form of metadata, provide data about a program that is not
    part of the program itself. Annotations have no direct effect on the operation
    of the code they annotate.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*注解*，一种元数据形式，提供关于程序的数据，这些数据不是程序本身的一部分。注解对其注释的代码的操作没有直接影响。'
- en: 'Annotations have a number of uses, among them:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 注解有多种用途，其中包括：
- en: "**Information for the compiler** \x97 Annotations can be used by the compiler\
    \ to detect errors or suppress warnings."
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: "**编译器的信息** \x97 编译器可以使用注解来检测错误或抑制警告。"
- en: "**Compile-time and deployment-time processing** \x97 Software tools can process\
    \ annotation information to generate code, XML files, and so forth."
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: "**编译时和部署时处理** \x97 软件工具可以处理注解信息以生成代码、XML文件等。"
- en: "**Runtime processing** \x97 Some annotations are available to be examined at\
    \ runtime."
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: "**运行时处理** \x97 一些注解可以在运行时被检查。"
- en: This lesson explains where annotations can be used, how to apply annotations,
    what predefined annotation types are available in the Java Platform, Standard
    Edition (Java SE API), how type annotations can be used in conjunction with pluggable
    type systems to write code with stronger type checking, and how to implement repeating
    annotations.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程解释了注解可以在哪里使用，如何应用注解，在Java平台标准版（Java SE API）中有哪些预定义的注解类型可用，如何将类型注解与可插入类型系统结合使用以编写具有更强类型检查的代码，以及如何实现重复注解。
