- en: 'Questions and Exercises: Regular Expressions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题和练习：正则表达式
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/regex/QandE/questions.html](https://docs.oracle.com/javase/tutorial/essential/regex/QandE/questions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/regex/QandE/questions.html](https://docs.oracle.com/javase/tutorial/essential/regex/QandE/questions.html)
- en: Questions
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: What are the three public classes in the `java.util.regex` package? Describe
    the purpose of each.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`java.util.regex`包中有哪三个公共类？描述每个类的目的。'
- en: Consider the string literal `"foo"`. What is the start index? What is the end
    index? Explain what these numbers mean.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑字符串字面值`"foo"`。起始索引是多少？结束索引是多少？解释这些数字的含义。
- en: What is the difference between an ordinary character and a metacharacter? Give
    an example of each.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 普通字符和元字符之间有什么区别？举例说明。
- en: How do you force a metacharacter to act like an ordinary character?
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何让一个元字符表现得像一个普通字符？
- en: What do you call a set of characters enclosed in square brackets? What is it
    for?
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一组字符被方括号括起来叫什么？它的作用是什么？
- en: 'Here are three predefined character classes: `\d`, `\s`, and `\w`. Describe
    each one, and rewrite it using square brackets.'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里有三个预定义的字符类：`\d`、`\s`和`\w`。描述每一个，并使用方括号重写它们。
- en: For each of `\d`, `\s`, and `\w`, write *two* simple expressions that match
    the *opposite* set of characters.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个`\d`、`\s`和`\w`，写出*两个*简单的表达式，匹配*相反*的字符集。
- en: Consider the regular expression `(dog){3}`. Identify the two subexpressions.
    What string does the expression match?
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑正则表达式`(dog){3}`。识别两个子表达式。这个表达式匹配什么字符串？
- en: Exercises
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: Use a backreference to write an expression that will match a person's name only
    if that person's first name and last name are the same.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用反向引用编写一个表达式，只有当一个人的名字和姓氏相同时才匹配该人的名字。
- en: '[Check your answers.](answers.html)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[检查你的答案。](answers.html)'
