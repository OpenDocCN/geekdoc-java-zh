- en: Pausing Execution with Sleep
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 暂停执行与睡眠
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/sleep.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/sleep.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/sleep.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/sleep.html)
- en: '`Thread.sleep` causes the current thread to suspend execution for a specified
    period. This is an efficient means of making processor time available to the other
    threads of an application or other applications that might be running on a computer
    system. The `sleep` method can also be used for pacing, as shown in the example
    that follows, and waiting for another thread with duties that are understood to
    have time requirements, as with the `SimpleThreads` example in a later section.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`Thread.sleep`会导致当前线程暂停执行一段指定的时间。这是一种有效的方式，可以让处理器时间可用于应用程序的其他线程或者可能在计算机系统上运行的其他应用程序。`sleep`方法也可以用于节奏控制，就像下面的示例中展示的那样，以及等待另一个线程，该线程的任务被理解为具有时间要求，就像稍后章节中的`SimpleThreads`示例一样。'
- en: 'Two overloaded versions of `sleep` are provided: one that specifies the sleep
    time to the millisecond and one that specifies the sleep time to the nanosecond.
    However, these sleep times are not guaranteed to be precise, because they are
    limited by the facilities provided by the underlying OS. Also, the sleep period
    can be terminated by interrupts, as we''ll see in a later section. In any case,
    you cannot assume that invoking `sleep` will suspend the thread for precisely
    the time period specified.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了两个重载版本的`sleep`：一个指定以毫秒为单位的睡眠时间，另一个指定以纳秒为单位的睡眠时间。然而，这些睡眠时间不能保证是精确的，因为它们受到底层操作系统提供的设施的限制。此外，睡眠时间可以被中断，我们将在稍后的章节中看到。无论如何，你不能假设调用`sleep`会精确地暂停线程指定的时间段。
- en: 'The [``SleepMessages``](examples/SleepMessages.java) example uses `sleep` to
    print messages at four-second intervals:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[``SleepMessages``](examples/SleepMessages.java)示例使用`sleep`以四秒的间隔打印消息：'
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Notice that `main` declares that it `throws InterruptedException`. This is an
    exception that `sleep` throws when another thread interrupts the current thread
    while `sleep` is active. Since this application has not defined another thread
    to cause the interrupt, it doesn't bother to catch `InterruptedException`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`main`声明了它会`throws InterruptedException`。这是一个异常，当另一个线程在`sleep`处于活动状态时中断当前线程时会抛出。由于这个应用程序没有定义另一个线程来引起中断，所以它不会去捕获`InterruptedException`。
