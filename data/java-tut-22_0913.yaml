- en: Creating New Arrays
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新数组
- en: 原文：[https://docs.oracle.com/javase/tutorial/reflect/special/arrayInstance.html](https://docs.oracle.com/javase/tutorial/reflect/special/arrayInstance.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/reflect/special/arrayInstance.html](https://docs.oracle.com/javase/tutorial/reflect/special/arrayInstance.html)
- en: 'Just as in non-reflective code, reflection supports the ability to dynamically
    create arrays of arbitrary type and dimensions via [`java.lang.reflect.Array.newInstance()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Array.html#newInstance-java.lang.Class-int-).
    Consider [``ArrayCreator``](example/ArrayCreator.java), a basic interpreter capable
    of dynamically creating arrays. The syntax that will be parsed is as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 就像非反射代码一样，反射支持通过[`java.lang.reflect.Array.newInstance()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Array.html#newInstance-java.lang.Class-int-)动态创建任意类型和维度的数组的能力。考虑[``ArrayCreator``](example/ArrayCreator.java)，一个能够动态创建数组的基本解释器。将解析的语法如下：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Assume that the `fully_qualified_class_name` represents a class that has a constructor
    with a single [`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)
    argument. The dimensions of the array are determined by the number of values provided.
    The following example will construct an instance of an array of `fully_qualified_class_name`
    and populate its values with instances given by `val1`, `val2`, etc. (This example
    assumes familiarity with [`Class.getConstructor()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getConstructor-java.lang.Class...-)
    and [`java.lang.reflect.Constructor.newInstance()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Constructor.html#newInstance-java.lang.Object...-).
    For a discussion of the reflection APIs for [`Constructor`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Constructor.html)
    see the [Creating New Class Instances](../member/ctorInstance.html) section of
    this trail.)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设`fully_qualified_class_name`代表一个具有接受单个[`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)参数的构造函数的类。数组的维度由提供的值的数量确定。以下示例将构造一个`fully_qualified_class_name`数组的实例，并用`val1`、`val2`等给定的实例填充其值。（此示例假定熟悉[`Class.getConstructor()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getConstructor-java.lang.Class...-)和[`java.lang.reflect.Constructor.newInstance()`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Constructor.html#newInstance-java.lang.Object...-)。有关[`Constructor`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Constructor.html)的反射API的讨论，请参阅本教程的[Creating
    New Class Instances](../member/ctorInstance.html)部分。）
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The above example shows one case where it may be desirable to create an array
    via reflection; namely if the component type is not known until runtime. In this
    case, the code uses [`Class.forName()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#forName--)
    to get a class for the desired component type and then calls a specific constructor
    to initialize each component of the array before setting the corresponding array
    value.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的示例展示了可能希望通过反射创建数组的一种情况；即如果组件类型直到运行时才知道。在这种情况下，代码使用[`Class.forName()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#forName--)获取所需组件类型的类，然后调用特定的构造函数来初始化数组的每个组件，然后设置相应的数组值。
