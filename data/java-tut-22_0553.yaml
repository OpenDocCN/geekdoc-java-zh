- en: 'Lesson: Date-Time Overview'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 教训：日期时间概述
- en: 原文：[https://docs.oracle.com/javase/tutorial/datetime/overview/index.html](https://docs.oracle.com/javase/tutorial/datetime/overview/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/datetime/overview/index.html](https://docs.oracle.com/javase/tutorial/datetime/overview/index.html)
- en: Time seems to be a simple subject; even an inexpensive watch can provide a reasonably
    accurate date and time. However, with closer examination, you realize the subtle
    complexities and many factors that affect your understanding of time. For example,
    the result of adding one month to January 31 is different for a leap year than
    for other years. Time zones also add complexity. For example, a country may go
    in and out of daylight saving time at short notice, or more than once a year or
    it may skip daylight saving time entirely for a given year.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 时间似乎是一个简单的主题；即使是一只廉价的手表也可以提供相当准确的日期和时间。然而，仔细观察后，你会意识到时间的微妙复杂性和许多影响你对时间理解的因素。例如，将一个月加到1月31日的结果对于闰年和其他年份是不同的。时区也增加了复杂性。例如，一个国家可能会在短时间内进入和退出夏令时，或者一年内多次进入和退出夏令时，或者在某一年完全跳过夏令时。
- en: The Date-Time API uses the calendar system defined in [ISO-8601](http://www.iso.org/iso/home/standards/iso8601.htm)
    as the default calendar. This calendar is based on the Gregorian calendar system
    and is used globally as the de facto standard for representing date and time.
    The core classes in the Date-Time API have names such as `LocalDateTime`, `ZonedDateTime`,
    and `OffsetDateTime`. All of these use the ISO calendar system. If you want to
    use an alternative calendar system, such as Hijrah or Thai Buddhist, the `java.time.chrono`
    package allows you to use one of the predefined calendar systems. Or you can create
    your own.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 日期时间 API 使用[ISO-8601](http://www.iso.org/iso/home/standards/iso8601.htm)中定义的日历系统作为默认日历。这个日历基于格里高利历系统，在全球范围内被用作代表日期和时间的事实标准。日期时间
    API 中的核心类的名称如`LocalDateTime`、`ZonedDateTime`和`OffsetDateTime`。所有这些类都使用 ISO 日历系统。如果你想使用另一个日历系统，比如伊斯兰历或泰国佛历，`java.time.chrono`包允许你使用其中一个预定义的日历系统。或者你也可以创建自己的日历系统。
- en: The Date-Time API uses the [Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org).
    This repository supports the world's languages and contains the world's largest
    collection of locale data available. The information in this repository has been
    localized to hundreds of languages. The Date-Time API also uses the [Time-Zone
    Database (TZDB)](http://www.iana.org/time-zones). This database provides information
    about every time zone change globally since 1970, with history for primary time
    zones since the concept was introduced.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 日期时间 API 使用[Unicode 通用区域数据存储库 (CLDR)](http://cldr.unicode.org)。这个存储库支持世界上的语言，并包含可用的最大的区域数据集合。这个存储库中的信息已被本地化到数百种语言。日期时间
    API 还使用[时区数据库 (TZDB)](http://www.iana.org/time-zones)。这个数据库提供自1970年以来全球每个时区变更的信息，以及自该概念引入以来主要时区的历史。
