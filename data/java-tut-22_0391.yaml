- en: How to Use Split Panes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用分割窗格
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html](https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html](https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html)
- en: A [`JSplitPane`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html)
    displays two components, either side by side or one on top of the other. By dragging
    the divider that appears between the components, the user can specify how much
    of the split pane's total area goes to each component. You can divide screen space
    among three or more components by putting split panes inside of split panes, as
    described in [Nesting Split Panes](#nesting).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`JSplitPane`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html)显示两个组件，可以并排显示或者上下显示。通过拖动出现在组件之间的分隔符，用户可以指定分割窗格总面积中每个组件所占的比例。通过将分割窗格放入分割窗格中，可以在三个或更多组件之间划分屏幕空间，如[Nesting
    Split Panes](#nesting)中所述。
- en: Instead of adding the components of interest directly to a split pane, you often
    put each component into a [scroll pane](scrollpane.html). You then put the scroll
    panes into the split pane. This allows the user to view any part of a component
    of interest, without requiring the component to take up a lot of screen space
    or adapt to displaying itself in varying amounts of screen space.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 与直接将感兴趣的组件添加到分割窗格不同，通常将每个组件放入[滚动窗格](scrollpane.html)中。然后将滚动窗格放入分割窗格中。这样用户可以查看感兴趣组件的任何部分，而无需组件占用大量屏幕空间或适应在不同屏幕空间中显示自身。
- en: 'Here''s a picture of an application that uses a split pane to display a list
    and an image side by side:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用分割窗格并将列表和图像并排显示的应用程序的图片：
- en: '![A snapshot of SplitPaneDemo](../Images/b1fa28471aceccf3be53e9f7e0030f3f.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![SplitPaneDemo的快照](../Images/b1fa28471aceccf3be53e9f7e0030f3f.png)'
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run the SplitPaneDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#SplitPaneDemo).[![Launches
    the SplitPaneDemo example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDemoProject/SplitPaneDemo.jnlp)
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行SplitPaneDemo（[下载JDK
    7或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#SplitPaneDemo)。[![启动SplitPaneDemo示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDemoProject/SplitPaneDemo.jnlp)
- en: Drag the dimpled line that divides the list and the image to the left or right.
    Try to drag the divider all the way to the window's edge.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拖动分隔列表和图像的虚线，使其向左或向右移动。尝试将分隔线拖动到窗口边缘。
- en: Click the tiny arrows on the divider to hide/expand the left or right component.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击分隔符上的小箭头可隐藏/展开左侧或右侧组件。
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Below is the code from `SplitPaneDemo` that creates and sets up the split pane.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是从`SplitPaneDemo`中创建和设置分割窗格的代码。
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The constructor used by this example takes three arguments. The first indicates
    the split direction. The other arguments are the two components to put in the
    split pane. Refer to [Setting the Components in a Split Pane](#adding) for information
    about `JSplitPane` methods that set the components dynamically.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例使用的构造函数接受三个参数。第一个参数表示分割方向。其他参数是要放入分割窗格的两个组件。有关动态设置组件的`JSplitPane`方法，请参考[设置分割窗格中的组件](#adding)。
- en: "The split pane in this example is split horizontally \x97 the two components\
    \ appear side by side \x97 as specified by the `JSplitPane.HORIZONTAL_SPLIT` argument\
    \ to the constructor. Split pane provides one other option, specified with `JSplitPane.VERTICAL_SPLIT`,\
    \ that places one component above the other. You can change the split direction\
    \ after the split pane has been created with the `setOrientation` method."
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: "此示例中的分割窗格水平分割 \x97 两个组件并排显示 \x97 如构造函数中的`JSplitPane.HORIZONTAL_SPLIT`参数所指定。分割窗格提供另一个选项，使用`JSplitPane.VERTICAL_SPLIT`指定，将一个组件放在另一个组件上方。您可以在创建分割窗格后使用`setOrientation`方法更改分割方向。"
- en: Two small arrows appear at the top of the divider in the example's split pane.
    These arrows let the user collapse (and then expand) either of the components
    with a single click. The current look and feel determines whether these controls
    appear by default. In the Java look and feel, they are turned off by default.
    (Note that not all look and feels support this.) The example turned them on using
    the `setOneTouchExpandable` method.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例的分割窗格中，分隔条顶部会出现两个小箭头。这些箭头允许用户通过单击折叠（然后展开）任一组件。当前的外观和感觉决定了这些控件是否默认显示。在Java外观和感觉中，默认情况下是关闭的。（请注意，并非所有外观和感觉都支持此功能。）示例使用`setOneTouchExpandable`方法将它们打开。
- en: The range of a split pane's divider is determined in part by the minimum sizes
    of the components within the split pane. See [Positioning the Divider and Restricting
    its Range](#divider) for details.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 分割窗格的分隔条范围部分取决于分割窗格内组件的最小尺寸。有关详细信息，请参阅[设置分隔条的位置和限制其范围](#divider)。
- en: 'The rest of this section covers these topics:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的其余部分涵盖以下主题：
- en: '[Setting the Components in a Split Pane](#adding)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在分割窗格中设置组件](#adding)'
- en: '[Positioning the Divider and Restricting its Range](#divider)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[设置分隔条的位置和限制其范围](#divider)'
- en: '[Nesting Split Panes](#nesting)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[嵌套分割窗格](#nesting)'
- en: '[The Split Pane API](#api)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分割窗格API](#api)'
- en: '[Examples that Use Split Panes](#eg)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用分割窗格的示例](#eg)'
- en: Setting the Components in a Split Pane
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在分割窗格中设置组件
- en: 'A program can set a split pane''s two components dynamically with these four
    methods:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 程序可以使用这四种方法动态设置分割窗格的两个组件：
- en: '`setLeftComponent`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setLeftComponent`'
- en: '`setRightComponent`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setRightComponent`'
- en: '`setTopComponent`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setTopComponent`'
- en: '`setBottomComponent`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setBottomComponent`'
- en: You can use any of these methods at any time regardless of the split pane's
    current split direction. Calls to `setLeftComponent` and `setTopComponent` are
    equivalent and set the specified component in the top or left position, depending
    on the split pane's current split orientation. Similarly, calls to `setRightComponent`
    and `setBottomComponent` are equivalent. These methods replace whatever component
    is already in that position with the new one.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时使用这些方法，而不管分割窗格当前的分割方向如何。调用`setLeftComponent`和`setTopComponent`是等效的，并根据分割窗格当前的分割方向在顶部或左侧位置设置指定的组件。类似地，调用`setRightComponent`和`setBottomComponent`是等效的。这些方法将替换该位置已有的任何组件为新组件。
- en: Like other containers, `JSplitPane` supports the `add` method. Split pane puts
    the first component added in the left or top position. The danger of using `add`
    is that you can inadvertently call it too many times, in which case the split
    pane's layout manager will throw a rather esoteric-looking exception. If you are
    using the `add` method and a split pane is already populated, you first need to
    remove the existing components with `remove`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他容器一样，`JSplitPane`支持`add`方法。分割窗格将添加的第一个组件放在左侧或顶部位置。使用`add`的危险在于您可能会无意中多次调用它，这种情况下，分割窗格的布局管理器将抛出一个看起来相当晦涩的异常。如果您正在使用`add`方法并且分割窗格已经填充，您首先需要使用`remove`删除现有组件。
- en: If you put only one component in a split pane, then the divider will be stuck
    at the right side or the bottom of the split pane, depending on its split direction.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只在分割窗格中放置一个组件，则分隔条将被固定在分割窗格的右侧或底部，具体取决于其分割方向。
- en: Positioning the Divider and Restricting Its Range
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置分隔条的位置和限制其范围
- en: To make your split pane work well, you often need to set the minimum sizes of
    components in the split pane, as well as the preferred size of either the split
    pane or its contained components. Choosing which sizes you should set is an art
    that requires understanding how a split pane's preferred size and divider location
    are determined. Before we get into details, let's take another look at SplitPaneDemo.
    Or, if you're in a hurry, you can skip to the [list of rules](#rules).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要使您的分割窗格正常工作，通常需要设置分割窗格中组件的最小尺寸，以及分割窗格或其包含组件的首选尺寸。选择应设置哪些尺寸是一门需要理解分割窗格首选尺寸和分隔条位置如何确定的艺术。在深入讨论之前，让我们再次看看SplitPaneDemo。或者，如果您赶时间，可以直接跳转到[规则列表](#rules)。
- en: '* * *'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run the SplitPaneDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#SplitPaneDemo).[![Launches
    the SplitPaneDemo example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDemoProject/SplitPaneDemo.jnlp)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行SplitPaneDemo（[下载
    JDK 7 或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#SplitPaneDemo)。[![启动SplitPaneDemo示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDemoProject/SplitPaneDemo.jnlp)
- en: Because the size of the demo's frame is set using the `pack` method, the split
    pane is at its preferred size, which SplitPaneDemo happens to set explicitly.
    The divider is automatically placed so that the left component is at its preferred
    width and all remaining space goes to the right component.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为演示框架的大小是使用`pack`方法设置的，分隔窗格处于其首选大小，SplitPaneDemo恰好明确设置了。分隔符会自动放置，使左侧组件处于其首选宽度，所有剩余空间都分配给右侧组件。
- en: Make the window wider.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使窗口变宽。
- en: The divider stays where it is, and the extra space goes to the component at
    the right.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分隔符保持在原位，额外的空间分配给右侧组件。
- en: "Make the window noticeably narrower than when it first came up \x97 perhaps\
    \ twice as wide as the left component."
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: "使窗口比首次出现时明显变窄 \x97 可能是左侧组件宽度的两倍。"
- en: Again, the left component's size and the divider position stay the same. Only
    the size of the right component changes.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 再次，左侧组件的大小和分隔符位置保持不变。只有右侧组件的大小发生变化。
- en: Make the window as narrow as possible.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将窗口尽可能变窄。
- en: Assuming the window uses the Java look and feel-provided decorations, you cannot
    size the window smaller than the split pane's minimum size, which is determined
    by the minimum size of the components contained by the split pane. SplitPaneDemo
    sets the minimum size of these contained components explicitly.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设窗口使用了Java外观和感觉提供的装饰，您无法将窗口调整为小于分隔窗格的最小大小，该大小由分隔窗格包含的组件的最小大小确定。SplitPaneDemo明确设置了这些包含组件的最小大小。
- en: Make the window wider, and then drag the divider as far as it will go to the
    right.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使窗口变宽，然后将分隔符拖动到最右侧。
- en: The divider goes only as far as the right component's minimum size allows. If
    you drag the divider to the left, you'll see that it also respects the left component's
    minimum size.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分隔符只能移动到右侧组件的最小大小允许的位置。如果将分隔符向左拖动，您会发现它也会尊重左侧组件的最小大小。
- en: '* * *'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Now that you've seen the default behavior of split panes, we can tell you what's
    happening behind the scenes and how you can affect it. In this discussion, when
    we refer to a component's preferred or minimum size, we often mean the preferred
    or minimum width of the component if the split pane is horizontal, or its preferred
    or minimum height if the split pane is vertical.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经看到了分隔窗格的默认行为，我们可以告诉您幕后发生的事情以及您如何影响它。在本讨论中，当我们提到组件的首选或最小大小时，通常指的是如果分隔窗格是水平的，则组件的首选或最小宽度，如果分隔窗格是垂直的，则指的是其首选或最小高度。
- en: By default, a split pane's preferred size and divider location are initialized
    so that the two components in the split pane are at their preferred sizes. If
    the split pane isn't displayed at this preferred size and the program hasn't set
    the divider's location explicitly, then the initial position of the divider (and
    thus the sizes of the two components) depends on a split pane property called
    the *resize weight*. If the split pane is initially at its preferred size or bigger,
    then the contained components start out at their preferred sizes, before adjusting
    for the resize weight. If the split pane is initially too small to display both
    components at their preferred sizes, then they start out at their *minimum* sizes,
    before adjusting for the resize weight.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，分隔窗格的首选大小和分隔符位置会初始化，以使分隔窗格中的两个组件处于其首选大小。如果分隔窗格未以首选大小显示，并且程序未明确设置分隔符位置，则分隔符的初始位置（以及两个组件的大小）取决于一个称为*调整权重*的分隔窗格属性。如果分隔窗格最初以其首选大小或更大显示，则包含的组件在调整调整权重之前以其首选大小开始。如果分隔窗格最初太小而无法同时显示两个组件的首选大小，则它们将以其*最小*大小开始，然后再调整调整权重。
- en: "A split pane's resize weight has a value between 0.0 and 1.0 and determines\
    \ how space is distributed between the two contained components when the split\
    \ pane's size is set \x97 whether programmatically or by the user resizing the\
    \ split pane (enlarging its containing window, for example). The resize weight\
    \ of a split pane is 0.0 by default, indicating that the left or top component's\
    \ size is fixed, and the right or bottom component adjusts its size to fit the\
    \ remaining space. Setting the resize weight to 0.5 splits any extra or missing\
    \ space evenly between the two components. Setting the resize weight to 1.0 makes\
    \ the right or bottom component's size remain fixed. The resize weight has no\
    \ effect, however, when the user drags the divider."
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: "分割窗格的调整权重的值介于0.0和1.0之间，并确定在设置分割窗格的大小时两个包含的组件之间如何分配空间 \x97 无论是通过编程方式还是用户调整分割窗格的大小（例如扩大其包含窗口）。分割窗格的调整权重默认为0.0，表示左侧或顶部组件的大小固定，右侧或底部组件调整其大小以适应剩余空间。将调整权重设置为0.5会均匀地分配任何额外或缺失的空间给两个组件。将调整权重设置为1.0会使右侧或底部组件的大小保持不变。然而，当用户拖动分隔线时，调整权重没有影响。"
- en: "The user can drag the divider to any position *as long as* neither contained\
    \ component goes below its minimum size. If the divider has one-touch buttons,\
    \ the user can use them to make the divider move completely to one side or the\
    \ other \x97 no matter what the minimum sizes of the components are."
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: "用户可以拖动分隔线到任何位置，*只要*没有一个包含的组件的大小低于其最小大小。如果分隔线有一键按钮，用户可以使用它们使分隔线完全移动到一侧或另一侧 \x97\
    \ 无论组件的最小大小是多少。"
- en: 'Now that you know the factors that affect a split pane''s size and divider
    location, here are some rules for making them work well:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了影响分割窗格大小和分隔线位置的因素，以下是一些使它们良好运作的规则：
- en: 'To ensure that the divider can be dragged when the split pane is at its preferred
    size, make sure the minimum size of one or both contained components is smaller
    than the contained component''s preferred size. You can set the minimum size of
    a component either by invoking `setMinimumSize` on it or by overriding its `getMinimumSize`
    method. For example, if you want the user to be able to drag the divider all the
    way to both sides:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要确保在分割窗格处于其首选大小时可以拖动分隔线，请确保一个或两个包含的组件的最小大小小于包含组件的首选大小。您可以通过在组件上调用`setMinimumSize`或重写其`getMinimumSize`方法来设置组件的最小大小。例如，如果您希望用户能够将分隔线拖动到两侧：
- en: '[PRE1]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To guarantee that both contained components appear, make sure that either the
    split pane is initially at or above its preferred size, or the minimum sizes of
    the contained components are greater than zero.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要确保两个包含的组件都显示出来，请确保分割窗格初始时处于或高于其首选大小，或者包含的组件的最小大小大于零。
- en: This should usually happen if the splitpane is given its preferred size, which
    depends upon the layout manager containing the split pane. Another option is to
    explicitly set a preferred size on the split pane that is larger than the size
    of the contained components.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果分割窗格被赋予其首选大小，这通常会发生，这取决于包含分割窗格的布局管理器。另一个选项是在分割窗格上明确设置一个大于包含组件大小的首选大小。
- en: 'If you want the bottom or right component to stay the same size and the top
    or left component to be flexible when the split pane gets bigger, set the resize
    weight to 1.0\. You can do this by invoking `setResizeWeight`:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您希望底部或右侧组件保持相同大小，并且在分割窗格变大时顶部或左侧组件是灵活的，请将调整权重设置为1.0。您可以通过调用`setResizeWeight`来实现这一点：
- en: '[PRE2]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you want both halves of the split pane to share in the split pane''s extra
    or removed space, set the resize weight to 0.5:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您希望分割窗格的两半共享分割窗格的额外空间或减少的空间，请将调整权重设置为0.5：
- en: '[PRE3]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Make sure each component contained by a split pane has a reasonable preferred
    size. If the component is a panel that uses a layout manager, you can generally
    just use the value it returns. If the component is a scroll pane, you have a few
    choices. You can invoke the `setPreferredSize` method on the scroll pane, invoke
    the appropriate method on the component in the scroll pane (such as the `setVisibleRowCount`
    method for `JList` or `JTree`).
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保由分割窗格包含的每个组件都有一个合理的首选大小。如果组件是使用布局管理器的面板，通常可以直接使用其返回的值。如果组件是滚动窗格，则有几种选择。您可以在滚动窗格上调用`setPreferredSize`方法，在滚动窗格中的组件上调用适当的方法（例如`JList`或`JTree`的`setVisibleRowCount`方法）。
- en: Make sure each component contained by a split pane can display itself reasonably
    in varying amounts of space. For example, panels that contain multiple components
    should use layout managers that use extra space in a reasonable way.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保分割窗格包含的每个组件在不同大小的空间中都能合理显示自己。例如，包含多个组件的面板应使用布局管理器以合理的方式使用额外空间。
- en: 'If you want to set the size of contained components to something other than
    their preferred sizes, use the `setDividerLocation` method. For example, to make
    the left component 150 pixels wide:'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您想将包含的组件的大小设置为其首选大小以外的其他值，请使用`setDividerLocation`方法。例如，要使左侧组件宽度为150像素：
- en: '[PRE4]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Although the split pane does its best to honor the initial divider location
    (150 in this case), once the user drags the divider it may no longer be possible
    to drag to the programmatically specified size.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管分割窗格尽力遵守初始分隔线位置（在本例中为150），但一旦用户拖动分隔线，可能无法再将其拖动到程序指定的大小。
- en: 'To make the right component 150 pixels wide:'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使右侧组件宽度为150像素：
- en: '[PRE5]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If the split pane is already visible, you can set the divider location as a
    percentage of the split pane. For example, to make 25% of the space go to left/top:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果分割窗格已经可见，您可以将分隔线位置设置为分割窗格的百分比。例如，使25%的空间分配给左侧/顶部：
- en: '[PRE6]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that this is implemented in terms of the current size and is therefore
    really only useful if the split pane is visible.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，这是根据当前大小实现的，因此只有在分割窗格可见时才真正有用。
- en: To lay out the split pane as if it just came up, likely repositioning the divider
    in the process, invoke `resetToPreferredSizes()` on the split pane.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将分割窗格布局设置为刚刚出现的状态，可能会重新定位分隔线，请在分割窗格上调用`resetToPreferredSizes()`。
- en: '* * *'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '* * *'
- en: "**Note:** Just changing the contained components' preferred sizes \x97 even\
    \ if you invoke `revalidate` afterwards \x97 is not enough to cause the split\
    \ pane to lay itself out again. You must invoke `resetToPreferredSizes` as well."
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: "**注意：** 仅更改包含的组件的首选大小 \x97 即使之后调用`revalidate` \x97 不足以导致分割窗格重新布局。您还必须调用`resetToPreferredSizes`。"
- en: '* * *'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '* * *'
- en: The following snapshot shows an example named SplitPaneDividerDemo that demonstrates
    split pane component sizes and divider placement.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下快照显示了一个名为SplitPaneDividerDemo的示例，演示了分割窗格组件大小和分隔线位置。
- en: '![A snapshot of SplitPaneDividerDemo](../Images/95f4959204f294799c47716105d07dac.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![SplitPaneDividerDemo的快照](../Images/95f4959204f294799c47716105d07dac.png)'
- en: 'Like SplitPaneDemo, SplitPaneDividerDemo features a horizontal split pane with
    one-touch buttons. SplitPaneDividerDemo has the following additional features:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 与SplitPaneDemo一样，SplitPaneDividerDemo具有带有一键按钮的水平分割窗格。SplitPaneDividerDemo具有以下附加功能：
- en: The split pane's *resize weight* is explicitly set (to 0.5).
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分割窗格的*调整权重*被明确设置为（0.5）。
- en: The split pane is displayed at its default preferred size.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分割窗格显示为其默认首选大小。
- en: A Reset button at the bottom of the window invokes `resetToPreferredSizes` on
    the split pane.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 窗口底部的“重置”按钮调用分割窗格上的`resetToPreferredSizes`。
- en: The components in the split pane are instances of a custom `JComponent` subclass
    called `SizeDisplayer`. A `SizeDisplayer` displays optional text against the background
    of a faded (and also optional) image. More importantly, it has rectangles that
    show its preferred and minimum sizes.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分割窗格中的组件是名为`SizeDisplayer`的自定义`JComponent`子类的实例。`SizeDisplayer`显示可选文本在淡化的背景图像上（也是可选的）。更重要的是，它有显示其首选大小和最小大小的矩形。
- en: SplitPaneDividerDemo sets up its `SizeDisplayer`s to have equal preferred sizes
    (due to the equally large images they show) but unequal minimum sizes.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SplitPaneDividerDemo设置其`SizeDisplayer`具有相等的首选大小（由于它们显示的图像大小相等），但不等的最小大小。
- en: '* * *'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run the SplitPaneDividerDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#SplitPaneDividerDemo).[![Launches
    the SplitPaneDividerDemo example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDividerDemoProject/SplitPaneDividerDemo.jnlp)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行SplitPaneDividerDemo（[下载JDK
    7或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#SplitPaneDividerDemo)。[![启动SplitPaneDividerDemo示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDividerDemoProject/SplitPaneDividerDemo.jnlp)
- en: Because the size of the demo's frame is set using the `pack` method, the split
    pane is at its preferred size, which by default is just big enough for the `SizeDisplayer`s
    to be at their preferred sizes. The preferred size of each `SizeDisplayer` is
    indicated by a red rectangle. The divider is automatically placed so that both
    components are at their preferred widths.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为演示的窗口大小是使用`pack`方法设置的，分割窗格处于其首选大小，默认情况下刚好足够让`SizeDisplayer`以其首选大小显示。每个`SizeDisplayer`的首选大小由一个红色矩形表示。分隔线会自动放置，以使两个组件的宽度达到其首选宽度。
- en: Make the window wider.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使窗口变宽。
- en: Because the split pane's resize weight is 0.5, the extra space is divided evenly
    between the left and right components. The divider moves accordingly.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为分割窗格的调整权重为0.5，额外空间均匀分配给左右组件。分隔线相应移动。
- en: Make the window as narrow as possible.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使窗口尽可能窄。
- en: Assuming the window uses the Java look and feel-provided decorations, it will
    not let you size the window smaller than the split pane's minimum size, which
    is determined by the minimum size of the `SizeDisplayers` it contains. The minimum
    size of each `SizeDisplayer` is indicated by a bright blue rectangle.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设窗口使用Java外观和感觉提供的装饰，它不会让您将窗口调整为小于分割窗格的最小尺寸，该最小尺寸由其包含的`SizeDisplayer`的最小尺寸确定。每个`SizeDisplayer`的最小尺寸由一个明亮蓝色矩形表示。
- en: Make the window a bit wider, and then drag the divider as far as it will go
    to the right.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使窗口稍微变宽，然后将分隔线拖动到最右侧。
- en: The divider goes only as far as the right component's minimum size allows.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分隔线只能移动到右侧组件的最小尺寸允许的位置。
- en: After making sure the split pane is smaller than its preferred size, click the
    Reset button.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保分割窗格小于其首选大小后，单击重置按钮。
- en: Note that the two `SizeDisplayer`s are displayed at the different sizes, even
    though when the application came up they had equal sizes. The reason is that although
    their preferred sizes are equal, their minimum sizes are not. Because the split
    pane cannot display them at their preferred sizes or larger, it lays them out
    using their minimum sizes. The leftover space is divided equally between the components,
    since the split pane's resize weight is 0.5.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，尽管应用程序启动时它们的大小相等，但两个`SizeDisplayer`显示的大小不同。原因是虽然它们的首选大小相等，但它们的最小大小不同。因为分割窗格无法以其首选大小或更大的尺寸显示它们，所以使用它们的最小大小进行布局。剩余空间平均分配给组件，因为分割窗格的调整权重为0.5。
- en: Widen the split pane so that it is large enough for both `SizeDisplayer`s to
    be shown at their preferred sizes, and then click the Reset button.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩大分割窗格，使其足够大，以便两个`SizeDisplayer`以其首选大小显示，然后单击重置按钮。
- en: The divider is placed in the middle again, so that both components are the same
    size.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分隔线再次放置在中间，以使两个组件大小相同。
- en: '* * *'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Here is the code that creates the GUI for SplitPaneDividerDemo:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为SplitPaneDividerDemo创建GUI的代码：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The code is fairly self explanatory, except perhaps for the call to `setContinuousLayout`.
    Setting the *continuousLayout* property to true makes the split pane's contents
    be painted continuously while the user is moving the divider. Continuous layout
    is not on, by default, because it can have a negative performance impact. However,
    it makes sense to use it in this demo, when having the split pane's components
    as up-to-date as possible can improve the user experience.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 代码相当容易理解，除了对`setContinuousLayout`的调用可能有点难以理解。将*continuousLayout*属性设置为true会使分割窗格的内容在用户移动分隔线时连续绘制。默认情况下不启用连续布局，因为它可能会对性能产生负面影响。然而，在这个演示中使用它是有意义的，因为使分割窗格的组件尽可能保持最新可以提高用户体验。
- en: Nesting Split Panes
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌套分割窗格
- en: 'Here''s a picture of a program that achieves a three-way split by nesting one
    split pane inside of another:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个通过在一个分割窗格内嵌套另一个分割窗格来实现三向分割的程序的图片：
- en: '![A snapshot of SplitPaneDemo2](../Images/0865114004b19ea58253d4a956b10c1a.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![SplitPaneDemo2的快照](../Images/0865114004b19ea58253d4a956b10c1a.png)'
- en: If the top portion of the split pane looks familiar to you, it is because the
    program puts the split pane created by `SplitPaneDemo` inside a second split pane.
    A simple `JLabel` is the other component in the second split pane. This is not
    the most practical use of a nested split pane, but it gets the point across.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果顶部部分的分割窗格看起来很熟悉，那是因为程序将`SplitPaneDemo`创建的分割窗格放在第二个分割窗格中。第二个分割窗格中的另一个组件是一个简单的`JLabel`。这并不是嵌套分割窗格的最实用用法，但可以传达出要点。
- en: Click the Launch button to run the SplitPaneDemo2 using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#SplitPaneDemo2).
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击启动按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行SplitPaneDemo2（[下载JDK
    7或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#SplitPaneDemo2)。
- en: '[![Launches the SplitPaneDemo2 example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDemo2Project/SplitPaneDemo2.jnlp)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[![启动SplitPaneDemo2示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/SplitPaneDemo2Project/SplitPaneDemo2.jnlp)'
- en: 'Here''s the interesting part of the code, which you can find in [`SplitPaneDemo2.java`](../examples/components/SplitPaneDemo2Project/src/components/SplitPaneDemo2.java):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这是代码中的有趣部分，你可以在[`SplitPaneDemo2.java`](../examples/components/SplitPaneDemo2Project/src/components/SplitPaneDemo2.java)中找到：
- en: '[PRE8]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Refer to [Solving Common Component Problems](problems.html#nestedborders) for
    information about fixing a border problem that can appear when nesting split panes.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[解决常见组件问题](problems.html#nestedborders)以获取有关修复嵌套分隔窗格时可能出现的边框问题的信息。
- en: The Split Pane API
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分隔窗格API
- en: The following tables list the commonly used `JSplitPane` constructors and methods.
    Other methods you are most likely to invoke on a `JSplitPane` object are those
    such as `setPreferredSize` that its superclasses provide. See [The JComponent
    API](jcomponent.html#api) for tables of commonly used inherited methods.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了常用的`JSplitPane`构造函数和方法。您最有可能在`JSplitPane`对象上调用的其他方法是其超类提供的`setPreferredSize`之类的方法。请参阅[The
    JComponent API](jcomponent.html#api)以获取常用继承方法的表格。
- en: 'The API for using lists falls into these categories:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用列表的API可分为以下几类：
- en: '[Setting up the Split Pane](#settingupapi)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[设置分隔窗格](#settingupapi)'
- en: '[Managing the Split Pane''s Contents](#contentsapi)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[管理分隔窗格的内容](#contentsapi)'
- en: '[Positioning the Divider](#dividerapi)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[调整分隔条位置](#dividerapi)'
- en: Setting Up the Split Pane
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 设置分隔窗格
- en: '| Method or Constructor | Purpose |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| 方法或构造函数 | 目的 |'
- en: '| [JSplitPane()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane--)
    [JSplitPane(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JSplitPane()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane--)
    [JSplitPane(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-)'
- en: '[JSplitPane(int, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-boolean-)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[JSplitPane(int, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-boolean-)'
- en: '[JSplitPane(int, Component, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-java.awt.Component-java.awt.Component-)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[JSplitPane(int, Component, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-java.awt.Component-java.awt.Component-)'
- en: '[JSplitPane(int, boolean, Component, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-boolean-java.awt.Component-java.awt.Component-)
    | Create a split pane. When present, the `int` parameter indicates the split pane''s
    orientation, either `HORIZONTAL_SPLIT` (the default) or `VERTICAL_SPLIT`. The
    `boolean` parameter, when present, sets whether the components continually repaint
    as the user drags the split pane. If left unspecified, this option (called *continuous
    layout*) is turned off. The `Component` parameters set the initial left and right,
    or top and bottom components, respectively. |'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[JSplitPane(int, boolean, Component, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#JSplitPane-int-boolean-java.awt.Component-java.awt.Component-)
    | 创建一个分隔窗格。当存在`int`参数时，指示分隔窗格的方向，可以是`HORIZONTAL_SPLIT`（默认）或`VERTICAL_SPLIT`。当存在`boolean`参数时，设置组件在用户拖动分隔窗格时是否持续重绘。如果未指定，此选项（称为*连续布局*）将被关闭。`Component`参数设置初始左侧和右侧，或顶部和底部组件。
    |'
- en: '| [void setOrientation(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setOrientation-int-)
    [int getOrientation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getOrientation--)
    | Set or get the split pane''s orientation. Use either `HORIZONTAL_SPLIT` or `VERTICAL_SPLIT`
    defined in `JSplitPane`. If left unspecified, the split pane will be horizontally
    split. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [void setOrientation(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setOrientation-int-)
    [int getOrientation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getOrientation--)
    | 设置或获取分割窗格的方向。使用`JSplitPane`中定义的`HORIZONTAL_SPLIT`或`VERTICAL_SPLIT`。如果未指定，分割窗格将水平分割。
    |'
- en: '| [void setDividerSize(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setDividerSize-int-)
    [int getDividerSize()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getDividerSize--)
    | Set or get the size of the divider in pixels. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [void setDividerSize(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setDividerSize-int-)
    [int getDividerSize()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getDividerSize--)
    | 设置或获取分隔条的大小（以像素为单位）。 |'
- en: '| [void setContinuousLayout(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setContinuousLayout-boolean-)
    [boolean isContinuousLayout()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#isContinuousLayout--)
    | Set or get whether the split pane''s components are continually laid out and
    painted while the user is dragging the divider. By default, continuous layout
    is turned off. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [void setContinuousLayout(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setContinuousLayout-boolean-)
    [boolean isContinuousLayout()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#isContinuousLayout--)
    | 设置或获取分割窗格的组件是否在用户拖动分隔条时持续布局和绘制。默认情况下，连续布局是关闭的。 |'
- en: '| [void setOneTouchExpandable(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setOneTouchExpandable-boolean-)
    [boolean isOneTouchExpandable()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#isOneTouchExpandable--)
    | Set or get whether the split pane displays a control on the divider to expand/collapse
    the divider. The default depends on the look and feel. In the Java look and feel,
    it is off by default. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [void setOneTouchExpandable(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setOneTouchExpandable-boolean-)
    [boolean isOneTouchExpandable()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#isOneTouchExpandable--)
    | 设置或获取分割窗格是否显示一个控件在分隔条上以展开/折叠分隔条。默认取决于外观。在Java外观中，默认情况下是关闭的。 |'
- en: Managing the Split Pane's Contents
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 管理分割窗格的内容
- en: '| Method | Purpose |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [void setTopComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setTopComponent-java.awt.Component-)
    [void setBottomComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setBottomComponent-java.awt.Component-)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setTopComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setTopComponent-java.awt.Component-)
    [void setBottomComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setBottomComponent-java.awt.Component-)'
- en: '[void setLeftComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setLeftComponent-java.awt.Component-)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[void setLeftComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setLeftComponent-java.awt.Component-)'
- en: '[void setRightComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setRightComponent-java.awt.Component-)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[void setRightComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setRightComponent-java.awt.Component-)'
- en: '[Component getTopComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getTopComponent--)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[Component getTopComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getTopComponent--)'
- en: '[Component getBottomComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getBottomComponent--)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[Component getBottomComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getBottomComponent--)'
- en: '[Component getLeftComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getLeftComponent--)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[Component getLeftComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getLeftComponent--)'
- en: '[Component getRightComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getRightComponent--)
    | Set or get the indicated component. Each method works regardless of the split
    pane''s orientation. Top and left are equivalent, and bottom and right are equivalent.
    |'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[Component getRightComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getRightComponent--)
    | 设置或获取指定的组件。每种方法都适用于分割窗格的方向。顶部和左侧是等效的，底部和右侧是等效的。 |'
- en: '| [void remove(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#remove-java.awt.Component-)
    [void removeAll()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#removeAll--)
    | Remove the indicated component(s) from the split pane. |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [void remove(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#remove-java.awt.Component-)
    [void removeAll()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#removeAll--)
    | 从分割窗格中移除指定的组件。 |'
- en: '| [void add(Component)](https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#add-java.awt.Component-)
    | Add the component to the split pane. You can add only two components to a split
    pane. The first component added is the top/left component. The second component
    added is the bottom/right component. Any attempt to add more components results
    in an exception. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [void add(Component)](https://docs.oracle.com/javase/8/docs/api/java/awt/Container.html#add-java.awt.Component-)
    | 将组件添加到分割窗格。您只能向分割窗格添加两个组件。添加的第一个组件是顶部/左侧组件。添加的第二个组件是底部/右侧组件。任何尝试添加更多组件都会导致异常。
    |'
- en: Positioning the Divider
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 分隔条定位
- en: '| Method | Purpose |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [void setDividerLocation(double)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setDividerLocation-double-)
    [void setDividerLocation(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setDividerLocation-int-)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setDividerLocation(double)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setDividerLocation-double-)
    [void setDividerLocation(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setDividerLocation-int-)'
- en: '[int getDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getDividerLocation--)
    | Set or get the current divider location. When setting the divider location,
    you can specify the new location as a percentage (`double`) or a pixel location
    (`int`).  |'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[int getDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getDividerLocation--)
    | 设置或获取当前分隔条位置。在设置分隔条位置时，可以指定新位置为百分比（`double`）或像素位置（`int`）。 |'
- en: '| [void resetToPreferredSizes()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#resetToPreferredSizes--)
    | Move the divider such that both components are at their preferred sizes. This
    is how a split pane divides itself at startup, unless specified otherwise. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [void resetToPreferredSizes()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#resetToPreferredSizes--)
    | 移动分隔条，使两个组件都处于其首选大小。这是分割窗格在启动时如何划分自身的方式，除非另有规定。 |'
- en: '| [void setLastDividerLocation(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setLastDividerLocation-int-)
    [int getLastDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getLastDividerLocation--)
    | Set or get the previous position of the divider. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [void setLastDividerLocation(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setLastDividerLocation-int-)
    [int getLastDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getLastDividerLocation--)
    | 设置或获取分隔条的上一个位置。 |'
- en: '| [int getMaximumDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getMaximumDividerLocation--)
    [int getMinimumDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getMinimumDividerLocation--)
    | Get the minimum and maximum locations for the divider. These are set implicitly
    by setting the minimum sizes of the split pane''s two components. |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [int getMaximumDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getMaximumDividerLocation--)
    [int getMinimumDividerLocation()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getMinimumDividerLocation--)
    | 获取分隔条的最小和最大位置。这些位置是通过设置分割窗格的两个组件的最小大小来隐式设置的。 |'
- en: '| [void setResizeWeight(float)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setResizeWeight-float-)
    [float getResizeWeight()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getResizeWeight--)
    | Set or get the resize weight for the split pane, a value between 0.0 (the default)
    and 1.0\. See [Positioning the Divider and Restricting Its Range](#divider) for
    an explanation of and examples of using the resize weight. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [void setResizeWeight(float)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#setResizeWeight-float-)
    [float getResizeWeight()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html#getResizeWeight--)
    | 设置或获取分割窗格的调整权重，一个介于0.0（默认值）和1.0之间的值。请参见[分隔条定位和限制其范围](#divider)以了解和使用调整权重的解释和示例。
    |'
- en: Examples that Use Split Panes
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用分割窗格的示例
- en: This table shows some examples that use `JSplitPane` and where those examples
    are described.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 本表显示了一些使用`JSplitPane`的示例以及这些示例的描述位置。
- en: '| Example | Where Described | Notes |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 描述位置 | 注释 |'
- en: '| [`SplitPaneDemo`](../examples/components/index.html#SplitPaneDemo) | This
    page and [How to Use Lists](list.html) | Shows a split pane with a horizontal
    split. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`SplitPaneDemo`](../examples/components/index.html#SplitPaneDemo) | 这个页面和
    [如何使用列表](list.html) | 展示了一个水平分割的分割窗格。'
- en: '| [`SplitPaneDividerDemo`](../examples/components/index.html#SplitPaneDividerDemo)
    | This page | Demonstrates how component size information and resize weight are
    used to position the divider. |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`SplitPaneDividerDemo`](../examples/components/index.html#SplitPaneDividerDemo)
    | 这个页面 | 演示了如何使用组件大小信息和调整权重来定位分隔条。'
- en: '| [`SplitPaneDemo2`](../examples/components/index.html#SplitPaneDemo2) | This
    page | Puts a split pane within a split pane to create a three-way split. |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`SplitPaneDemo2`](../examples/components/index.html#SplitPaneDemo2) | 这个页面
    | 将一个分割窗格放在另一个分割窗格中，创建一个三向分割。'
- en: '| [`TreeDemo`](../examples/components/index.html#TreeDemo) | [How to Use Trees](tree.html)
    | Uses a split pane with a vertical split to separate a tree (in a scroll pane)
    from an editor pane (in a scroll pane). Does not use the one-touch expandable
    feature. |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`TreeDemo`](../examples/components/index.html#TreeDemo) | [如何使用树](tree.html)
    | 使用了一个垂直分割的分割窗格来分隔一个树（在一个滚动窗格中）和一个编辑器窗格（在一个滚动窗格中）。不使用一键展开功能。'
- en: '| [`TextComponentDemo`](../examples/components/index.html#TextComponentDemo)
    | [Text Component Features](generaltext.html) | Uses a split pane with a vertical
    split to separate a text pane and a text area, both in scroll panes. |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`TextComponentDemo`](../examples/components/index.html#TextComponentDemo)
    | [文本组件特性](generaltext.html) | 使用了一个垂直分割的分割窗格来分隔一个文本窗格和一个文本区域，两者都在滚动窗格中。'
- en: '| [`TextSamplerDemo`](../examples/components/index.html#TextSamplerDemo) |
    [Text Component Features](generaltext.html) | Uses a split pane with a vertical
    split and resize weight of 0.5 to separate a text pane and an editor pane, both
    in scroll panes. The split pane is in the right half of a container that has a
    fairly complicated layout. Layout managers such as `GridLayout` and `BorderLayout`
    are used, along with the split pane''s resize weight, to ensure that the components
    in scroll panes share all extra space. |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`TextSamplerDemo`](../examples/components/index.html#TextSamplerDemo) |
    [文本组件特性](generaltext.html) | 使用了一个垂直分割和调整权重为0.5的分割窗格来分隔一个文本窗格和一个编辑器窗格，两者都在滚动窗格中。分割窗格位于一个具有相当复杂布局的容器的右半部分。使用诸如`GridLayout`和`BorderLayout`之类的布局管理器，以及分割窗格的调整权重，确保滚动窗格中的组件共享所有额外空间。'
- en: '| [`ListSelectionDemo`](../examples/events/index.html#ListSelectionDemo) |
    [How to Write a List Selection Listener](../events/listselectionlistener.html)
    | Uses a split pane with a vertical split to separate an upper pane, containing
    a list and a table (both in scroll panes), from a lower pane that contains a combo
    box above a scroll pane. The lower pane uses a border layout to keep the combo
    box small and the scroll pane greedy for space. |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`ListSelectionDemo`](../examples/events/index.html#ListSelectionDemo) |
    [如何编写列表选择监听器](../events/listselectionlistener.html) | 使用了一个垂直分割的分割窗格来分隔一个上部窗格，其中包含一个列表和一个表格（都在滚动窗格中），以及一个下部窗格，其中包含一个组合框和一个滚动窗格。下部窗格使用边界布局来保持组合框较小，而滚动窗格则贪婪地占用空间。'
