- en: How to Use Buttons, Check Boxes, and Radio Buttons
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用按钮、复选框和单选按钮
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/button.html](https://docs.oracle.com/javase/tutorial/uiswing/components/button.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/button.html](https://docs.oracle.com/javase/tutorial/uiswing/components/button.html)
- en: 'To create a button, you can instantiate one of the many classes that descend
    from the [`AbstractButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html)
    class. The following table shows the Swing-defined `AbstractButton` subclasses
    that you might want to use:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个按钮，你可以实例化从[`AbstractButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html)类继承的许多类之一。下表显示了你可能想要使用的Swing定义的`AbstractButton`子类：
- en: '| Class | Summary | Where Described |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| 类 | 摘要 | 描述位置 |'
- en: '| [`JButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html)
    | A common button. | [How to Use the Common Button API](#abstractbutton) and [How
    to Use JButton Features](#jbutton) |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`JButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html)
    | 一个常见的按钮。 | [如何使用通用按钮API](#abstractbutton) 和 [如何使用JButton功能](#jbutton) |'
- en: '| [`JCheckBox`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html)
    | A check box button. | [How to Use Check Boxes](#checkbox) |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`JCheckBox`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html)
    | 一个复选框按钮。 | [如何使用复选框](#checkbox) |'
- en: '| [`JRadioButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html)
    | One of a group of radio buttons. | [How to Use Radio Buttons](#radiobutton)
    |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`JRadioButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html)
    | 一组单选按钮中的一个。 | [如何使用单选按钮](#radiobutton) |'
- en: '| [`JMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JMenuItem.html)
    | An item in a menu. | [How to Use Menus](menu.html) |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`JMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JMenuItem.html)
    | 菜单中的一个项目。 | [如何使用菜单](menu.html) |'
- en: '| [`JCheckBoxMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html)
    | A menu item that has a check box. | [How to Use Menus](menu.html) and [How to
    Use Check Boxes](#checkbox) |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`JCheckBoxMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html)
    | 具有复选框的菜单项。 | [如何使用菜单](menu.html) 和 [如何使用复选框](#checkbox) |'
- en: '| [`JRadioButtonMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html)
    | A menu item that has a radio button. | [How to Use Menus](menu.html) and [How
    to Use Radio Buttons](#radiobutton) |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`JRadioButtonMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html)
    | 具有单选按钮的菜单项。 | [如何使用菜单](menu.html) 和 [如何使用单选按钮](#radiobutton) |'
- en: '| [`JToggleButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html)
    | Implements toggle functionality inherited by `JCheckBox` and `JRadioButton`.
    Can be instantiated or subclassed to create two-state buttons. | Used in some
    [examples](#tbeg) |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`JToggleButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html)
    | 实现`JCheckBox`和`JRadioButton`继承的切换功能。可以实例化或子类化以创建两状态按钮。 | 在一些[示例](#tbeg)中使用 |'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:** If you want to collect a group of buttons into a row or column, then
    you should check out [tool bars](toolbar.html).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果你想将一组按钮收集到一行或一列中，那么你应该查看[工具栏](toolbar.html)。'
- en: '* * *'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: "First, this section explains the basic button API that `AbstractButton` defines\
    \ \x97 and thus all Swing buttons have in common. Next, it describes the small\
    \ amount of API that `JButton` adds to `AbstractButton`. After that, this section\
    \ shows you how to use specialized API to implement check boxes and radio buttons."
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，本节解释了`AbstractButton`定义的基本按钮API，因此所有Swing按钮都具有共同的特性。接下来，它描述了`JButton`添加到`AbstractButton`的少量API。之后，本节将向您展示如何使用专门的API来实现复选框和单选按钮。
- en: How to Use the Common Button API
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用通用按钮API
- en: 'Here is a picture of an application that displays three buttons:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个显示三个按钮的应用程序的图片：
- en: '![A snapshot of ButtonDemo](../Images/3fcdcc60c9c0bc215310c7b85dc24d00.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![ButtonDemo的快照](../Images/3fcdcc60c9c0bc215310c7b85dc24d00.png)'
- en: '* * *'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run the Button Demo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#ButtonDemo).[![Launches
    the ButtonDemo example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/ButtonDemoProject/ButtonDemo.jnlp)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行按钮演示（[下载
    JDK 7 或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#ButtonDemo)。[![启动
    ButtonDemo 示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/ButtonDemoProject/ButtonDemo.jnlp)
- en: Click the left button.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧按钮。
- en: It disables the middle button (and itself, since it is no longer useful) and
    enables the right button.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它禁用了中间按钮（以及自身，因为它不再有用），并启用了右侧按钮。
- en: Click the right button.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右侧按钮。
- en: It enables the middle button and the left button, and disables itself.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它启用了中间按钮和左侧按钮，并禁用了自身。
- en: '* * *'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: "As the `ButtonDemo` example shows, a Swing button can display both text and\
    \ an image. In `ButtonDemo`, each button has its text in a different place, relative\
    \ to its image. The underlined letter in each button's text shows the *mnemonic*\
    \ \x97 the keyboard alternative \x97 for each button. In most look and feels,\
    \ the user can click a button by pressing the Alt key and the mnemonic. For example,\
    \ Alt-M would click the Middle button in ButtonDemo."
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: "正如`ButtonDemo`示例所示，Swing 按钮可以同时显示文本和图像。在`ButtonDemo`中，每个按钮的文本相对于其图像有不同的位置。每个按钮文本中的下划线字母显示了*助记符*\
    \ \x97 每个按钮的键盘替代键。在大多数外观中，用户可以通过按下 Alt 键和助记符来点击按钮。例如，Alt-M 将点击 ButtonDemo 中的 Middle\
    \ 按钮。"
- en: When a button is disabled, the look and feel automatically generates the button's
    disabled appearance. However, you could provide an image to be substituted for
    the normal image. For example, you could provide gray versions of the images used
    in the left and right buttons.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当按钮被禁用时，外观会自动生成按钮的禁用外观。但是，您可以提供一个图像来替换正常图像。例如，您可以提供左侧和右侧按钮使用的图像的灰色版本。
- en: How you implement event handling depends on the type of button you use and how
    you use it. Generally, you implement an [action listener](../events/actionlistener.html),
    which is notified every time the user clicks the button. For [check boxes](#checkbox)
    you usually use an [item listener](../events/itemlistener.html), which is notified
    when the check box is selected or deselected.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如何实现事件处理取决于您使用的按钮类型以及如何使用它。通常，您会实现一个[action listener](../events/actionlistener.html)，每当用户点击按钮时都会通知它。对于[复选框](#checkbox)，通常会使用一个[item
    listener](../events/itemlistener.html)，当复选框被选中或取消选中时会通知它。
- en: Below is the code from [`ButtonDemo.java`](../examples/components/ButtonDemoProject/src/components/ButtonDemo.java)
    that creates the buttons in the previous example and reacts to button clicks.
    The bold code is the code that would remain if the buttons had no images.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是[`ButtonDemo.java`](../examples/components/ButtonDemoProject/src/components/ButtonDemo.java)中创建上一个示例中按钮并响应按钮点击的代码。粗体代码是如果按钮没有图像时将保留的代码。
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to Use JButton Features
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用 JButton 功能
- en: "Ordinary buttons \x97 `JButton` objects \x97 have just a bit more functionality\
    \ than the `AbstractButton` class provides: You can make a `JButton` be the default\
    \ button."
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: "普通按钮 \x97 `JButton` 对象 \x97 比 `AbstractButton` 类提供的功能稍多一点：你可以将 `JButton` 设置为默认按钮。"
- en: 'At most one button in a top-level container can be the default button. The
    default button typically has a highlighted appearance and acts clicked whenever
    the top-level container has the keyboard focus and the user presses the Return
    or Enter key. Here is a picture of a dialog, implemented in the [ListDialog](../examples/components/index.html#ListDialog)
    example, in which the **Set** button is the default button:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一个顶级容器中最多只能有一个默认按钮。默认按钮通常具有突出的外观，并且当顶级容器具有键盘焦点并且用户按下 Return 或 Enter 键时会被点击。这里是一个对话框的图片，实现在[ListDialog](../examples/components/index.html#ListDialog)示例中，其中**设置**按钮是默认按钮：
- en: '![In the Java Look & Feel, the default button has a heavy border](../Images/d7934b1f61c48092885e46a4d962b2b3.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![在 Java Look & Feel 中，默认按钮具有粗边框](../Images/d7934b1f61c48092885e46a4d962b2b3.png)'
- en: 'You set the default button by invoking the `setDefaultButton` method on a top-level
    container''s root pane. Here is the code that sets up the default button for the
    `ListDialog` example:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在顶层容器的根窗格上调用`setDefaultButton`方法来设置默认按钮。以下是为`ListDialog`示例设置默认按钮的代码：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The exact implementation of the default button feature depends on the look and
    feel. For example, in the Windows look and feel, the default button changes to
    whichever button has the focus, so that pressing Enter clicks the focused button.
    When no button has the focus, the button you originally specified as the default
    button becomes the default button again.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 默认按钮功能的确切实现取决于外观。例如，在Windows外观中，默认按钮会更改为具有焦点的按钮，以便按Enter键单击具有焦点的按钮。当没有按钮具有焦点时，您最初指定为默认按钮的按钮再次成为默认按钮。
- en: How to Use Check Boxes
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用复选框
- en: The [`JCheckBox`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html)
    class provides support for check box buttons. You can also put check boxes in
    [menus](menu.html), using the [`JCheckBoxMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html)
    class. Because `JCheckBox` and `JCheckBoxMenuItem` inherit from `AbstractButton`,
    Swing check boxes have all the usual button characteristics, as discussed earlier
    in this section. For example, you can specify images to be used in check boxes.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[`JCheckBox`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html)类提供了对复选框按钮的支持。您还可以使用[`JCheckBoxMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html)类将复选框放入[菜单](menu.html)中。因为`JCheckBox`和`JCheckBoxMenuItem`继承自`AbstractButton`，Swing复选框具有本节前面讨论的所有常规按钮特性。例如，您可以指定要在复选框中使用的图像。'
- en: "Check boxes are similar to [radio buttons](#radiobutton) but their selection\
    \ model is different, by convention. Any number of check boxes in a group \x97\
    \ none, some, or all \x97 can be selected. A group of radio buttons, on the other\
    \ hand, can have only one button selected."
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: "复选框类似于[单选按钮](#radiobutton)，但它们的选择模型不同，按照惯例。一组复选框中的任意数量 \x97 可以选择零个、一些或全部。另一方面，一组单选按钮只能选择一个按钮。"
- en: 'Here is a picture of an application that uses four check boxes to customize
    a cartoon:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用四个复选框自定义卡通的应用程序的图片：
- en: '![NOT a tutorial reader!](../Images/5a513b55bfc05ff16b2a3a1b5b0367e0.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![NOT a tutorial reader!](../Images/5a513b55bfc05ff16b2a3a1b5b0367e0.png)'
- en: '* * *'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run the CheckBox Demo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#CheckBoxDemo).[![Launches
    the ButtonDemo example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/CheckBoxDemoProject/CheckBoxDemo.jnlp)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击启动按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行CheckBox
    Demo（[下载JDK 7或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#CheckBoxDemo)。[![启动ButtonDemo示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/CheckBoxDemoProject/CheckBoxDemo.jnlp)
- en: Click the **Chin** button or press Alt-c.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**下巴**按钮或按下Alt-c。
- en: The **Chin** check box becomes unselected, and the chin disappears from the
    picture. The other check boxes remain selected. This application has one item
    listener that listens to all the check boxes. Each time the item listener receives
    an event, the application loads a new picture that reflects the current state
    of the check boxes.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**下巴**复选框变为未选中状态，下巴从图片中消失。其他复选框保持选中状态。此应用程序有一个项目侦听器，用于监听所有复选框。每次项目侦听器接收到事件时，应用程序会加载反映复选框当前状态的新图片。'
- en: '* * *'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: A check box generates one item event and one action event per click. Usually,
    you listen only for item events, since they let you determine whether the click
    selected or deselected the check box. Below is the code from [`CheckBoxDemo.java`](../examples/components/CheckBoxDemoProject/src/components/CheckBoxDemo.java)
    that creates the check boxes in the previous example and reacts to clicks.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 每次单击复选框都会生成一个项目事件和一个操作事件。通常，您只监听项目事件，因为它们让您确定单击是选择还是取消选择复选框。以下是来自[`CheckBoxDemo.java`](../examples/components/CheckBoxDemoProject/src/components/CheckBoxDemo.java)的代码，用于创建上一个示例中的复选框并对单击做出反应。
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How to Use Radio Buttons
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用单选按钮
- en: Radio buttons are groups of buttons in which, by convention, only one button
    at a time can be selected. The Swing release supports radio buttons with the [`JRadioButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html)
    and [`ButtonGroup`](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html)
    classes. To put a radio button in a [menu](menu.html), use the [`JRadioButtonMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html)
    class. Other ways of displaying one-of-many choices are [combo boxes](combobox.html)
    and [lists](list.html). Radio buttons look similar to [check boxes](#checkbox),
    but, by convention, check boxes place no limits on how many items can be selected
    at a time.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 单选按钮是一组按钮，按照惯例，一次只能选择一个按钮。Swing版本支持使用[`JRadioButton`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html)和[`ButtonGroup`](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html)类的单选按钮。要将单选按钮放入[菜单](menu.html)中，请使用[`JRadioButtonMenuItem`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html)类。显示一组中的一个选择的其他方式包括[组合框](combobox.html)和[列表](list.html)。单选按钮看起来类似于[复选框](#checkbox)，但是按照惯例，复选框不限制同时选择的项目数量。
- en: Because `JRadioButton` inherits from `AbstractButton`, Swing radio buttons have
    all the usual button characteristics, as discussed earlier in this section. For
    example, you can specify the image displayed in a radio button.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`JRadioButton`继承自`AbstractButton`，Swing单选按钮具有所有通常的按钮特性，如本节前面讨论的。例如，您可以指定在单选按钮中显示的图像。
- en: 'Here is a picture of an application that uses five radio buttons to let you
    choose which kind of pet is displayed:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个应用程序的图片，使用五个单选按钮让您选择显示哪种宠物：
- en: '![A snapshot of RadioButtonDemo](../Images/627b72a39090fa92fdbc8a0a84f456fb.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![RadioButtonDemo的快照](../Images/627b72a39090fa92fdbc8a0a84f456fb.png)'
- en: '* * *'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run the RadioButton Demo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#RadioButtonDemo).[![Launches
    the ButtonDemo example](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/RadioButtonDemoProject/RadioButtonDemo.jnlp)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击启动按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行RadioButton
    Demo（[下载JDK 7或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#RadioButtonDemo)。[![启动ButtonDemo示例](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/RadioButtonDemoProject/RadioButtonDemo.jnlp)
- en: Click the **Dog** button or press Alt-d.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Dog**按钮或按下Alt-d键。
- en: The **Dog** button becomes selected, which makes the **Bird** button become
    unselected. The picture switches from a bird to a dog. This application has one
    action listener that listens to all the radio buttons. Each time the action listener
    receives an event, the application displays the picture for the radio button that
    was just clicked.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Dog**按钮被选中，使**Bird**按钮变为未选中。图片从鸟变为狗。这个应用程序有一个监听所有单选按钮的action listener。每次action
    listener接收到事件时，应用程序会显示刚刚点击的单选按钮的图片。'
- en: '* * *'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: "Each time the user clicks a radio button (even if it was already selected),\
    \ the button fires an [action event](../events/actionlistener.html). One or two\
    \ [item events](../events/itemlistener.html) also occur \x97 one from the button\
    \ that was just selected, and another from the button that lost the selection\
    \ (if any). Usually, you handle radio button clicks using an action listener."
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: "每当用户点击单选按钮（即使它已经被选中），按钮都会触发一个[action event](../events/actionlistener.html)。还会发生一个或两个[item\
    \ events](../events/itemlistener.html) \x97 一个来自刚刚被选中的按钮，另一个来自失去选择的按钮（如果有的话）。通常，你会使用一个action\
    \ listener来处理单选按钮的点击。"
- en: Below is the code from [`RadioButtonDemo.java`](../examples/components/RadioButtonDemoProject/src/components/RadioButtonDemo.java)
    that creates the radio buttons in the previous example and reacts to clicks.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是[`RadioButtonDemo.java`](../examples/components/RadioButtonDemoProject/src/components/RadioButtonDemo.java)中创建单选按钮并响应点击的代码，这是前面示例中的单选按钮。
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For each group of radio buttons, you need to create a `ButtonGroup` instance
    and add each radio button to it. The `ButtonGroup` takes care of deselecting the
    previously selected button when the user selects another button in the group.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每组单选按钮，您需要创建一个`ButtonGroup`实例，并将每个单选按钮添加到其中。`ButtonGroup`会在用户选择组中的另一个按钮时取消先前选中的按钮。
- en: "You should generally initialize a group of radio buttons so that one is selected.\
    \ However, the API doesn't enforce this rule \x97 a group of radio buttons can\
    \ have no initial selection. Once the user has made a selection, exactly one button\
    \ is selected from then on."
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: "通常应该初始化一组单选按钮，以便其中一个被选中。但是，API 不强制执行此规则 \x97 一组单选按钮可以没有初始选择。一旦用户做出选择，从那时起将仅选择一个按钮。"
- en: The Button API
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按钮 API
- en: The following tables list the commonly used button-related API. Other methods
    you might call, such as `setFont` and `setForeground`, are listed in the API tables
    in [The JComponent Class](jcomponent.html#api).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了常用的与按钮相关的 API。您可能调用的其他方法，如 `setFont` 和 `setForeground`，在 [JComponent
    类的 API 表中](jcomponent.html#api) 列出。
- en: 'The API for using buttons falls into these categories:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用按钮的 API 分为以下几类：
- en: '[Setting or Getting the Button''s Contents](#contents)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[设置或获取按钮的���容](#contents)'
- en: '[Fine Tuning the Button''s Appearance](#looks)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[微调按钮的外观](#looks)'
- en: '[Implementing the Button''s Functionality](#acts)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[实现按钮的功能](#acts)'
- en: '[Check Box Constructors](#checkboxapi)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[复选框构造函数](#checkboxapi)'
- en: '[Radio Button Constructors](#radiobuttonapi)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[单选按钮构造函数](#radiobuttonapi)'
- en: '[Toggle Button Constructors](#togglebuttonapi)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[切换按钮构造函数](#togglebuttonapi)'
- en: '[Commonly Used Button Group Constructors/Methods](#buttongroup)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[常用的按钮组构造函数/方法](#buttongroup)'
- en: Setting or Getting the Button's Contents
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 设置或获取按钮的内容
- en: '| Method or Constructor | Purpose |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 方法或构造函数 | 目的 |'
- en: '| [JButton(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-javax.swing.Action-)
    [JButton(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-java.lang.String-javax.swing.Icon-)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JButton(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-javax.swing.Action-)
    [JButton(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-java.lang.String-javax.swing.Icon-)'
- en: '[JButton(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-java.lang.String-)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[JButton(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-java.lang.String-)'
- en: '[JButton(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-javax.swing.Icon-)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[JButton(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton-javax.swing.Icon-)'
- en: '[JButton()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton--)
    | Create a `JButton` instance, initializing it to have the specified text/image/action.
    |'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[JButton()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JButton.html#JButton--)
    | 创建一个 `JButton` 实例，并将其初始化为具有指定的文本/图像/操作。 |'
- en: '| [void setAction(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setAction-javax.swing.Action-)
    [Action getAction()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getAction--)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setAction(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setAction-javax.swing.Action-)
    [Action getAction()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getAction--)'
- en: '| Set or get the button''s properties according to values from the `Action`
    instance. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 根据 `Action` 实例的值设置或获取按钮的属性。 |'
- en: '| [void setText(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setText-java.lang.String-)
    [String getText()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getText--)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setText(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setText-java.lang.String-)
    [String getText()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getText--)'
- en: '| Set or get the text displayed by the button. You can use HTML formatting,
    as described in [Using HTML in Swing Components](html.html). |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取按钮显示的文本。您可以使用 HTML 格式，如 [在 Swing 组件中使用 HTML](html.html) 中所述。 |'
- en: '| [void setIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setIcon-javax.swing.Icon-)
    [Icon getIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getIcon--)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setIcon-javax.swing.Icon-)
    [Icon getIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getIcon--)'
- en: '| Set or get the image displayed by the button when the button isn''t selected
    or pressed. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取按钮在未选中或按下时显示的图像。 |'
- en: '| [void setDisabledIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setDisabledIcon-javax.swing.Icon-)
    [Icon getDisabledIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getDisabledIcon--)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setDisabledIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setDisabledIcon-javax.swing.Icon-)
    [Icon getDisabledIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getDisabledIcon--)'
- en: '| Set or get the image displayed by the button when it is disabled. If you
    do not specify a disabled image, then the look and feel creates one by manipulating
    the default image. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取按钮在禁用时显示的图像。如果您没有指定禁用图���，则外观和感觉会通过操作默认图像来创建一个。'
- en: '| [void setPressedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setPressedIcon-javax.swing.Icon-)
    [Icon getPressedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getPressedIcon--)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setPressedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setPressedIcon-javax.swing.Icon-)
    [Icon getPressedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getPressedIcon--)'
- en: '| Set or get the image displayed by the button when it is being pressed. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取按钮在被按下时显示的图像。'
- en: '| [void setSelectedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setSelectedIcon-javax.swing.Icon-)
    [Icon getSelectedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getSelectedIcon--)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setSelectedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setSelectedIcon-javax.swing.Icon-)
    [Icon getSelectedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getSelectedIcon--)'
- en: '[void setDisabledSelectedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setDisabledSelectedIcon-javax.swing.Icon-)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[void setDisabledSelectedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setDisabledSelectedIcon-javax.swing.Icon-)'
- en: '[Icon getDisabledSelectedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getDisabledSelectedIcon--)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[Icon getDisabledSelectedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getDisabledSelectedIcon--)'
- en: '| Set or get the image displayed by the button when it is selected. If you
    do not specify a disabled selected image, then the look and feel creates one by
    manipulating the selected image. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取按钮在选定时显示的图像。如果您没有指定禁用选定图像，则外观和感觉会通过操作选定图像来创建一个。'
- en: '| [setRolloverEnabled(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setRolloverEnabled-boolean-)
    [boolean isRolloverEnabled()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isRolloverEnabled--)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '| [setRolloverEnabled(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setRolloverEnabled-boolean-)
    [boolean isRolloverEnabled()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isRolloverEnabled--)'
- en: '[void setRolloverIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setRolloverIcon-javax.swing.Icon-)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[void setRolloverIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setRolloverIcon-javax.swing.Icon-)'
- en: '[Icon getRolloverIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getRolloverIcon--)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[Icon getRolloverIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getRolloverIcon--)'
- en: '[void setRolloverSelectedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setRolloverSelectedIcon-javax.swing.Icon-)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[void setRolloverSelectedIcon(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setRolloverSelectedIcon-javax.swing.Icon-)'
- en: '[Icon getRolloverSelectedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getRolloverSelectedIcon--)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[Icon getRolloverSelectedIcon()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getRolloverSelectedIcon--)'
- en: "| Use `setRolloverIcon(someIcon)` to make the button display the specified\
    \ icon when the cursor passes over it. The `setRolloverSelectedIcon` method lets\
    \ you specify the rollover icon when the button is selected \x97 this is useful\
    \ for two-state buttons such as toggle buttons. Setting the rollover icon automatically\
    \ calls `setRollover(true)`, enabling rollover. |"
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| 使用`setRolloverIcon(someIcon)`使按钮在鼠标悬停在其上时显示指定图标。`setRolloverSelectedIcon`方法允许您在按钮选定时指定悬停图标，这对于两状态按钮（如切换按钮）非常有用。设置悬停图标会自动调用`setRollover(true)`，启用悬停效果。'
- en: Fine Tuning the Button's Appearance
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 调整按钮外观
- en: '| Method or Constructor | Purpose |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 方法或构造函数 | 目的 |'
- en: '| [void setHorizontalAlignment(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setHorizontalAlignment-int-)
    [void setVerticalAlignment(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setVerticalAlignment-int-)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setHorizontalAlignment(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setHorizontalAlignment-int-)
    [void setVerticalAlignment(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setVerticalAlignment-int-)'
- en: '[int getHorizontalAlignment()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getHorizontalAlignment--)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[int getHorizontalAlignment()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getHorizontalAlignment--)'
- en: '[int getVerticalAlignment()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getVerticalAlignment--)
    | Set or get where in the button its contents should be placed. The `AbstractButton`
    class allows any one of the following values for horizontal alignment: `RIGHT`,
    `LEFT`, `CENTER` (the default), `LEADING`, and `TRAILING`. For vertical alignment:
    `TOP`, `CENTER` (the default), and `BOTTOM`. |'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[int getVerticalAlignment()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getVerticalAlignment--)
    | 设置或获取按钮内容应该放置在按钮的何处。`AbstractButton` 类允许水平对齐的以下任一值：`RIGHT`、`LEFT`、`CENTER`（默认）、`LEADING`
    和 `TRAILING`。对于垂直对齐：`TOP`、`CENTER`（默认）和 `BOTTOM`。 |'
- en: '| [void setHorizontalTextPosition(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setHorizontalTextPosition-int-)
    [void setVerticalTextPosition(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setVerticalTextPosition-int-)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setHorizontalTextPosition(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setHorizontalTextPosition-int-)
    [void setVerticalTextPosition(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setVerticalTextPosition-int-)'
- en: '[int getHorizontalTextPosition()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getHorizontalTextPosition--)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[int getHorizontalTextPosition()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getHorizontalTextPosition--)'
- en: '[int getVerticalTextPosition()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getVerticalTextPosition--)
    | Set or get where the button''s text should be placed, relative to the button''s
    image. The `AbstractButton` class allows any one of the following values for horizontal
    position: `LEFT`, `CENTER`, `RIGHT`, `LEADING`, and `TRAILING` (the default).
    For vertical position: `TOP`, `CENTER` (the default), and `BOTTOM`. |'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[int getVerticalTextPosition()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getVerticalTextPosition--)
    | 设置或获取按钮文本应该放置在何处，相对于按钮的图像。`AbstractButton` 类允许水平位置的以下任一值：`LEFT`、`CENTER`、`RIGHT`、`LEADING`
    和 `TRAILING`（默认）。对于垂直位置：`TOP`、`CENTER`（默认）和 `BOTTOM`。 |'
- en: '| [void setMargin(Insets)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setMargin-java.awt.Insets-)
    [Insets getMargin()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getMargin--)
    | Set or get the number of pixels between the button''s border and its contents.
    |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [void setMargin(Insets)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setMargin-java.awt.Insets-)
    [Insets getMargin()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getMargin--)
    | 设置或获取按钮边框与其内容之间的像素数。 |'
- en: '| [void setFocusPainted(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setFocusPainted-boolean-)
    [boolean isFocusPainted()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isFocusPainted--)
    | Set or get whether the button should look different when it has the focus. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [void setFocusPainted(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setFocusPainted-boolean-)
    [boolean isFocusPainted()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isFocusPainted--)
    | 设置或获取按钮在获得焦点时是否应该呈现不同外观。 |'
- en: '| [void setBorderPainted(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setBorderPainted-boolean-)
    [boolean isBorderPainted()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isBorderPainted--)
    | Set or get whether the border of the button should be painted. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [void setBorderPainted(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setBorderPainted-boolean-)
    [boolean isBorderPainted()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isBorderPainted--)
    | 设置或获取按钮边框是否应该被绘制。 |'
- en: '| [void setIconTextGap(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setIconTextGap-int-)
    [int getIconTextGap()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getIconTextGap--)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setIconTextGap(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setIconTextGap-int-)
    [int getIconTextGap()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getIconTextGap--)'
- en: '| Set or get the amount of space between the text and the icon displayed in
    this button. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取文本和此按钮中显示的图标之间的间距。 |'
- en: Implementing the Button's Functionality
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 实现按钮的功能
- en: '| Method or Constructor | Purpose |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| 方法或构造函数 | 目的 |'
- en: '| [void setMnemonic(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setMnemonic-int-)
    [char getMnemonic()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getMnemonic--)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setMnemonic(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setMnemonic-int-)
    [char getMnemonic()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getMnemonic--)'
- en: '| Set or get the keyboard alternative to clicking the button. One form of the
    `setMnemonic` method accepts a character argument; however, the Swing team recommends
    that you use an `int` argument instead, specifying a `KeyEvent.VK_*X*` constant.
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取通过按下按钮的键盘替代方法。`setMnemonic`方法的一种形式接受一个字符参数；然而，Swing团队建议您改用一个`int`参数，指定一个`KeyEvent.VK_*X*`常量。
    |'
- en: '| [void setDisplayedMnemonicIndex(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setDisplayedMnemonicIndex-int-)
    [int getDisplayedMnemonicIndex()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getDisplayedMnemonicIndex--)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setDisplayedMnemonicIndex(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setDisplayedMnemonicIndex-int-)
    [int getDisplayedMnemonicIndex()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getDisplayedMnemonicIndex--)'
- en: '| Set or get a hint as to which character in the text should be decorated to
    represent the mnemonic. Note that not all look and feels may support this. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取文本中应该被装饰以表示助记符的字符的提示。请注意，并非所有外观和感觉都支持此功能。 |'
- en: '| [void setActionCommand(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setActionCommand-java.lang.String-)
    [String getActionCommand()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getActionCommand--)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setActionCommand(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setActionCommand-java.lang.String-)
    [String getActionCommand()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getActionCommand--)'
- en: '| Set or get the name of the action performed by the button. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取按钮执行的动作的名称。 |'
- en: '| [void addActionListener(ActionListener)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#addActionListener-java.awt.event.ActionListener-)
    [ActionListener removeActionListener()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#removeActionListener--)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void addActionListener(ActionListener)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#addActionListener-java.awt.event.ActionListener-)
    [ActionListener removeActionListener()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#removeActionListener--)'
- en: '| Add or remove an object that listens for action events fired by the button.
    |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| 添加或移除监听按钮触发的动作事件的对象。 |'
- en: '| [void addItemListener(ItemListener)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#addItemListener-java.awt.event.ItemListener-)
    [ItemListener removeItemListener()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#removeItemListener--)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void addItemListener(ItemListener)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#addItemListener-java.awt.event.ItemListener-)
    [ItemListener removeItemListener()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#removeItemListener--)'
- en: '| Add or remove an object that listens for item events fired by the button.
    |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 添加或移除监听按钮触发的项目事件的对象。 |'
- en: '| [void setSelected(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setSelected-boolean-)
    [boolean isSelected()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isSelected--)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setSelected(boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setSelected-boolean-)
    [boolean isSelected()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#isSelected--)'
- en: '| Set or get whether the button is selected. Makes sense only for buttons that
    have on/off state, such as check boxes. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 设置或获取按钮是否被选中。仅适用于具有开/关状态的按钮，如复选框。 |'
- en: '| [void doClick()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#doClick--)
    [void doClick(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#doClick-int-)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void doClick()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#doClick--)
    [void doClick(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#doClick-int-)'
- en: '| Programmatically perform a "click". The optional argument specifies the amount
    of time (in milliseconds) that the button should look pressed. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 以编程方式执行“点击”操作。可选参数指定按钮看起来被按下的时间（以毫秒为单位）。 |'
- en: '| [void setMultiClickThreshhold(long)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setMultiClickThreshhold-long-)
    [long getMultiClickThreshhold()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getMultiClickThreshhold--)
    | Set or get the amount of time (in milliseconds) required between mouse press
    events for the button to generate corresponding action events. |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [void setMultiClickThreshhold(long)](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#setMultiClickThreshhold-long-)
    [long getMultiClickThreshhold()](https://docs.oracle.com/javase/8/docs/api/javax/swing/AbstractButton.html#getMultiClickThreshhold--)
    | 设置或获取鼠标按下事件之间所需的时间（以毫秒为单位），以便按钮生成相应的动作事件。 |'
- en: Check Box Constructors
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 复选框构造函数
- en: '| Constructor | Purpose |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 构造函数 | 目的 |'
- en: '| [JCheckBox(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-javax.swing.Action-)
    [JCheckBox(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JCheckBox(操作)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-javax.swing.Action-)
    [JCheckBox(字符串)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-) '
- en: '[JCheckBox(String, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-boolean-)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBox(字符串, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-boolean-) '
- en: '[JCheckBox(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-javax.swing.Icon-)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBox(图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-javax.swing.Icon-) '
- en: '[JCheckBox(Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-javax.swing.Icon-boolean-)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBox(图标, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-javax.swing.Icon-boolean-) '
- en: '[JCheckBox(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-javax.swing.Icon-)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBox(字符串, 图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-javax.swing.Icon-) '
- en: '[JCheckBox(String, Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-javax.swing.Icon-boolean-)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBox(字符串, 图标, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox-java.lang.String-javax.swing.Icon-boolean-) '
- en: '[JCheckBox()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox--)
    | Create a `JCheckBox` instance. The string argument specifies the text, if any,
    that the check box should display. Similarly, the `Icon` argument specifies the
    image that should be used instead of the look and feel''s default check box image.
    Specifying the boolean argument as `true` initializes the check box to be selected.
    If the boolean argument is absent or `false`, then the check box is initially
    unselected. |'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBox()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBox.html#JCheckBox--)
    | 创建一个`JCheckBox`实例。字符串参数指定复选框应显示的文本（如果有）。同样，`Icon`参数指定应使用的图像，而不是外观的默认复选框图像。将布尔参数指定为`true`会将复选框初始化为选中状态。如果省略布尔参数或为`false`，则复选框最初未选中。
    |'
- en: '| [JCheckBoxMenuItem(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-javax.swing.Action-)
    [JCheckBoxMenuItem(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JCheckBoxMenuItem(操作)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-javax.swing.Action-)
    [JCheckBoxMenuItem(字符串)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-) '
- en: '[JCheckBoxMenuItem(String, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-boolean-)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBoxMenuItem(字符串, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-boolean-) '
- en: '[JCheckBoxMenuItem(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-javax.swing.Icon-)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBoxMenuItem(图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-javax.swing.Icon-) '
- en: '[JCheckBoxMenuItem(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-javax.swing.Icon-)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBoxMenuItem(字符串, 图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-javax.swing.Icon-) '
- en: '[JCheckBoxMenuItem(String, Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-javax.swing.Icon-boolean-)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBoxMenuItem(字符串, 图标, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem-java.lang.String-javax.swing.Icon-boolean-) '
- en: '[JCheckBoxMenuItem()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem--)
    | Create a `JCheckBoxMenuItem` instance. The arguments are interpreted in the
    same way as the arguments to the `JCheckBox` constructors, except that any specified
    icon is shown in addition to the normal check box icon. |'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[JCheckBoxMenuItem()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JCheckBoxMenuItem.html#JCheckBoxMenuItem--)
    | 创建一个`JCheckBoxMenuItem`实例。参数的解释方式与`JCheckBox`构造函数的参数相同，只是任何指定的图标会显示在普通复选框图标的旁边。
    |'
- en: Radio Button Constructors
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 单选按钮构造函数
- en: '| Constructor | Purpose |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 构造函数 | 目的 |'
- en: '| [JRadioButton(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-javax.swing.Action-)
    [JRadioButton(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JRadioButton(操作)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-javax.swing.Action-)
    [JRadioButton(字符串)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-)'
- en: '[JRadioButton(String, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-boolean-)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButton(字符串, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-boolean-)'
- en: '[JRadioButton(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-javax.swing.Icon-)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButton(图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-javax.swing.Icon-)'
- en: '[JRadioButton(Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-javax.swing.Icon-boolean-)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButton(图标, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-javax.swing.Icon-boolean-)'
- en: '[JRadioButton(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-javax.swing.Icon-)'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButton(字符串, 图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-javax.swing.Icon-)'
- en: '[JRadioButton(String, Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-javax.swing.Icon-boolean-)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButton(字符串, 图标, 布尔值)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton-java.lang.String-javax.swing.Icon-boolean-)'
- en: '[JRadioButton()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton--)
    | Create a `JRadioButton` instance. The string argument specifies the text, if
    any, that the radio button should display. Similarly, the `Icon` argument specifies
    the image that should be used instead of the look and feel''s default radio button
    image. Specifying the boolean argument as `true` initializes the radio button
    to be selected, subject to the approval of the `ButtonGroup` object. If the boolean
    argument is absent or `false`, then the radio button is initially unselected.
    |'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButton()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButton.html#JRadioButton--)
    | 创建一个`JRadioButton`实例。字符串参数指定了单选按钮应显示的文本（如果有）。同样，`Icon`参数指定了应该使用的图像，而不是外观的默认单选按钮图像。将布尔参数指定为`true`会将单选按钮初始化为选中状态，取决于`ButtonGroup`对象的批准。如果布尔参数不存在或为`false`，则单选按钮最初未选中。
    |'
- en: '| [JRadioButtonMenuItem(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-javax.swing.Action-)
    [JRadioButtonMenuItem(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-java.lang.String-)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JRadioButtonMenuItem(操作)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-javax.swing.Action-)
    [JRadioButtonMenuItem(字符串)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-java.lang.String-)'
- en: '[JRadioButtonMenuItem(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-javax.swing.Icon-)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButtonMenuItem(图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-javax.swing.Icon-) '
- en: '[JRadioButtonMenuItem(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-java.lang.String-javax.swing.Icon-)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButtonMenuItem(字符串, 图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem-java.lang.String-javax.swing.Icon-)'
- en: '[JRadioButtonMenuItem()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem--)
    | Create a `JRadioButtonMenuItem` instance. The arguments are interpreted in the
    same way as the arguments to the `JRadioButton` constructors, except that any
    specified icon is shown in addition to the normal radio button icon. |'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[JRadioButtonMenuItem()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JRadioButtonMenuItem.html#JRadioButtonMenuItem--)
    | 创建一个`JRadioButtonMenuItem`实例。参数的解释方式与`JRadioButton`构造函数的参数相同，只是任何指定的图标会显示在普通单选按钮图标之外。
    |'
- en: Toggle Button Constructors
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 切换按钮构造函数
- en: '| Constructor | Purpose |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 构造函数 | 目的 |'
- en: '| [JToggleButton(Action)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-javax.swing.Action-)
    [JToggleButton(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JToggleButton(操作)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-javax.swing.Action-)
    [JToggleButton(字符串)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-)'
- en: '[JToggleButton(String, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-boolean-)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[JToggleButton(String, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-boolean-)'
- en: '[JToggleButton(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-javax.swing.Icon-)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[JToggleButton(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-javax.swing.Icon-)'
- en: '[JToggleButton(Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-javax.swing.Icon-boolean-)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[JToggleButton(Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-javax.swing.Icon-boolean-)'
- en: '[JToggleButton(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-javax.swing.Icon-)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[JToggleButton(String, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-javax.swing.Icon-)'
- en: '[JToggleButton(String, Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-javax.swing.Icon-boolean-)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[JToggleButton(String, Icon, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton-java.lang.String-javax.swing.Icon-boolean-)'
- en: '[JToggleButton()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton--)
    | Create a `JToggleButton` instance, which is similar to a `JButton`, but with
    two states. Normally, you use a `JRadioButton` or `JCheckBox` instead of directly
    instantiating `JToggleButton`, but `JToggleButton` can be useful when you do not
    want the typical radio button or check box appearance. The string argument specifies
    the text, if any, that the toggle button should display. Similarly, the `Icon`
    argument specifies the image that should be used. Specifying the boolean argument
    as `true` initializes the toggle button to be selected. If the boolean argument
    is absent or `false`, then the toggle button is initially unselected. |'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[JToggleButton()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JToggleButton.html#JToggleButton--)
    | 创建一个 `JToggleButton` 实例，类似于 `JButton`，但具有两种状态。通常，您应该使用 `JRadioButton` 或 `JCheckBox`
    而不是直接实例化 `JToggleButton`，但在您不希望出现典型的单选按钮或复选框外观时，`JToggleButton` 可能会有用。字符串参数指定切换按钮应显示的文本（如果有）。同样，`Icon`
    参数指定应使用的图像。将布尔参数指定为 `true` 会将切换按钮初始化为选定状态。如果省略布尔参数或为 `false`，则切换按钮最初未选定。 |'
- en: Commonly Used Button Group Constructors/Methods
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 常用的按钮组构造函数/方法
- en: '| Constructor or Method | Purpose |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| 构造函数或方法 | 目的 |'
- en: '| [ButtonGroup()](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#ButtonGroup--)
    | Create a `ButtonGroup` instance. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [ButtonGroup()](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#ButtonGroup--)
    | 创建一个 `ButtonGroup` 实例。 |'
- en: '| [void add(AbstractButton)](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#add-javax.swing.AbstractButton-)
    [void remove(AbstractButton)](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#remove-javax.swing.AbstractButton-)
    | Add a button to the group, or remove a button from the group. |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [void add(AbstractButton)](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#add-javax.swing.AbstractButton-)
    [void remove(AbstractButton)](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#remove-javax.swing.AbstractButton-)
    | 将按钮添加到组中，或从组中移除按钮。 |'
- en: '| [public ButtonGroup getGroup()](https://docs.oracle.com/javase/8/docs/api/javax/swing/DefaultButtonModel.html#getGroup--)
    *(in `DefaultButtonModel`)* | Get the `ButtonGroup`, if any, that controls a button.
    For example: `ButtonGroup group = ((DefaultButtonModel)button.getModel()).getGroup();`
    |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [public ButtonGroup getGroup()](https://docs.oracle.com/javase/8/docs/api/javax/swing/DefaultButtonModel.html#getGroup--)
    *(在 `DefaultButtonModel` 中)* | 获取控制按钮的 `ButtonGroup`（如果有）。例如：`ButtonGroup group
    = ((DefaultButtonModel)button.getModel()).getGroup();` |'
- en: '| [public ButtonGroup clearSelection()](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#ButtonGroup--)
    | Clears the state of selected buttons in the ButtonGroup. None of the buttons
    in the ButtonGroup are selected . |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [公共 ButtonGroup clearSelection()](https://docs.oracle.com/javase/8/docs/api/javax/swing/ButtonGroup.html#ButtonGroup--)
    | 清除 ButtonGroup 中选定按钮的状态。ButtonGroup 中的按钮都不会被选中。 |'
- en: Examples that Use Various Kinds of Buttons
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用不同类型按钮的示例
- en: The following examples use buttons. Also see [Examples that Use Tool Bars](toolbar.html#eg),
    which lists programs that add `JButton` objects to `JToolBar`s.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例使用按钮。另请参阅[使用工具栏的示例](toolbar.html#eg)，其中列出了将 `JButton` 对象添加到 `JToolBar` 中的程序。
- en: '| Example | Where Described | Notes |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 描述位置 | 备注 |'
- en: '| [`ButtonDemo`](../examples/components/index.html#ButtonDemo) | [How to Use
    the Common Button API](#abstractbutton) | Uses mnemonics and icons. Specifies
    the button text position, relative to the button icon. Uses action commands. |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [`ButtonDemo`](../examples/components/index.html#ButtonDemo) | [如何使用常见按钮
    API](#abstractbutton) | 使用助记符和图标。指定按钮文本位置，相对于按钮图标。使用动作命令。 |'
- en: '| [`ButtonHtmlDemo`](../examples/components/index.html#ButtonHtmlDemo) | [Using
    HTML in Swing Components](html.html) | A version of ButtonDemo that uses HTML
    formatting in its buttons. |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`ButtonHtmlDemo`](../examples/components/index.html#ButtonHtmlDemo) | [在
    Swing 组件中使用 HTML](html.html) | 一个使用 HTML 格式的 ButtonDemo 版本。 |'
- en: '| [`ListDialog`](../examples/components/index.html#ListDialog) | [How to Use
    JButton Features](#jbutton) | Implements a dialog with two buttons, one of which
    is the default button. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`ListDialog`](../examples/components/index.html#ListDialog) | [如何使用 JButton
    功能](#jbutton) | 实现一个带有两个按钮的对话框，其中一个是默认按钮。 |'
- en: '| [`DialogDemo`](../examples/components/index.html#DialogDemo) | [How to Make
    Dialogs](dialog.html) | Has "Show it" buttons whose behavior is tied to the state
    of radio buttons. Uses sizable, though anonymous, inner classes to implement the
    action listeners. |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`DialogDemo`](../examples/components/index.html#DialogDemo) | [如何制作对话框](dialog.html)
    | 具有与单选按钮状态相关联的“显示”按钮行为。使用匿名的内部类实现动作监听器。 |'
- en: '| [`ProgressBarDemo`](../examples/components/index.html#ProgressBarDemo) |
    [How to Monitor Progress](progress.html) | Implements a button''s action listener
    with a named inner class. |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [`ProgressBarDemo`](../examples/components/index.html#ProgressBarDemo) |
    [如何监视进度](progress.html) | 使用命名的内部类实现按钮的动作监听器。 |'
- en: '| [`CheckBoxDemo`](../examples/components/index.html#CheckBoxDemo) | [How to
    Use Check Boxes](#checkbox) | Uses check box buttons to determine which of 16
    images it should display. |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`CheckBoxDemo`](../examples/components/index.html#CheckBoxDemo) | [如何使用复选框](#checkbox)
    | 使用复选框按钮确定应显示哪 16 幅图像。 |'
- en: '| [`ActionDemo`](../examples/misc/index.html#ActionDemo) | [How to Use Actions](../misc/action.html)
    | Uses check box menu items to set the state of the program. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`ActionDemo`](../examples/misc/index.html#ActionDemo) | [如何使用动作](../misc/action.html)
    | 使用复选框菜单项来设置程序的状态。 |'
- en: '| [`RadioButtonDemo`](../examples/components/index.html#RadioButtonDemo) |
    [How to Use Radio Buttons](#radiobutton) | Uses radio buttons to determine which
    of five images it should display. |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [`RadioButtonDemo`](../examples/components/index.html#RadioButtonDemo) |
    [如何使用单选按钮](#radiobutton) | 使用单选按钮确定应显示哪五幅图像。 |'
- en: '| [`DialogDemo`](../examples/components/index.html#DialogDemo) | [How to Make
    Dialogs](dialog.html) | Contains several sets of radio buttons, which it uses
    to determine which dialog to bring up. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`DialogDemo`](../examples/components/index.html#DialogDemo) | [如何制作对话框](dialog.html)
    | 包含几组单选按钮，用于确定要弹出哪个对话框。 |'
- en: '| [`MenuDemo`](../examples/components/index.html#MenuDemo) | [How to Use Menus](menu.html)
    | Contains radio button menu items and check box menu items. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`MenuDemo`](../examples/components/index.html#MenuDemo) | [如何使用菜单](menu.html)
    | 包含单选按钮菜单项和复选框菜单项。 |'
- en: '| [`ColorChooserDemo2`](../examples/components/index.html#ColorChooserDemo2)
    | [How to Use Color Choosers](colorchooser.html) | The crayons in `CrayonPanel`
    are implemented as toggle buttons. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`ColorChooserDemo2`](../examples/components/index.html#ColorChooserDemo2)
    | [如何使用颜色选择器](colorchooser.html) | `CrayonPanel` 中的蜡笔实现为切换按钮。 |'
- en: '| [`ScrollDemo`](../examples/components/index.html#ScrollDemo) | [How to Use
    Scroll Panes](scrollpane.html) | The **cm** button is a toggle button. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`ScrollDemo`](../examples/components/index.html#ScrollDemo) | [如何使用滚动窗格](scrollpane.html)
    | **cm** 按钮是一个切换按钮。 |'
- en: 'You can learn more about JavaFX button components from the following documents:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从以下文档中了解更多关于 JavaFX 按钮组件的信息：
- en: '[Using JavaFX UI Controls: Button](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/button.htm)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 JavaFX UI 控件：按钮](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/button.htm)'
- en: '[Using JavaFX UI Controls: Radio Button](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/radio-button.htm)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 JavaFX UI 控件：单选按钮](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/radio-button.htm)'
- en: '[Using JavaFX UI Controls: Toggle Button](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/toggle-button.htm)'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 JavaFX UI 控件：切换按钮](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/toggle-button.htm)'
- en: '[Using JavaFX UI Controls: Check box](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/checkbox.htm)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 JavaFX UI 控件：复选框](https://docs.oracle.com/javase/8/javafx/user-interface-tutorial/checkbox.htm)'
