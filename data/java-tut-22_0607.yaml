- en: Checking Character Properties
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查字符属性
- en: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/charintro.html](https://docs.oracle.com/javase/tutorial/i18n/text/charintro.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/charintro.html](https://docs.oracle.com/javase/tutorial/i18n/text/charintro.html)
- en: You can categorize characters according to their properties. For instance, X
    is an uppercase letter and 4 is a decimal digit. Checking character properties
    is a common way to verify the data entered by end users. If you are selling books
    online, for example, your order entry screen should verify that the characters
    in the quantity field are all digits.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以根据字符的属性对字符进行分类。例如，X是大写字母，4是十进制数字。检查字符属性是验证最终用户输入的数据的常见方法。例如，如果您在网上销售书籍，订单输入屏幕应验证数量字段中的字符是否都是数字。
- en: 'Developers who aren''t used to writing global software might determine a character''s
    properties by comparing it with character constants. For instance, they might
    write code like this:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不习惯编写全球软件的开发人员可能会通过将其与字符常量进行比较来确定字符的属性。例如，他们可能会编写如下代码：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The preceding code is *wrong* because it works only with English and a few
    other languages. To internationalize the previous example, replace it with the
    following statements:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码是*错误*的，因为它只适用于英语和少数其他语言。要使前面的示例国际化，将其替换为以下语句：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The [`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    methods rely on the Unicode Standard for determining the properties of a character.
    Unicode is a 16-bit character encoding that supports the world's major languages.
    In the Java programming language `char` values represent Unicode characters. If
    you check the properties of a `char` with the appropriate `Character` method,
    your code will work with all major languages. For example, the `Character.isLetter`
    method returns `true` if the character is a letter in Chinese, German, Arabic,
    or another language.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)方法依赖于Unicode标准来确定字符的属性。Unicode是一种支持世界主要语言的16位字符编码。在Java编程语言中，`char`值表示Unicode字符。如果您使用适当的`Character`方法检查`char`的属性，则您的代码将适用于所有主要语言。例如，如果字符是中文、德文、阿拉伯文或其他语言中的字母，则`Character.isLetter`方法返回`true`。'
- en: The following list gives some of the most useful `Character` comparison methods.
    The `Character` API documentation fully specifies the methods.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表列出了一些最有用的`Character`比较方法。`Character` API文档完全指定了这些方法。
- en: '`isDigit`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isDigit`'
- en: '`isLetter`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isLetter`'
- en: '`isLetterOrDigit`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isLetterOrDigit`'
- en: '`isLowerCase`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isLowerCase`'
- en: '`isUpperCase`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isUpperCase`'
- en: '`isSpaceChar`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isSpaceChar`'
- en: '`isDefined`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isDefined`'
- en: 'The `Character.getType` method returns the Unicode category of a character.
    Each category corresponds to a constant defined in the `Character` class. For
    instance, `getType` returns the `Character.UPPERCASE_LETTER` constant for the
    character A. For a complete list of the category constants returned by `getType`,
    see the [`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    API documentation. The following example shows how to use `getType` and the `Character`
    category constants. All of the expressions in these `if` statements are `true`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`Character.getType`方法返回字符的Unicode类别。每个类别对应于`Character`类中定义的常量。例如，对于字符A，`getType`返回`Character.UPPERCASE_LETTER`常量。有关`getType`返回的类别常量的完整列表，请参阅[`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    API文档。以下示例显示了如何使用`getType`和`Character`类别常量。这些`if`语句中的所有表达式都为`true`：'
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
