- en: Naming Exceptions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命名异常
- en: 原文：[https://docs.oracle.com/javase/tutorial/jndi/ops/exception.html](https://docs.oracle.com/javase/tutorial/jndi/ops/exception.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/jndi/ops/exception.html](https://docs.oracle.com/javase/tutorial/jndi/ops/exception.html)
- en: 'Many methods in the JNDI packages throw a [`NamingException`](https://docs.oracle.com/javase/8/docs/api/javax/naming/NamingException.html)
    when they need to indicate that the operation requested cannot be performed. Commonly,
    you will see a `try/catch` wrapper around the methods that can throw a `NamingException`:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: JNDI包中的许多方法在需要指示无法执行请求的操作时会抛出[`NamingException`](https://docs.oracle.com/javase/8/docs/api/javax/naming/NamingException.html)。通常，您会看到围绕可能引发`NamingException`的方法的`try/catch`包装器：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exception Class Hierarchy
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常类层次结构
- en: The JNDI has a rich exception hierarchy stemming from the `NamingException`
    class. The class names of the exceptions are self-explanatory and are listed [here](https://docs.oracle.com/javase/8/docs/api/javax/naming/package-tree.html).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: JNDI具有丰富的异常层次结构，源自`NamingException`类。异常的类名是自解释的，并在[此处](https://docs.oracle.com/javase/8/docs/api/javax/naming/package-tree.html)列出。
- en: To handle a particular subclass of `NamingException` specially, you catch the
    subclass separately. For example, the following code specially treats the `AuthenticationException`
    and its subclasses.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要特别处理`NamingException`的特定子类，您需要单独捕获子类。例如，以下代码特别处理`AuthenticationException`及其子类。
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Enumerations
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 枚举
- en: Operations such as [`Context.list()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/Context.html#list-javax.naming.Name-)
    and [`DirContext.search()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/directory/DirContext.html#search-javax.naming.Name-java.lang.String-javax.naming.directory.SearchControls-)
    return a [`NamingEnumeration`](https://docs.oracle.com/javase/8/docs/api/javax/naming/NamingEnumeration.html).
    In these cases, if an error occurs and no results are returned, then `NamingException`
    or one of its appropriate subclasses will be thrown at the time that the method
    is invoked. If an error occurs but there are some results to be returned, then
    a `NamingEnumeration` is returned so that you can get those results. When all
    of the results are exhausted, invoking [`NamingEnumeration.hasMore()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/NamingEnumeration.html#hasMore--)
    will cause a `NamingException` (or one of its subclasses) to be thrown to indicate
    the error. At that point, the enumeration becomes invalid and no more methods
    should be invoked on it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 操作，如[`Context.list()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/Context.html#list-javax.naming.Name-)和[`DirContext.search()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/directory/DirContext.html#search-javax.naming.Name-java.lang.String-javax.naming.directory.SearchControls-)返回一个[`NamingEnumeration`](https://docs.oracle.com/javase/8/docs/api/javax/naming/NamingEnumeration.html)。在这些情况下，如果发生错误并且没有返回结果，则在调用方法时将抛出`NamingException`或其适当的子类。如果发生错误但有一些结果需要返回，则会返回一个`NamingEnumeration`，以便您可以获取这些结果。当所有结果耗尽时，调用[`NamingEnumeration.hasMore()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/NamingEnumeration.html#hasMore--)将导致抛出`NamingException`（或其子类之一）以指示错误。此时，枚举将变为无效状态，不应在其上调用更多方法。
- en: For example, if you perform a `search()` and specify a count limit (*n*) of
    how many answers to return, then the `search()` will return an enumeration consisting
    of at most *n* results. If the number of results exceeds *n*, then when `NamingEnumeration.hasMore()`
    is invoked for the *n+1* time, a `SizeLimitExceededException` will be thrown.
    See the [Result Count](countlimit.html) of this lesson for a sample code.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果执行`search()`并指定要返回多少个答案的计数限制（*n*），则`search()`将返回最多 *n* 个结果的枚举。如果结果数量超过
    *n*，则当第 *n+1* 次调用`NamingEnumeration.hasMore()`时，将抛出`SizeLimitExceededException`。请参阅本课程的[结果计数](countlimit.html)示例代码。
- en: Examples in This Tutorial
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本教程中的示例
- en: In the inline sample code that is embedded within the text of this tutorial,
    the `try/catch` clauses are usually omitted for the sake of readability. Typically,
    because only code fragments are shown here, only the lines that are directly useful
    in illustrating a concept are included. You will see appropriate placements of
    the `try/catch` clauses for `NamingException` if you look in the source files
    that accompany this tutorial.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程文本中嵌入的内联示例代码中，通常为了可读性而省略了`try/catch`子句。通常，因为这里只显示代码片段，所以只包含直接用于说明概念的行。如果查看本教程附带的源文件，您将看到用于`NamingException`的`try/catch`子句的适当位置。
- en: The Exceptions in the javax.naming package can be found [here](https://docs.oracle.com/javase/8/docs/api/javax/naming/package-summary.html).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: javax.naming包中的异常可以在[这里](https://docs.oracle.com/javase/8/docs/api/javax/naming/package-summary.html)找到。
