- en: Character and String APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字符和字符串 API
- en: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/characterClass.html](https://docs.oracle.com/javase/tutorial/i18n/text/characterClass.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/characterClass.html](https://docs.oracle.com/javase/tutorial/i18n/text/characterClass.html)
- en: 'The `Character` class encapsulates the `char` data type. For the J2SE release
    5, many methods were added to the `Character` class to support supplementary characters.
    This API falls into two categories: methods that convert between `char` and code
    point values and methods that verify the validity of or map code points.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`Character` 类封装了 `char` 数据类型。对于 J2SE 发布的第 5 版，许多方法被添加到 `Character` 类中以支持补充字符。这个
    API 分为两类：将 `char` 和代码点值之间进行转换的方法以及验证或映射代码点的方法。'
- en: This section describes a subset of the available methods in the `Character`
    class. For the complete list of available APIs, see the [`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    class specification.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了 `Character` 类中可用方法的一个子集。有关可用 API 的完整列表，请参阅 [`Character`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)
    类规范。
- en: Conversion Methods and the Character Class
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 转换方法和 Character 类
- en: The following table includes the most useful conversion methods, or methods
    that facilitate conversion, in the `Character` class. The `codePointAt` and `codePointBefore`
    methods are included in this list because text is generally found in a sequence,
    such as a `String`, and these methods can be used to extract the desired substring.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格包括了 `Character` 类中最有用的转换方法或便于转换的方法。`codePointAt` 和 `codePointBefore` 方法包含在此列表中，因为文本通常以序列的形式出现，比如一个
    `String`，这些方法可以用来提取所需的子字符串。
- en: '| Method(s) | Description |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 描述 |'
- en: '| [`toChars(int codePoint, char[] dst, int dstIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#toChars-int-char:A-int-)
    [`toChars(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#toChars-int-)
    | Converts the specified Unicode code point to its UTF-16 representation and places
    it in a `char` array. Sample usage: `Character.toChars(0x10400)` |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`toChars(int codePoint, char[] dst, int dstIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#toChars-int-char:A-int-)
    [`toChars(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#toChars-int-)
    | 将指定的 Unicode 代码点转换为其 UTF-16 表示，并将其放入一个 `char` 数组中。示例用法：`Character.toChars(0x10400)`
    |'
- en: '| [`toCodePoint(char high, char low)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#toCodePoint-char-char-)
    | Converts the specified surrogate pair to its supplementary code point value.
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`toCodePoint(char high, char low)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#toCodePoint-char-char-)
    | 将指定的代理对转换为其补充代码点值。 |'
- en: '| [`codePointAt(char[] a, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointAt-char:A-int-)
    [`codePointAt(char[] a, int index, int limit)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointAt-char:A-int-int-)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`codePointAt(char[] a, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointAt-char:A-int-)
    [`codePointAt(char[] a, int index, int limit)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointAt-char:A-int-int-)'
- en: '[`codePointAt(CharSequence seq, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointAt-java.lang.CharSequence-int-)
    | Returns the Unicode code point at the specified index. The third method takes
    a `CharSequence` and the second method enforces an upper limit on the index. |'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`codePointAt(CharSequence seq, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointAt-java.lang.CharSequence-int-)
    | 返回指定索引处的 Unicode 代码点。第三个方法接受一个 `CharSequence`，第二个方法对索引施加了上限。 |'
- en: '| [`codePointBefore(char[] a, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-char:A-int-)
    [`codePointBefore(char[] a, int index, int start)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-char:A-int-int-)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`codePointBefore(char[] a, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-char:A-int-)
    [`codePointBefore(char[] a, int index, int start)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-char:A-int-int-)'
- en: '[`codePointBefore(CharSequence seq, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-java.lang.CharSequence-int-)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[`codePointBefore(CharSequence seq, int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-java.lang.CharSequence-int-)'
- en: '[`codePointBefore(char[], int, int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-char:A-int-int-)
    | Returns the Unicode code point before the specified index. The third method
    accepts a `CharSequence` and the other methods accept a `char` array. The second
    method enforces a lower limit on the index. |'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[`codePointBefore(char[], int, int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointBefore-char:A-int-int-)
    | 返回指定索引之前的Unicode代码点。第三个方法接受`CharSequence`，其他方法接受`char`数组。第二个方法对索引强制执行下限。 |'
- en: '| [`charCount(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#charCount-int-)
    | Returns the value 1 for characters that can be represented by a single `char`.
    Returns the value 2 for supplementary characters that require two `char`s. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`charCount(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#charCount-int-)
    | 对于可以由单个`char`表示的字符，返回值为1。对于需要两个`char`表示的补充字符，返回值为2。 |'
- en: Verification and Mapping Methods in the Character Class
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字符类中的验证和映射方法
- en: Some of the previous methods that used the `char` primitive data type, such
    as `isLowerCase(char)` and `isDigit(char)`, were supplanted by methods that support
    supplementary characters, such as `isLowerCase(int)` and `isDigit(int)`. The previous
    methods are supported but do not work with supplementary characters. To create
    a global application and ensure that your code works seamlessly with any language,
    it is recommended that you use the newer forms of these methods.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以前使用`char`原始数据类型的一些方法，如`isLowerCase(char)`和`isDigit(char)`，已被支持补充字符的方法所取代，如`isLowerCase(int)`和`isDigit(int)`。以前的方法得到支持，但不适用于补充字符。为了创建一个全球应用程序并确保您的代码与任何语言无缝配合，建议您使用这些方法的新形式。
- en: Note that, for performance reasons, most methods that accept a code point do
    not verify the validity of the code point parameter. You can use the `isValidCodePoint`
    method for that purpose.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，出于性能原因，大多数接受代码点的方法不会验证代码点参数的有效性。您可以使用`isValidCodePoint`方法进行验证。
- en: The following table lists some of the verification and mapping methods in the
    `Character` class.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了`Character`类中的一些验证和映射方法。
- en: '| Method(s) | Description |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 描述 |'
- en: '| [`isValidCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isValidCodePoint-int-)
    | Returns true if the code point is within the range of 0x0000 to 0x10FFFF, inclusive.
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`isValidCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isValidCodePoint-int-)
    | 如果代码点在0x0000到0x10FFFF（包括）范围内，则返回true。 |'
- en: '| [`isSupplementaryCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isSupplementaryCodePoint-int-)
    | Returns true if the code point is within the range of 0x10000 to 0x10FFFF, inclusive.
    |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`isSupplementaryCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isSupplementaryCodePoint-int-)
    | 如果代码点在0x10000到0x10FFFF（包括）范围内，则返回true。 |'
- en: '| [`isHighSurrogate(char)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isHighSurrogate-char-)
    | Returns true if the specified `char` is within the high surrogate range of \uD800
    to \uDBFF, inclusive. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`isHighSurrogate(char)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isHighSurrogate-char-)
    | 如果指定的`char`在\uD800到\uDBFF（包括）的高代理范围内，则返回true。 |'
- en: '| [`isLowSurrogate(char)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLowSurrogate-char-)
    | Returns true if the specified `char` is within the low surrogate range of \uDC00
    to \uDFFF, inclusive. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`isLowSurrogate(char)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLowSurrogate-char-)
    | 如果指定的`char`在\uDC00到\uDFFF（包括）的低代理范围内，则返回true。 |'
- en: '| [`isSurrogatePair(char high, char low)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isSurrogatePair-char-char-)
    | Returns true if the specified high and low surrogate code values represent a
    valid surrogate pair. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`isSurrogatePair(char high, char low)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isSurrogatePair-char-char-)
    | 如果指定的高代理和低代理代码值表示有效的代理对，则返回true。 |'
- en: '| [`codePointCount(CharSequence, int, int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointCount-java.lang.CharSequence-int-int-)
    [`codePointCount(char[], int, int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointCount-char:A-int-int-)
    | Returns the number of Unicode code points in the `CharSequence`, or `char` array.
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`codePointCount(CharSequence, int, int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointCount-java.lang.CharSequence-int-int-)
    [`codePointCount(char[], int, int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#codePointCount-char:A-int-int-)
    | 返回`CharSequence`或`char`数组中的Unicode代码点数。 |'
- en: '| [`isLowerCase(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLowerCase-int-)
    [`isUpperCase(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isUpperCase-int-)
    | Returns true if the specified Unicode code point is a lowercase or uppercase
    character. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`isLowerCase(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLowerCase-int-)
    [`isUpperCase(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isUpperCase-int-)
    | 如果指定的 Unicode 代码点是小写或大写字符，则返回 true。 |'
- en: '| [`isDefined(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isDefined-int-)
    | Returns true if the specified Unicode code point is defined in the Unicode standard.
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`isDefined(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isDefined-int-)
    | 如果指定的 Unicode 代码点在 Unicode 标准中定义，则返回 true。 |'
- en: '| [`isJavaIdentifierStart(char)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isJavaIdentifierStart-char-)
    [`isJavaIdentifierStart(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isJavaIdentifierStart-int-)
    | Returns true if the specified character or Unicode code point is permissible
    as the first character in a Java identifier. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`isJavaIdentifierStart(char)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isJavaIdentifierStart-char-)
    [`isJavaIdentifierStart(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isJavaIdentifierStart-int-)
    | 如果指定的字符或 Unicode 代码点可作为 Java 标识符中的第一个字符，则返回 true。 |'
- en: '| [`isLetter(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLetter-int-)
    [`isDigit(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isDigit-int-)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`isLetter(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLetter-int-)
    [`isDigit(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isDigit-int-)'
- en: '[`isLetterOrDigit(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLetterOrDigit-int-)
    | Returns true if the specified Unicode code point is a letter, a digit, or a
    letter or digit. |'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`isLetterOrDigit(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#isLetterOrDigit-int-)
    | 如果指定的 Unicode 代码点是字母、数字或字母数字，则返回 true。 |'
- en: '| [`getDirectionality(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#getDirectionality-int-)
    | Returns the Unicode directionality property for the given Unicode code point.
    |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`getDirectionality(int)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#getDirectionality-int-)
    | 返回给定 Unicode 代码点的 Unicode 方向性属性。 |'
- en: '| [`Character.UnicodeBlock.of(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.UnicodeBlock.html#of-int-)
    | Returns the object representing the Unicode block that contains the given Unicode
    code point or returns `null` if the code point is not a member of a defined block.
    |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`Character.UnicodeBlock.of(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/Character.UnicodeBlock.html#of-int-)
    | 返回表示包含给定 Unicode 代码点的 Unicode 块的对象，如果代码点不是已定义块的成员，则返回`null`。 |'
- en: Methods in the String Classes
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字符串类中的方法
- en: The `String`, `StringBuffer`, and `StringBuilder` classes also have constructors
    and methods that work with supplementary characters. The following table lists
    some of the commonly used methods. For the complete list of available APIs, see
    the javadoc for the [`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html),
    [`StringBuffer`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html),
    and [`StringBuilder`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html)
    classes.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`String`、`StringBuffer` 和 `StringBuilder` 类也有构造函数和方法，可以处理补充字符。以下表格列出了一些常用方法。要查看可用
    API 的完整列表，请参阅 [`String`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html)、[`StringBuffer`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html)
    和 [`StringBuilder`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html)
    类的 javadoc。'
- en: '| Constructor or Methods | Description |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 构造函数或方法 | 描述 |'
- en: '| [`String(int[] codePoints, int offset, int count)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#String-int:A-int-int-)
    | Allocates a new `String` instance that contains characters from a subarray of
    a Unicode code point array. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`String(int[] codePoints, int offset, int count)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#String-int:A-int-int-)
    | 分配一个新的 `String` 实例，其中包含来自 Unicode 代码点数组的子数组的字符。 |'
- en: '| [`String.codePointAt(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#codePointAt-int-)
    [`StringBuffer.codePointAt(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#codePointAt-int-)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`String.codePointAt(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#codePointAt-int-)
    [`StringBuffer.codePointAt(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#codePointAt-int-)'
- en: '[`StringBuilder.codePointAt(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#codePointAt-int-)
    | Returns the Unicode code point at the specified index. |'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[`StringBuilder.codePointAt(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#codePointAt-int-)
    | 返回指定索引处的 Unicode 代码点。 |'
- en: '| [`String.codePointBefore(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#codePointBefore-int-)
    [`StringBuffer.codePointBefore(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#codePointBefore-int-)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`String.codePointBefore(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#codePointBefore-int-)
    [`StringBuffer.codePointBefore(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#codePointBefore-int-)'
- en: '[`StringBuilder.codePointBefore(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#codePointBefore-int-)
    | Returns the Unicode code point before the specified index. |'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`StringBuilder.codePointBefore(int index)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#codePointBefore-int-)
    | 返回指定索引之前的 Unicode 代码点。 |'
- en: '| [`String.codePointCount(int beginIndex, int endIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#codePointCount-int-int-)
    [`StringBuffer.codePointCount(int beginIndex, int endIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#codePointCount-int-int-)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`String.codePointCount(int beginIndex, int endIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#codePointCount-int-int-)
    [`StringBuffer.codePointCount(int beginIndex, int endIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#codePointCount-int-int-)'
- en: '[`StringBuilder.codePointCount(int beginIndex, int endIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#codePointCount-int-int-)
    | Returns the number of Unicode code points in the specified range. |'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[`StringBuilder.codePointCount(int beginIndex, int endIndex)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#codePointCount-int-int-)
    | 返回指定范围内的 Unicode 代码点数。 |'
- en: '| [`StringBuffer.appendCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#appendCodePoint-int-)
    [`StringBuilder.appendCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#appendCodePoint-int-)
    | Appends the string representation of the specified code point to the sequence.
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`StringBuffer.appendCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#appendCodePoint-int-)
    [`StringBuilder.appendCodePoint(int codePoint)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#appendCodePoint-int-)
    | 将指定代码点的字符串表示附加到序列。 |'
- en: '| [`String.offsetByCodePoints(int index, int codePointOffset)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#offsetByCodePoints-int-int-)
    [`StringBuffer.offsetByCodePoints(int index, int codePointOffset)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#offsetByCodePoints-int-int-)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`String.offsetByCodePoints(int index, int codePointOffset)`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#offsetByCodePoints-int-int-)
    [`StringBuffer.offsetByCodePoints(int index, int codePointOffset)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html#offsetByCodePoints-int-int-)'
- en: '[`StringBuilder.offsetByCodePoints(int index, int codePointOffset)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#offsetByCodePoints-int-int-)
    | Returns the index that is offset from the given index by the given number of
    code points. |'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`StringBuilder.offsetByCodePoints(int index, int codePointOffset)`](https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#offsetByCodePoints-int-int-)
    | 返回给定索引偏移给定代码点数量后的索引。 |'
