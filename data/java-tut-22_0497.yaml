- en: How to Write a Mouse-Motion Listener
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何编写鼠标移动监听器
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/events/mousemotionlistener.html](https://docs.oracle.com/javase/tutorial/uiswing/events/mousemotionlistener.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/events/mousemotionlistener.html](https://docs.oracle.com/javase/tutorial/uiswing/events/mousemotionlistener.html)
- en: Mouse-motion events notify when the user uses the mouse (or a similar input
    device) to move the onscreen cursor. For information on listening for other kinds
    of mouse events, such as clicks, see [How to Write a Mouse Listener](mouselistener.html).
    For information on listening for mouse-wheel events, see [How to Write a Mouse
    Wheel Listener](mousewheellistener.html).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 鼠标移动事件通知用户使用鼠标（或类似输入设备）移动屏幕上的光标。有关监听其他类型鼠标事件（如点击）的信息，请参阅[如何编写鼠标监听器](mouselistener.html)。有关监听鼠标滚轮事件的信息，请参阅[如何编写鼠标滚轮监听器](mousewheellistener.html)。
- en: If an application requires the detection of both mouse events and mouse-motion
    events, use the [`MouseInputAdapter`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/MouseInputAdapter.html)
    class, which implements the [`MouseInputListener`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/MouseInputListener.html)
    a convenient interface that implements both the `MouseListener` and `MouseMotionListener`
    interfaces.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果应用程序需要检测鼠标事件和鼠标移动事件，可以使用[`MouseInputAdapter`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/MouseInputAdapter.html)类，该类实现了[`MouseInputListener`](https://docs.oracle.com/javase/8/docs/api/javax/swing/event/MouseInputListener.html)一个方便的接口，实现了`MouseListener`和`MouseMotionListener`接口。
- en: Alternatively, use the corresponding [`MouseAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseAdapter.html)
    AWT class, which implements the `MouseMotionListener` interface, to create a `MouseMotionEvent`
    and override the methods for the specific events.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用相应的[`MouseAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseAdapter.html)
    AWT类，该类实现了`MouseMotionListener`接口，以创建一个`MouseMotionEvent`并重写特定事件的方法。
- en: The following demo code contains a mouse-motion listener. This demo is exactly
    the same as the demo described in the [How to Write a Mouse Listener](mouselistener.html)
    section, except for substituting the `MouseMotionListener` interface for the `MouseListener`
    interface. Additionally, MouseMotionEventDemo implements the `mouseDragged` and
    `mouseMoved` methods instead of the mouse listener methods, and displays coordinates
    instead of numbers of clicks.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下演示代码包含一个鼠标移动监听器。这个演示与[如何编写鼠标监听器](mouselistener.html)部分描述的演示完全相同，只是用`MouseMotionListener`接口替换了`MouseListener`接口。此外，MouseMotionEventDemo实现了`mouseDragged`和`mouseMoved`方法，而不是鼠标监听器方法，并显示坐标而不是点击次数。
- en: '![MouseMotionEventDemo screen shot](../Images/bdad172957066676cb45a72efc4e3148.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![MouseMotionEventDemo截图](../Images/bdad172957066676cb45a72efc4e3148.png)'
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试看：**'
- en: Click the Launch button to run MouseMotionEventDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/events/index.html#MouseMotionEventDemo).[![Launches
    the MouseMotionEventDemo application](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/MouseMotionEventDemoProject/MouseMotionEventDemo.jnlp)
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“启动”按钮以运行MouseMotionEventDemo，使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)（[下载
    JDK 7 或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/events/index.html#MouseMotionEventDemo)。[![启动MouseMotionEventDemo应用程序](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/MouseMotionEventDemoProject/MouseMotionEventDemo.jnlp)
- en: Move the cursor into the yellow rectangle at the top of the window.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标移入窗口顶部的黄色矩形中。
- en: You will see one or more mouse-moved events.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将看到一个或多个鼠标移动事件。
- en: Press and hold the mouse button, and then move the mouse so that the cursor
    is outside the yellow rectangle.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住鼠标按钮，然后移动鼠标，使光标移出黄色矩形。
- en: You will see mouse-dragged events.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将看到鼠标拖动事件。
- en: '* * *'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'You can find the demo''s code in [`MouseMotionEventDemo.java`](../examples/events/MouseMotionEventDemoProject/src/events/MouseMotionEventDemo.java)
    and [`BlankArea.java`](../examples/events/MouseMotionEventDemoProject/src/events/BlankArea.java).
    The following code snippet from `MouseMotionEventDemo` implements the mouse-motion
    event handling:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [`MouseMotionEventDemo.java`](../examples/events/MouseMotionEventDemoProject/src/events/MouseMotionEventDemo.java)
    和 [`BlankArea.java`](../examples/events/MouseMotionEventDemoProject/src/events/BlankArea.java)
    中找到演示代码。以下来自 `MouseMotionEventDemo` 的代码片段实现了鼠标移动事件处理：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The SelectionDemo example, draws a rectangle illustrating the user''s current
    dragging. To draw the rectangle, the application must implement an event handler
    for three kinds of mouse events: mouse presses, mouse drags, and mouse releases.
    To be informed of all these events, the handler must implement both the `MouseListener`
    and `MouseMotionListener` interfaces, and be registered as both a mouse listener
    and a mouse-motion listener. To avoid having to define empty methods, the handler
    doesn''t implement either listener interface directly. Instead, it extends `MouseInputAdapter`,
    as the following code snippet shows.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: SelectionDemo 示例，绘制一个矩形来说明用户当前的拖动。为了绘制矩形，应用程序必须实现三种类型的鼠标事件的事件处理程序：鼠标按下、鼠标拖动和鼠标释放。为了被所有这些事件通知，处理程序必须同时实现
    `MouseListener` 和 `MouseMotionListener` 接口，并且注册为鼠标监听器和鼠标移动监听器。为了避免定义空方法，处理程序不直接实现任何监听器接口。相反，它扩展了
    `MouseInputAdapter`，如下面的代码片段所示。
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Mouse-Motion Listener API
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 鼠标移动监听器 API
- en: The MouseMotionListener Interface
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 鼠标移动监听器接口
- en: '*The corresponding adapter classes are [`MouseMotionAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseMotionAdapter.html)
    and [`MouseAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseAdapter.html
    ).*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*相应的适配器类是 [`MouseMotionAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseMotionAdapter.html)
    和 [`MouseAdapter`](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseAdapter.html)。*'
- en: '| Method | Purpose |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [mouseDragged(MouseEvent)](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseMotionListener.html#mouseDragged-java.awt.event.MouseEvent-)
    | Called in response to the user moving the mouse while holding a mouse button
    down. This event is fired by the component that fired the most recent mouse-pressed
    event, even if the cursor is no longer over that component. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [mouseDragged(MouseEvent)](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseMotionListener.html#mouseDragged-java.awt.event.MouseEvent-)
    | 当用户按住鼠标按钮移动鼠标时调用。即使光标不再位于该组件上，此事件也由最近触发鼠标按下事件的组件触发。 |'
- en: '| [mouseMoved(MouseEvent)](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseMotionListener.html#mouseMoved-java.awt.event.MouseEvent-)
    | Called in response to the user moving the mouse with no mouse buttons pressed.
    This event is fired by the component that''s currently under the cursor. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [mouseMoved(MouseEvent)](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseMotionListener.html#mouseMoved-java.awt.event.MouseEvent-)
    | 当用户移动鼠标而没有按下鼠标按钮时调用。此事件由当前位于光标下的组件触发。 |'
- en: Each mouse-motion event method has a single parameter — and it's *not* called
    `MouseMotionEvent`! Instead, each mouse-motion event method uses a `MouseEvent`
    argument. See [The MouseEvent API](mouselistener.html#mouseevent) for information
    about using `MouseEvent` objects.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '每个鼠标移动事件方法都有一个参数 —— 并且*不*叫做 `MouseMotionEvent`！相反，每个鼠标移动事件方法使用一个 `MouseEvent`
    参数。有关使用 `MouseEvent` 对象的信息，请参阅[鼠标事件 API](mouselistener.html#mouseevent)。 '
- en: Examples That Use Mouse-Motion Listeners
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用鼠标移动监听器的示例
- en: The following table lists the examples that use mouse-motion listeners.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了使用鼠标移动监听器的示例。
- en: '| Example | Where Described | Notes |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 描述位置 | 备注 |'
- en: '| [`MouseMotionEventDemo`](../examples/events/index.html#MouseMotionEventDemo)
    | This section | Reports all mouse motion events that occur within a blank panel
    to demonstrate the circumstances under which mouse motion events are fired. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`MouseMotionEventDemo`](../examples/events/index.html#MouseMotionEventDemo)
    | 此部分 | 报告在空白面板内发生的所有鼠标移动事件，以展示触发鼠标移动事件的情况。 |'
- en: '| [`LayeredPaneDemo`](../examples/components/index.html#LayeredPaneDemo) and
    [`LayeredPaneDemo2`](../examples/components/index.html#LayeredPaneDemo2) | [How
    to Use Layered Panes](../components/layeredpane.html) | Moves an image of Duke
    around within a layered pane in response to mouse motion events. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`LayeredPaneDemo`](../examples/components/index.html#LayeredPaneDemo) 和
    [`LayeredPaneDemo2`](../examples/components/index.html#LayeredPaneDemo2) | [如何使用分层窗格](../components/layeredpane.html)
    | 在响应鼠标移动事件时，在分层窗格内移动杜克的图像。 |'
- en: '| [`SelectionDemo`](../examples/painting/index.html#SelectionDemo) |   | Lets
    the user drag a rectangle to select a portion of an image. Uses a subclass of
    `MouseInputAdapter` to listen to both mouse events and mouse-motion events. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`SelectionDemo`](../examples/painting/index.html#SelectionDemo) |   | 允许用户拖动矩形选择图像的一部分。使用MouseInputAdapter的子类监听鼠标事件和鼠标移动事件。
    |'
- en: '| [`GlassPaneDemo`](../examples/components/index.html#GlassPaneDemo) | [How
    to Use Root Panes](../components/rootpane.html) | Uses a subclass of `MouseInputAdapter`
    to listen to mouse events and mouse-motion events on the root pane''s glass pane.
    Redispatches the events to underlying components. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`GlassPaneDemo`](../examples/components/index.html#GlassPaneDemo) | [如何使用根窗格](../components/rootpane.html)
    | 使用MouseInputAdapter的子类监听根窗格的玻璃窗格上的鼠标事件和鼠标移动事件。重新分派事件给底层组件。 |'
- en: '| [`ScrollDemo`](../examples/components/index.html#ScrollDemo) | [How to Use
    Scroll Panes](../components/scrollpane.html) | The label subclass, ScrollablePicture,
    uses a mouse-motion listener to allow the user to scroll the picture even when
    the user drags the cursor outside the window. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`ScrollDemo`](../examples/components/index.html#ScrollDemo) | [如何使用滚动窗格](../components/scrollpane.html)
    | 标签子类ScrollablePicture使用鼠标移动监听器，允许用户在将光标拖出窗口时滚动图片。 |'
