- en: Detecting Text Boundaries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测文本边界
- en: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/boundaryintro.html](https://docs.oracle.com/javase/tutorial/i18n/text/boundaryintro.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/i18n/text/boundaryintro.html](https://docs.oracle.com/javase/tutorial/i18n/text/boundaryintro.html)
- en: 'Applications that manipulate text need to locate boundaries within the text.
    For example, consider some of the common functions of a word processor: highlighting
    a character, cutting a word, moving the cursor to the next sentence, and wrapping
    a word at a line ending. To perform each of these functions, the word processor
    must be able to detect the logical boundaries in the text. Fortunately you don''t
    have to write your own routines to perform boundary analysis. Instead, you can
    take advantage of the methods provided by the [`BreakIterator`](https://docs.oracle.com/javase/8/docs/api/java/text/BreakIterator.html)
    class.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 操纵文本的应用程序需要定位文本内的边界。例如，考虑一些文字处理器的常见功能：突出显示一个字符，剪切一个单词，将光标移动到下一个句子，以及在行尾换行一个单词。为了执行这些功能，文字处理器必须能够检测文本中的逻辑边界。幸运的是，您不必编写自己的例程来执行边界分析。相反，您可以利用[`BreakIterator`](https://docs.oracle.com/javase/8/docs/api/java/text/BreakIterator.html)类提供的方法。
- en: '[About the BreakIterator Class](about.html)'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[关于 BreakIterator 类](about.html)'
- en: This section discusses the instantiation methods and the imaginary cursor of
    the `BreakIterator` class.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了`BreakIterator`类的实例化方法和虚拟光标。
- en: '[Character Boundaries](char.html)'
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[字符边界](char.html)'
- en: In this section you'll learn about the difference between user and Unicode characters,
    and how to locate user characters with a `BreakIterator`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将了解用户字符和 Unicode 字符之间的区别，以及如何使用`BreakIterator`定位用户字符。
- en: '[Word Boundaries](word.html)'
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[词边界](word.html)'
- en: If your application needs to select or locate words within text, you'll find
    it helpful to use a `BreakIterator`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序需要在文本中选择或定位单词，使用`BreakIterator`会很有帮助。
- en: '[Sentence Boundaries](sentence.html)'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[句子边界](sentence.html)'
- en: Determining sentence boundaries can be problematic, because of the ambiguous
    use of sentence terminators in many written languages. This section examines some
    of the problems you may encounter, and how the `BreakIterator` deals with them.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 确定句子边界可能会有问题，因为许多书面语言中句子终止符的使用是模棱两可的。本节将讨论您可能遇到的一些问题，以及`BreakIterator`如何处理这些问题。
- en: '[Line Boundaries](line.html)'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[行边界](line.html)'
- en: This section describes how to locate potential line breaks in a text string
    with a `BreakIterator`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何使用`BreakIterator`在文本字符串中定位潜在的换行符。
