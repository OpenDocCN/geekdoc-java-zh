- en: 'Lesson: Generics (Updated)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Lesson: 泛型（更新）'
- en: 原文：[https://docs.oracle.com/javase/tutorial/java/generics/index.html](https://docs.oracle.com/javase/tutorial/java/generics/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/java/generics/index.html](https://docs.oracle.com/javase/tutorial/java/generics/index.html)
- en: In any nontrivial software project, bugs are simply a fact of life. Careful
    planning, programming, and testing can help reduce their pervasiveness, but somehow,
    somewhere, they'll always find a way to creep into your code. This becomes especially
    apparent as new features are introduced and your code base grows in size and complexity.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何非平凡的软件项目中，错误都是生活中不可避免的事实。仔细的规划、编程和测试可以帮助减少它们的普遍性，但不知何故，它们总会找到一种方式悄悄地潜入你的代码中。随着新功能的引入和代码库规模与复杂性的增长，这一点变得尤为明显。
- en: Fortunately, some bugs are easier to detect than others. Compile-time bugs,
    for example, can be detected early on; you can use the compiler's error messages
    to figure out what the problem is and fix it, right then and there. Runtime bugs,
    however, can be much more problematic; they don't always surface immediately,
    and when they do, it may be at a point in the program that is far removed from
    the actual cause of the problem.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有些错误比其他错误更容易检测。例如，编译时错误可以在早期被检测出来；你可以利用编译器的错误消息来找出问题所在并立即修复它。然而，运行时错误可能会更加棘手；它们并不总是立即显现，而且当它们出现时，可能是在程序中与问题实际原因相距甚远的地方。
- en: Generics add stability to your code by making more of your bugs detectable at
    compile time. After completing this lesson, you may want to follow up with the
    [Generics](../../extra/generics/index.html) tutorial by Gilad Bracha.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 泛型通过在编译时使更多的错误可检测，为你的代码增加了稳定性。完成本课程后，你可能想继续学习[Gilad Bracha](../../extra/generics/index.html)的《泛型》教程。
