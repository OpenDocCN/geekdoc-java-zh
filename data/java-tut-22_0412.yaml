- en: Bound Properties and Status Methods
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绑定属性和状态方法
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/concurrency/bound.html](https://docs.oracle.com/javase/tutorial/uiswing/concurrency/bound.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/concurrency/bound.html](https://docs.oracle.com/javase/tutorial/uiswing/concurrency/bound.html)
- en: '`SwingWorker` supports [bound properties](../../javabeans/writing/properties.html#bound),
    which are useful for communicating with other threads. Two bound properties are
    predefined: `progress` and `state`. As with all bound properties, `progress` and
    `state` can be used to trigger event-handling tasks on the event dispatch thread.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`SwingWorker`支持[绑定属性](../../javabeans/writing/properties.html#bound)，这对与其他线程通信非常有用。两个绑定属性已预定义：`progress`和`state`。与所有绑定属性一样，`progress`和`state`可用于在事件分发线程上触发事件处理任务。'
- en: By implementing a property change listener, a program can track changes to `progress`,
    `state`, and other bound properties. For more information, refer to [How to Write
    a Property Change Listener](../events/propertychangelistener.html) in [Writing
    Event Listeners](../events/index.html).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实现属性更改监听器，程序可以跟踪`progress`、`state`和其他绑定属性的更改。有关更多信息，请参阅[如何编写属性更改监听器](../events/propertychangelistener.html)中的[编写事件监听器](../events/index.html)。
- en: The `progress` Bound Variable
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`progress`绑定变量'
- en: The `progress` bound variable is an `int` value that can range from 0 to 100\.
    It has a predefined setter method (the protected [`SwingWorker.setProgress`](https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingWorker.html#setProgress--))
    and a predefined getter method (the public [`SwingWorker.getProgress`](https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingWorker.html#getProgress-int-)).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`progress`绑定变量是一个`int`值，范围从0到100。它有一个预定义的设置方法（受保护的[`SwingWorker.setProgress`](https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingWorker.html#setProgress--)）和一个预定义的获取方法（公共[`SwingWorker.getProgress`](https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingWorker.html#getProgress-int-)）。'
- en: The [``ProgressBarDemo``](../examples/components/ProgressBarDemoProject/src/components/ProgressBarDemo.java)
    example uses `progress` to update a `ProgressBar` control from a background task.
    For a detailed discussion of this example, refer to [How to Use Progress Bars](../components/progress.html)
    in [Using Swing Components](../components/index.html).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[``ProgressBarDemo``](../examples/components/ProgressBarDemoProject/src/components/ProgressBarDemo.java)示例使用`progress`从后台任务更新`ProgressBar`控件。有关此示例的详细讨论，请参阅[如何使用进度条](../components/progress.html)中的[使用Swing组件](../components/index.html)。'
- en: The `state` Bound Variable
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`state`绑定变量'
- en: 'The `state` bound variable indicates where the `SwingWorker` object is in its
    life cycle. The bound variable contains an enumeration value of type `SwingWorker.StateValue`.
    Possible values are:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`state`绑定变量指示`SwingWorker`对象在其生命周期中的位置。绑定变量包含`SwingWorker.StateValue`类型的枚举值。可能的值包括：'
- en: '`PENDING`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`PENDING`'
- en: The state during the period from the construction of the object until just before
    `doInBackground` is invoked.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 从对象构造到`doInBackground`调用之前的状态。
- en: '`STARTED`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`STARTED`'
- en: The state during the period from shortly before `doInBackground` is invoked
    until shortly before `done` is invoked.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从`doInBackground`调用之前的短暂时期到`done`调用之前的状态。
- en: DONE
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: DONE
- en: The state for the remainder of the existence of the object.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对象存在期间的状态。
- en: The current value of the `state` bound variable is returned by [`SwingWorker.getState`](https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingWorker.html#getState--).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SwingWorker.getState`](https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingWorker.html#getState--)返回`state`绑定变量的当前值。'
- en: Status Methods
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 状态方法
- en: Two methods, part of the `Future` interface, also report on the status of the
    background task. As we saw in [Canceling Background Tasks](cancel.html), `isCancelled`
    returns `true` if the task has been canceled. In addition, `isDone` returns `true`
    if the task has finished, either normally, or by being cancelled.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 作为`Future`接口的一部分，还有两个方法报告后台任务的状态。正如我们在[取消后台任务](cancel.html)中看到的，如果任务已取消，`isCancelled`返回`true`。此外，如果任务已完成（无论是正常完成还是被取消），`isDone`返回`true`。
