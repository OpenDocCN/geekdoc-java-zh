- en: Inner Class Example
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内部类示例
- en: 原文：[https://docs.oracle.com/javase/tutorial/java/javaOO/innerclasses.html](https://docs.oracle.com/javase/tutorial/java/javaOO/innerclasses.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/java/javaOO/innerclasses.html](https://docs.oracle.com/javase/tutorial/java/javaOO/innerclasses.html)
- en: To see an inner class in use, first consider an array. In the following example,
    you create an array, fill it with integer values, and then output only values
    of even indices of the array in ascending order.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看内部类的使用，请首先考虑一个数组。在以下示例中，您创建一个数组，填充它的整数值，然后仅按升序输出数组的偶数索引值。
- en: 'The [`DataStructure.java`](examples/DataStructure.java) example that follows
    consists of:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的[`DataStructure.java`](examples/DataStructure.java)示例包括：
- en: The `DataStructure` outer class, which includes a constructor to create an instance
    of `DataStructure` containing an array filled with consecutive integer values
    (0, 1, 2, 3, and so on) and a method that prints elements of the array that have
    an even index value.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含构造函数以创建包含连续整数值（0、1、2、3等）的数组的实例的`DataStructure`外部类，并且包含一个打印具有偶数索引值的数组元素的方法。
- en: The `EvenIterator` inner class, which implements the `DataStructureIterator`
    interface, which extends the [`Iterator`](https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html)`<`
    [`Integer`](https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html)`>`
    interface. Iterators are used to step through a data structure and typically have
    methods to test for the last element, retrieve the current element, and move to
    the next element.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EvenIterator`内部类，实现了`DataStructureIterator`接口，该接口扩展了[`Iterator`](https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html)`<`[`Integer`](https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html)`>`接口。迭代器用于遍历数据结构，通常具有用于测试最后一个元素、检索当前元素和移动到下一个元素的方法。'
- en: A `main` method that instantiates a `DataStructure` object (`ds`), then invokes
    the `printEven` method to print elements of the array `arrayOfInts` that have
    an even index value.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`main`方法，实例化一个`DataStructure`对象（`ds`），然后调用`printEven`方法来打印具有偶数索引值的数组`arrayOfInts`的元素。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output is:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 输出为：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that the `EvenIterator` class refers directly to the `arrayOfInts` instance
    variable of the `DataStructure` object.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`EvenIterator`类直接引用了`DataStructure`对象的`arrayOfInts`实例变量。
- en: You can use inner classes to implement helper classes such as the one shown
    in the this example. To handle user interface events, you must know how to use
    inner classes, because the event-handling mechanism makes extensive use of them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用内部类来实现辅助类，例如在此示例中所示的类。要处理用户界面事件，您必须知道如何使用内部类，因为事件处理机制广泛使用它们。
- en: Local and Anonymous Classes
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 局部类和匿名类
- en: There are two additional types of inner classes. You can declare an inner class
    within the body of a method. These classes are known as [local classes](localclasses.html).
    You can also declare an inner class within the body of a method without naming
    the class. These classes are known as [anonymous classes](anonymousclasses.html).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种额外的内部类。您可以在方法体内声明一个内部类。这些类被称为[局部类](localclasses.html)。您还可以在方法体内声明一个没有命名的内部类。这些类被称为[匿名类](anonymousclasses.html)。
- en: Modifiers
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修饰符
- en: You can use the same modifiers for inner classes that you use for other members
    of the outer class. For example, you can use the access specifiers `private`,
    `public`, and `protected` to restrict access to inner classes, just as you use
    them to restrict access do to other class members.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为内部类使用与外部类的其他成员相同的修饰符。例如，您可以使用访问修饰符`private`、`public`和`protected`来限制对内部类的访问，就像您用它们来限制对其他类成员的访问一样。
