- en: The SimpleThreads Example
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单线程示例
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/simple.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/simple.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/simple.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/simple.html)
- en: The following example brings together some of the concepts of this section.
    [`SimpleThreads`](examples/SimpleThreads.java) consists of two threads. The first
    is the main thread that every Java application has. The main thread creates a
    new thread from the `Runnable` object, `MessageLoop`, and waits for it to finish.
    If the `MessageLoop` thread takes too long to finish, the main thread interrupts
    it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例汇集了本节中的一些概念。[`SimpleThreads`](examples/SimpleThreads.java) 包含两个线程。第一个是每个Java应用程序都有的主线程。主线程从
    `Runnable` 对象 `MessageLoop` 创建一个新线程，并等待其完成。如果 `MessageLoop` 线程花费太长时间才能完成，主线程会中断它。
- en: The `MessageLoop` thread prints out a series of messages. If interrupted before
    it has printed all its messages, the `MessageLoop` thread prints a message and
    exits.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`MessageLoop` 线程会打印一系列消息。如果在打印完所有消息之前被中断，`MessageLoop` 线程会打印一条消息然后退出。'
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
