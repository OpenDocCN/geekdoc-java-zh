- en: 'Trail: The Reflection API'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 路径：反射 API
- en: 原文：[https://docs.oracle.com/javase/tutorial/reflect/index.html](https://docs.oracle.com/javase/tutorial/reflect/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/reflect/index.html](https://docs.oracle.com/javase/tutorial/reflect/index.html)
- en: Uses of Reflection
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 反射的用途
- en: Reflection is commonly used by programs which require the ability to examine
    or modify the runtime behavior of applications running in the Java virtual machine.
    This is a relatively advanced feature and should be used only by developers who
    have a strong grasp of the fundamentals of the language. With that caveat in mind,
    reflection is a powerful technique and can enable applications to perform operations
    which would otherwise be impossible.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 反射通常被需要能够检查或修改在 Java 虚拟机中运行的应用程序的运行时行为的程序所使用。这是一个相对高级的特性，应该只由对语言基础知识有很好掌握的开发人员使用。在这种情况下，反射是一种强大的技术，可以使应用程序执行原本不可能的操作。
- en: Extensibility Features
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 可扩展性特性
- en: An application may make use of external, user-defined classes by creating instances
    of extensibility objects using their fully-qualified names.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序可以通过使用完全限定名称创建可扩展性对象的实例来利用外部、用户定义的类。
- en: Class Browsers and Visual Development Environments
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 类浏览器和可视化开发环境
- en: A class browser needs to be able to enumerate the members of classes. Visual
    development environments can benefit from making use of type information available
    in reflection to aid the developer in writing correct code.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 类浏览器需要能够枚举类的成员。可视化开发环境可以从反射中可用的类型信息中受益，帮助开发人员编写正确的代码。
- en: Debuggers and Test Tools
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 调试器和测试工具
- en: Debuggers need to be able to examine private members on classes. Test harnesses
    can make use of reflection to systematically call a discoverable set APIs defined
    on a class, to insure a high level of code coverage in a test suite.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 调试器需要能够检查类的私有成员。测试工具可以利用反射系统地调用类中定义的可发现的一组 API，以确保测试套件中的代码覆盖率较高。
- en: Drawbacks of Reflection
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 反射的缺点
- en: Reflection is powerful, but should not be used indiscriminately. If it is possible
    to perform an operation without using reflection, then it is preferable to avoid
    using it. The following concerns should be kept in mind when accessing code via
    reflection.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 反射很强大，但不应该被滥用。如果可以在不使用反射的情况下执行操作，则最好避免使用它。在通过反射访问代码时应牢记以下问题。
- en: Performance Overhead
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 性能开销
- en: Because reflection involves types that are dynamically resolved, certain Java
    virtual machine optimizations can not be performed. Consequently, reflective operations
    have slower performance than their non-reflective counterparts, and should be
    avoided in sections of code which are called frequently in performance-sensitive
    applications.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因为反射涉及动态解析的类型，某些 Java 虚拟机优化无法执行。因此，反射操作比非反射操作性能较慢，并且应该避免在性能敏感应用程序中频繁调用的代码段中使用。
- en: Security Restrictions
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 安全限制
- en: Reflection requires a runtime permission which may not be present when running
    under a security manager. This is in an important consideration for code which
    has to run in a restricted security context, such as in an Applet.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 反射需要运行时权限，当在安全管理器下运行时可能不存在。这是一个重要的考虑因素，对于必须在受限制的安全上下文中运行的代码，比如在 Applet 中。
- en: Exposure of Internals
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 内部信息的暴露
- en: Since reflection allows code to perform operations that would be illegal in
    non-reflective code, such as accessing `private` fields and methods, the use of
    reflection can result in unexpected side-effects, which may render code dysfunctional
    and may destroy portability. Reflective code breaks abstractions and therefore
    may change behavior with upgrades of the platform.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 由于反射允许代码执行在非反射代码中非法的操作，比如访问`private`字段和方法，使用反射可能导致意想不到的副作用，可能使代码失效并破坏可移植性。反射代码打破了抽象，因此可能会随着平台升级而改变行为。
- en: Trail Lessons
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 路径课程
- en: This trail covers common uses of reflection for accessing and manipulating classes,
    fields, methods, and constructors. Each lesson contains code examples, tips, and
    troubleshooting information.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本路径涵盖了通过反射访问和操作类、字段、方法和构造函数的常见用法。每个课程包含代码示例、提示和故障排除信息。
- en: '[![trail icon](../Images/0979d5472fbcdfccbc278a3a62946f2f.png) **Classes**](class/index.html)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[![路径图标](../Images/0979d5472fbcdfccbc278a3a62946f2f.png) **类**](class/index.html)'
- en: This lesson shows the various ways to obtain a [`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)
    object and use it to examine properties of a class, including its declaration
    and contents.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程展示了获取[`Class`](https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html)对象的各种方法，并使用它来检查类的属性，包括其声明和内容。
- en: '[![trail icon](../Images/0979d5472fbcdfccbc278a3a62946f2f.png) **Members**](member/index.html)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[![trail icon](../Images/0979d5472fbcdfccbc278a3a62946f2f.png) **成员**](member/index.html)'
- en: This lesson describes how to use the Reflection APIs to find the fields, methods,
    and constructors of a class. Examples are provided for setting and getting field
    values, invoking methods, and creating new instances of objects using specific
    constructors.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程描述了如何使用 Reflection API 查找类的字段、方法和构造函数。提供了设置和获取字段值、调用方法以及使用特定构造函数创建对象实例的示例。
- en: '[![trail icon](../Images/0979d5472fbcdfccbc278a3a62946f2f.png) **Arrays and
    Enumerated Types**](special/index.html)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[![trail icon](../Images/0979d5472fbcdfccbc278a3a62946f2f.png) **数组和枚举类型**](special/index.html)'
- en: 'This lesson introduces two special types of classes: arrays, which are generated
    at runtime, and `enum` types, which define unique named object instances. Sample
    code shows how to retrieve the component type for an array and how to set and
    get fields with array or `enum` types.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这节课介绍了两种特殊类型的类：在运行时生成的数组和定义唯一命名对象实例的`enum`类型。示例代码展示了如何检索数组的组件类型以及如何使用数组或`enum`类型设置和获取字段。
- en: '* * *'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**'
- en: The examples in this trail are designed for experimenting with the Reflection
    APIs. The handling of exceptions therefore is not the same as would be used in
    production code. In particular, in production code it is not recommended to dump
    stack traces that are visible to the user.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中的示例旨在用于实验 Reflection API。因此，异常处理与在生产代码中使用的方式不同。特别是，在生产代码中，不建议将对用户可见的堆栈跟踪信息输出。
- en: '* * *'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
