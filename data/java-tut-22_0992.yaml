- en: Basic Search
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本搜索
- en: 原文：[https://docs.oracle.com/javase/tutorial/jndi/ops/basicsearch.html](https://docs.oracle.com/javase/tutorial/jndi/ops/basicsearch.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/jndi/ops/basicsearch.html](https://docs.oracle.com/javase/tutorial/jndi/ops/basicsearch.html)
- en: The simplest form of search requires that you specify the set of attributes
    that an entry must have and the name of the target context in which to perform
    the search.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的搜索形式要求您指定条目必须具有的属性集，以及执行搜索的目标上下文的名称。
- en: The following code creates an attribute set `matchAttrs`, which has two attributes
    `"sn"` and `"mail"`. It specifies that the qualifying entries must have a surname
    (`"sn"`) attribute with a value of `"Geisel"` and a `"mail"` attribute with any
    value. It then invokes [`DirContext.search()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/directory/DirContext.html#search-javax.naming.Name-javax.naming.directory.Attributes-)
    to search the context `"ou=People"` for entries that have the attributes specified
    by `matchAttrs`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码创建了一个属性集`matchAttrs`，其中包含两个属性`"sn"`和`"mail"`。 它指定符合条件的条目必须具有一个姓氏（`"sn"`）属性，其值为`"Geisel"`，以及一个任何值的`"mail"`属性。
    然后调用[`DirContext.search()`](https://docs.oracle.com/javase/8/docs/api/javax/naming/directory/DirContext.html#search-javax.naming.Name-javax.naming.directory.Attributes-)在上下文`"ou=People"`中搜索具有`matchAttrs`指定属性的条目。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can then print the results as follows.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照以下方式打印结果。
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`printAttrs()`is similar to the code in the `getAttributes()` example that
    prints an attribute set.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`printAttrs()`类似于`getAttributes()`示例中打印属性集的代码。'
- en: Running [`this example`](examples/SearchRetAll.java) produces the following
    result.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 运行[`这个例子`](examples/SearchRetAll.java)会产生以下结果。
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Returning Selected Attributes
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 返回选定的属性
- en: The previous example returned all attributes associated with the entries that
    satisfy the specified query. You can select the attributes to return by passing
    `search()` an array of attribute identifiers that you want to include in the result.
    After creating the `matchAttrs` as shown previously, you also need to create the
    array of attribute identifiers, as shown next.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的例子返回满足指定查询条件的条目关联的所有属性。 您可以通过向`search()`传递要包含在结果中的属性标识符数组来选择要返回的属性。 在之前显示的创建`matchAttrs`之后，您还需要创建属性标识符数组，如下所示。
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[`This example`](examples/Search.java) returns the attributes `"sn"`, `"telephonenumber"`,
    `"golfhandicap"`, and `"mail"` of entries that have an attribute `"mail"` and
    have a `"sn"` attribute with the value `"Geisel"`. This example produces the following
    result. (The entry does not have a `"golfhandicap"` attribute, so it is not returned.)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[`这个例子`](examples/Search.java)返回具有属性`"sn"`、`"telephonenumber"`、`"golfhandicap"`和`"mail"`的条目，这些条目具有一个属性`"mail"`，并且具有一个值为`"Geisel"`的`"sn"`属性。
    这个例子产生以下结果。（该条目没有`"golfhandicap"`属性，因此不返回。）'
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
