- en: Printing a Multiple Page Document
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印多页文档
- en: 原文：[https://docs.oracle.com/javase/tutorial/2d/printing/set.html](https://docs.oracle.com/javase/tutorial/2d/printing/set.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/2d/printing/set.html](https://docs.oracle.com/javase/tutorial/2d/printing/set.html)
- en: You have already learned how to use the [`Printable`](https://docs.oracle.com/javase/8/docs/api/java/awt/print/Printable.html)
    interface to print a single page document. However, documents are usually more
    than one physical page in length. *Pagination* is the process of identifying the
    location in a document where page breaks and printing accordingly.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经学会了如何使用[`Printable`](https://docs.oracle.com/javase/8/docs/api/java/awt/print/Printable.html)接口打印单页文档。但是，文档通常不止一页。*分页*是识别文档中分页位置并相应打印的过程。
- en: 'In case of printing several graphics images, one per page, use the page index
    to iterate through these pages and print one on each page. For example, if several
    images are represented in the following array:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要打印多个图形图像，每页一个，使用页面索引来遍历这些页面，并在每页上打印一个。例如，如果几个图像在以下数组中表示：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'then use the `print()` method as shown in the following code fragment:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用以下代码片段中显示的`print()`方法：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the document is continuous, the application must calculate how much content
    can fit on each page, and break the page at that point. If text document consists
    of many lines, then an application must calculate how many of these lines can
    fit entirely on a page. The [`Point`](https://docs.oracle.com/javase/8/docs/api/java/awt/Point.html)
    class creates a point representing a location in (x,y)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文档是连续的，应用程序必须计算每页可以容纳多少内容，并在该点分页。如果文本文档由许多行组成，则应用程序必须计算这些行中有多少可以完全适合一页。[`Point`](https://docs.oracle.com/javase/8/docs/api/java/awt/Point.html)类创建一个表示位置的点(x,y)
- en: To calculate the height of a single line of text, use the [`FontMetrics`](https://docs.oracle.com/javase/8/docs/api/java/awt/FontMetrics.html)
    class.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算单行文本的高度，请使用[`FontMetrics`](https://docs.oracle.com/javase/8/docs/api/java/awt/FontMetrics.html)类。
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `PageFormat` parameter describes the printable area of the page. In particular,
    to find the vertical span of the page use the following code fragment:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`PageFormat`参数描述了页面的可打印区域。特别是，要找到页面的垂直跨度，请使用以下代码片段：'
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Use the following code fragment to calculate the number of lines that fit on
    a page and the number of page breaks:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码片段计算一页上适合的行数和分页数：
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Use the `print()` method to calculate the printable area for the following
    reasons:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`print()`方法计算以下原因的可打印区域：
- en: Text measurement depends on the `FontRenderContext` and this is implicit in
    the `FontMetrics` object returned by the printer graphics which is not available
    except inside the `print()` method.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本测量取决于`FontRenderContext`，这在打印机图形返回的`FontMetrics`对象中是隐含的，除了在`print()`方法内部不可用。
- en: The page format may not be disclosured until printing occurs. Since if the user
    selected a landscape mode in the print dialog, then this setting needs to be accounted
    for. The `PageFormat` object passed into the `print()` method provides this information.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直到打印发生，页面格式可能不会被揭示。因为如果用户在打印对话框中选择了横向模式，则需要考虑此设置。传递给`print()`方法的`PageFormat`对象提供了此信息。
- en: 'The page break positions are used as represented in the following code fragment:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 分页位置如下代码片段所示：
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If a document contains 100 lines and only 48 lines fit on a page, then an application
    prints 3 pages with page breaks after 48 and 96 lines of text. The remaining 4
    lines are printed on the last page. The complete code for this example is in [`PaginationExample.java`](examples/PaginationExample.java).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个文档包含100行，每页只能容纳48行，则应用程序将打印3页，每页在第48行和第96行之后分页。剩余的4行将打印在最后一页上。此示例的完整代码在[`PaginationExample.java`](examples/PaginationExample.java)中。
- en: 'The following simplifying factors are used in the `PaginationExample` code:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`PaginationExample`代码中使用了以下简化因素：'
- en: Each page has the same height.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每页具有相同的高度。
- en: The same font is used.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用相同的字体。
