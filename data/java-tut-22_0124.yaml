- en: Wildcards
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通配符
- en: 原文：[https://docs.oracle.com/javase/tutorial/java/generics/wildcards.html](https://docs.oracle.com/javase/tutorial/java/generics/wildcards.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/java/generics/wildcards.html](https://docs.oracle.com/javase/tutorial/java/generics/wildcards.html)
- en: 'In generic code, the question mark (`?`), called the *wildcard*, represents
    an unknown type. The wildcard can be used in a variety of situations: as the type
    of a parameter, field, or local variable; sometimes as a return type (though it
    is better programming practice to be more specific). The wildcard is never used
    as a type argument for a generic method invocation, a generic class instance creation,
    or a supertype.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在泛型代码中，问号（`?`），称为*通配符*，表示未知类型。 通配符可以在各种情况下使用：作为参数、字段或局部变量的类型；有时作为返回类型（尽管更具体的编程实践更好）。
    通配符永远不会用作泛型方法调用、泛型类实例创建或超类型的类型参数。
- en: The following sections discuss wildcards in more detail, including upper bounded
    wildcards, lower bounded wildcards, and wildcard capture.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将更详细地讨论通配符，包括上界通配符、下界通配符和通配符捕获。
