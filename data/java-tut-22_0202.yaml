- en: Joins
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/join.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/join.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/concurrency/join.html](https://docs.oracle.com/javase/tutorial/essential/concurrency/join.html)
- en: The `join` method allows one thread to wait for the completion of another. If
    `t` is a `Thread` object whose thread is currently executing,
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`join`方法允许一个线程等待另一个线程的完成。如果`t`是一个当前正在执行的线程的`Thread`对象，'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: causes the current thread to pause execution until `t`'s thread terminates.
    Overloads of `join` allow the programmer to specify a waiting period. However,
    as with `sleep`, `join` is dependent on the OS for timing, so you should not assume
    that `join` will wait exactly as long as you specify.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 会导致当前线程暂停执行，直到`t`的线程终止。`join`的重载允许程序员指定等待时间。然而，与`sleep`一样，`join`依赖于操作系统的时间控制，因此你不应该假设`join`会等待与你指定的时间完全相同。
- en: Like `sleep`, `join` responds to an interrupt by exiting with an `InterruptedException`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 像`sleep`一样，`join`在收到`InterruptedException`时会退出。
