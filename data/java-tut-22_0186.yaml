- en: Random Access Files
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机访问文件
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/rafs.html](https://docs.oracle.com/javase/tutorial/essential/io/rafs.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/rafs.html](https://docs.oracle.com/javase/tutorial/essential/io/rafs.html)
- en: '*Random access files* permit nonsequential, or random, access to a file''s
    contents. To access a file randomly, you open the file, seek a particular location,
    and read from or write to that file.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*随机访问文件*允许对文件内容进行非顺序或随机访问。要随机访问文件，您需要打开文件，寻找特定位置，并从该位置读取或写入文件。'
- en: 'This functionality is possible with the [`SeekableByteChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html)
    interface. The `SeekableByteChannel` interface extends channel I/O with the notion
    of a current position. Methods enable you to set or query the position, and you
    can then read the data from, or write the data to, that location. The API consists
    of a few, easy to use, methods:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这种功能是通过[`SeekableByteChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html)接口实现的。`SeekableByteChannel`接口扩展了通道
    I/O 的概念，具有当前位置的概念。方法使您能够设置或查询位置，然后可以从该位置读取数据或将数据写入该位置。API由一些易于使用的方法组成：
- en: '[`position`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#position--)
    – Returns the channel''s current position'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`position`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#position--)
    – 返回通道的当前位置'
- en: '[`position(long)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#position-long-)
    – Sets the channel''s position'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`position(long)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#position-long-)
    – 设置通道的位置'
- en: '[`read(ByteBuffer)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#read-java.nio.ByteBuffer-)
    – Reads bytes into the buffer from the channel'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read(ByteBuffer)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#read-java.nio.ByteBuffer-)
    – 从通道读取字节到缓冲区'
- en: '[`write(ByteBuffer)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#write-java.nio.ByteBuffer-)
    – Writes bytes from the buffer to the channel'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`write(ByteBuffer)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#write-java.nio.ByteBuffer-)
    – 将缓冲区中的字节写入通道'
- en: '[`truncate(long)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#truncate-long-)
    – Truncates the file (or other entity) connected to the channel'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`truncate(long)`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html#truncate-long-)
    – 截断与通道连接的文件（或其他实体）'
- en: '[Reading and Writing Files With Channel I/O](file.html#channelio) shows that
    the `Path.newByteChannel` methods return an instance of a `SeekableByteChannel`.
    On the default file system, you can use that channel as is, or you can cast it
    to a [`FileChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/FileChannel.html)
    giving you access to more advanced features, such as mapping a region of the file
    directly into memory for faster access, locking a region of the file, or reading
    and writing bytes from an absolute location without affecting the channel''s current
    position.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用通道 I/O 读写文件](file.html#channelio) 显示`Path.newByteChannel`方法返回`SeekableByteChannel`的实例。在默认文件系统上，您可以直接使用该通道，或者将其转换为[`FileChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/FileChannel.html)，从而可以访问更高级的功能，例如将文件的某个区域直接映射到内存以实现更快的访问，锁定文件的某个区域，或者从绝对位置读取和写入字节而不影响通道的当前位置。'
- en: The following code snippet opens a file for both reading and writing by using
    one of the `newByteChannel` methods. The `SeekableByteChannel` that is returned
    is cast to a `FileChannel`. Then, 12 bytes are read from the beginning of the
    file, and the string "I was here!" is written at that location. The current position
    in the file is moved to the end, and the 12 bytes from the beginning are appended.
    Finally, the string, "I was here!" is appended, and the channel on the file is
    closed.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段通过使用`newByteChannel`方法打开文件进行读写。返回的`SeekableByteChannel`被转换为`FileChannel`。然后，从文件开头读取12个字节，并在该位置写入字符串"I
    was here!"。文件中的当前位置移动到末尾，并将开头的12个字节追加。最后，追加字符串"I was here!"，并关闭文件上的通道。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
