- en: Monitoring and Management of the Java Virtual Machine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控和管理Java虚拟机
- en: 原文：[https://docs.oracle.com/javase/tutorial/jmx/overview/javavm.html](https://docs.oracle.com/javase/tutorial/jmx/overview/javavm.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/jmx/overview/javavm.html](https://docs.oracle.com/javase/tutorial/jmx/overview/javavm.html)
- en: The JMX technology can also be used to monitor and manage the Java virtual machine
    (Java VM).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: JMX技术也可以用于监控和管理Java虚拟机（Java VM）。
- en: The Java VM has built-in instrumentation that enables you to monitor and manage
    it by using the JMX technology. These built-in management utilities are often
    referred to as *out-of-the-box* management tools for the Java VM. To monitor and
    manage different aspects of the Java VM, the Java VM includes a platform MBean
    server and special MXBeans for use by management applications that conform to
    the JMX specification.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Java VM具有内置的仪器，使您可以使用JMX技术监控和管理它。这些内置的管理实用程序通常被称为Java VM的*开箱即用*管理工具。为了监控和管理Java
    VM的不同方面，Java VM包括一个平台MBean服务器和专门的MXBeans，供符合JMX规范的管理应用程序使用。
- en: Platform MXBeans and the Platform MBean Server
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平台MXBeans和平台MBean服务器
- en: The *platform MXBeans* are a set of MXBeans that is provided with the Java SE
    platform for monitoring and managing the Java VM and other components of the Java
    Runtime Environment (JRE). Each platform MXBean encapsulates a part of Java VM
    functionality, such as the class-loading system, just-in-time (JIT) compilation
    system, garbage collector, and so on. These MXBeans can be displayed and interacted
    with by using a monitoring and management tool that complies with the JMX specification,
    to enable you to monitor and manage these different VM functionalities. One such
    monitoring and management tool is the Java SE platform's JConsole graphical user
    interface (GUI).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*平台MXBeans*是Java SE平台提供的一组MXBeans，用于监控和管理Java VM和Java运行时环境（JRE）的其他组件。每个平台MXBean封装了Java
    VM功能的一部分，例如类加载系统、即时（JIT）编译系统、垃圾收集器等。这些MXBeans可以通过符合JMX规范的监控和管理工具显示和交互，以便您监控和管理这些不同的VM功能。其中一种监控和管理工具是Java
    SE平台的JConsole图形用户界面（GUI）。'
- en: The Java SE platform provides a standard *platform MBean server* in which these
    platform MXBeans are registered. The platform MBean server can also register any
    other MBeans you wish to create.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Java SE平台提供了一个标准的*平台MBean服务器*，其中注册了这些平台MXBeans。平台MBean服务器还可以注册您希望创建的任何其他MBeans。
- en: JConsole
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JConsole
- en: The Java SE platform includes the JConsole monitoring and management tool, which
    complies with the JMX specification. JConsole uses the extensive instrumentation
    of the Java VM (the platform MXBeans) to provide information about the performance
    and resource consumption of applications that are running on the Java platform.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Java SE平台包括符合JMX规范的JConsole监控和管理工具。JConsole使用Java VM的广泛仪器（平台MXBeans）提供关于在Java平台上运行的应用程序的性能和资源消耗的信息。
- en: Out-of-the-Box Management in Action
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开箱即用的管理实用程序在操作中
- en: Because standard monitoring and management utilities that implement the JMX
    technology are built into the Java SE platform, you can see the out-of-the-box
    JMX technology in action without having to write a single line of JMX API code.
    You can do so by launching a Java application and then monitoring it by using
    JConsole.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 因为标准的实现JMX技术的监控和管理实用程序内置于Java SE平台中，您可以在不编写一行JMX API代码的情况下看到开箱即用的JMX技术在操作中。您可以通过启动Java应用程序，然后使用JConsole监控它来实现。
- en: Monitoring an Application by Using JConsole
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用JConsole监控应用程序
- en: This procedure shows how to monitor the Notepad Java application. Under releases
    of the Java SE platform prior to version 6, applications that you want to monitor
    with JConsole need to be started with the following option.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本过程展示了如何监控记事本Java应用程序。在Java SE平台版本6之前的版本中，您需要使用以下选项启动要使用JConsole监控的应用程序。
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: However, the version of JConsole provided with the Java SE 6 platform can attach
    to any local application that supports the Attach API. In other words, any application
    that is started in the Java SE 6 HotSpot VM is detected automatically by JConsole,
    and does not need to be started using the above command-line option.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Java SE 6平台提供的JConsole版本可以连接到支持Attach API的任何本地应用程序。换句话说，任何在Java SE 6 HotSpot
    VM中启动的应用程序都会被JConsole自动检测到，不需要使用上述命令行选项启动。
- en: 'Start the Notepad Java application, by using the following command in a terminal
    window:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动记事本Java应用程序，使用以下命令在终端窗口中：
- en: '[PRE1]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Where `jdk_home` is the directory in which the Java Development Kit (JDK) is
    installed. If you are not running version 6 of the Java SE platform, you will
    need to use the following command:'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 其中`jdk_home`是安装Java开发工具包（JDK）的目录。如果您没有运行Java SE平台的6版本，您将需要使用以下命令：
- en: '[PRE2]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once Notepad has opened, in a different terminal window, start JConsole by
    using the following command:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦Notepad打开，在另一个终端窗口中，使用以下命令启动JConsole：
- en: '[PRE3]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: A New Connection dialog box is displayed.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 会显示一个新的连接对话框。
- en: In the New Connection dialog box, select `Notepad.jar` from the Local Process
    list, and click the Connect button.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新连接对话框中，从本地进程列表中选择`Notepad.jar`，然后点击连接按钮。
- en: JConsole opens and connects itself to the `Notepad.jar` process. When JConsole
    opens, you are presented with an overview of monitoring and management information
    related to Notepad. For example, you can view the amount of heap memory the application
    is consuming, the number of threads the application is currently running, and
    how much central processing unit (CPU) capacity the application is consuming.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: JConsole会打开并连接到`Notepad.jar`进程。当JConsole打开时，您将看到与Notepad相关的监控和管理信息概览。例如，您可以查看应用程序消耗的堆内存量，应用程序当前运行的线程数，以及应用程序消耗的中央处理单元（CPU）容量。
- en: Click the different JConsole tabs.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击不同的JConsole选项卡。
- en: Each tab presents more detailed information about the different areas of functionality
    of the Java VM in which Notepad is running. All the information presented is obtained
    from the various JMX technology MXBeans mentioned in this trail. All the platform
    MXBeans can be displayed in the MBeans tab. The MBeans tab is examined in the
    next section of this trail.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个选项卡提供了关于Notepad运行的Java虚拟机不同功能区域的更详细信息。所有呈现的信息都是从本教程中提到的各种JMX技术MXBeans获取的。所有平台MXBeans都可以在MBeans选项卡中显示。MBeans选项卡将在本教程的下一部分中进行讨论。
- en: To close JConsole, select Connection -> Exit.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要关闭JConsole，选择连接 -> 退出。
