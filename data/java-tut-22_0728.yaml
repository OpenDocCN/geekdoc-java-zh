- en: Using WebRowSet Objects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 WebRowSet 对象
- en: 原文：[https://docs.oracle.com/javase/tutorial/jdbc/basics/webrowset.html](https://docs.oracle.com/javase/tutorial/jdbc/basics/webrowset.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://docs.oracle.com/javase/tutorial/jdbc/basics/webrowset.html](https://docs.oracle.com/javase/tutorial/jdbc/basics/webrowset.html)'
- en: A `WebRowSet` object is very special because in addition to offering all of
    the capabilities of a `CachedRowSet` object, it can write itself as an XML document
    and can also read that XML document to convert itself back to a `WebRowSet` object.
    Because XML is the language through which disparate enterprises can communicate
    with each other, it has become the standard for Web Services communication. As
    a consequence, a `WebRowSet` object fills a real need by enabling Web Services
    to send and receive data from a database in the form of an XML document.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`WebRowSet`对象非常特殊，因为除了提供`CachedRowSet`对象的所有功能外，它还可以将自身写入为 XML 文档，并且还可以读取该 XML
    文档以将自身转换回`WebRowSet`对象。由于 XML 是异构企业之间可以相互通信的语言，因此它已成为 Web 服务通信的标准。因此，`WebRowSet`对象通过使
    Web 服务能够以 XML 文档的形式从数据库发送和接收数据来填补了一个真正的需求。'
- en: 'The following topics are covered:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 下面涵盖了以下主题：
- en: '[Creating and Populating WebRowSet Objects](#creating-and-populating-webrowset-object)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建和填充 WebRowSet 对象](#creating-and-populating-webrowset-object)'
- en: '[Writing and Reading WebRowSet Objects to XML](#writing-and-reading-webrowset-object-to-xml)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 WebRowSet 对象写入和读取为 XML](#writing-and-reading-webrowset-object-to-xml)'
- en: '[What Is in XML Documents](#what-is-in-xml-document)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[XML 文档中的内容是什么](#what-is-in-xml-document)'
- en: '[Making Changes to WebRowSet Objects](#making-changes-to-webrowset-object)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[对 WebRowSet 对象进行更改](#making-changes-to-webrowset-object)'
- en: The Coffee Break company has expanded to selling coffee online. Users order
    coffee by the pound from the Coffee Break Web site. The price list is regularly
    updated by getting the latest information from the company's database. This section
    demonstrates how to send the price data as an XML document with a `WebRowSet`
    object and a single method call.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Coffee Break 公司已扩展到在线销售咖啡。用户可以从 Coffee Break 网站按磅订购咖啡。价格列表定期更新，通过从公司数据库获取最新信息。本节演示了如何通过`WebRowSet`对象和单个方法调用将价格数据发送为
    XML 文档。
- en: Creating and Populating WebRowSet Objects
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和填充 WebRowSet 对象
- en: 'You create a new `WebRowSet` object by using an instance of `RowSetFactory`,
    which is created from the `RowSetProvider` class, to create a `WebRowSet` object.
    The following example is from [`WebRowSetSample.java`](examples/JDBCTutorial/src/com/oracle/tutorial/jdbc/WebRowSetSample.java):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`RowSetFactory`的实例创建一个新的`WebRowSet`对象，该实例是从`RowSetProvider`类创建的，用于创建一个`WebRowSet`对象。以下示例来自[`WebRowSetSample.java`](examples/JDBCTutorial/src/com/oracle/tutorial/jdbc/WebRowSetSample.java)：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Although the `priceList` object has no data yet, it has the default properties
    of a `BaseRowSet` object. Its `SyncProvider` object is at first set to the `RIOptimisticProvider`
    implementation, which is the default for all disconnected `RowSet` objects. However,
    the `WebRowSet` implementation resets the `SyncProvider` object to be the `RIXMLProvider`
    implementation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管`priceList`对象尚无数据，但它具有`BaseRowSet`对象的默认属性。其`SyncProvider`对象首先设置为`RIOptimisticProvider`实现，这是所有断开连接的`RowSet`对象的默认值。但是，`WebRowSet`实现会将`SyncProvider`对象重置为`RIXMLProvider`实现。
- en: You can use an instance of `RowSetFactory`, which is created from the `RowSetProvider`
    class, to create a `WebRowSet` object. See [Using the RowSetFactory Interface](jdbcrowset.html#using-jdbcrowset-object)
    in [Using JdbcRowSet Objects](jdbcrowset.html) for more information.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`RowSetFactory`的实例创建一个`WebRowSet`对象，该实例是从`RowSetProvider`类创建的。有关更多信息，请参见[使用
    RowSetFactory 接口](jdbcrowset.html#using-jdbcrowset-object)中的[使用 JdbcRowSet 对象](jdbcrowset.html)。
- en: The Coffee Break headquarters regularly sends price list updates to its web
    site. This information on `WebRowSet` objects will show one way you can send the
    latest price list in an XML document.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Coffee Break 总部定期向其网站发送价格列表更新。关于`WebRowSet`对象的这些信息将展示您可以通过 XML 文档发送最新价格列表的一种方式。
- en: 'The price list consists of the data in the columns `COF_NAME` and `PRICE` from
    the table `COFFEES`. The following code fragment sets the properties needed and
    populates the `priceList` object with the price list data:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 价格列表包括来自表`COFFEES`的列`COF_NAME`和`PRICE`中的数据。以下代码片段设置所需的属性，并使用价格列表数据填充`priceList`对象：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: At this point, in addition to the default properties, the `priceList` object
    contains the data in the `COF_NAME` and `PRICE` columns from the `COFFEES` table
    and also the metadata about these two columns.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，除了默认属性之外，`priceList`对象还包含来自`COFFEES`表中`COF_NAME`和`PRICE`列的数据，以及关于这两列的元数据。
- en: Writing and Reading WebRowSet Object to XML
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 WebRowSet 对象写入和读取为 XML
- en: To write a `WebRowSet` object as an XML document, call the method `writeXml`.
    To read that XML document's contents into a `WebRowSet` object, call the method
    `readXml`. Both of these methods do their work in the background, meaning that
    everything, except the results, is invisible to you.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`WebRowSet`对象写入 XML 文档，请调用方法`writeXml`。要将该 XML 文档的内容读入`WebRowSet`对象，请调用方法`readXml`。这两种方法都在后台执行其工作，除了结果之外，其他都对您不可见。
- en: Using the writeXml Method
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用`writeXml`方法
- en: 'The method `writeXml` writes the `WebRowSet` object that invoked it as an XML
    document that represents its current state. It writes this XML document to the
    stream that you pass to it. The stream can be an `OutputStream` object, such as
    a `FileOutputStream` object, or a `Writer` object, such as a `FileWriter` object.
    If you pass the method `writeXml` an `OutputStream` object, you will write in
    bytes, which can handle all types of data; if you pass it a `Writer` object, you
    will write in characters. The following code demonstrates writing the `WebRowSet`
    object `priceList` as an XML document to the `FileOutputStream` object `oStream`:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 方法`writeXml`将调用它的`WebRowSet`对象作为表示其当前状态的 XML 文档写入。它将这个 XML 文档写入您传递给它的流。流可以是一个`OutputStream`对象，比如一个`FileOutputStream`对象，或者一个`Writer`对象，比如一个`FileWriter`对象。如果您向方法`writeXml`传递一个`OutputStream`对象，您将以字节形式写入，可以处理所有类型的数据；如果您向它传递一个`Writer`对象，您将以字符形式写入。以下代码演示将`WebRowSet`对象`priceList`作为
    XML 文档写入`FileOutputStream`对象`oStream`：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The following code writes the XML document representing `priceList` to the `FileWriter`
    object `writer` instead of to an `OutputStream` object. The `FileWriter` class
    is a convenience class for writing characters to a file.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将代表`priceList`的 XML 文档写入`FileWriter`对象`writer`，而不是写入`OutputStream`对象。`FileWriter`类是一个方便的用于向文件写入字符的类。
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The other two versions of the method `writeXml` let you populate a `WebRowSet`
    object with the contents of a `ResultSet` object before writing it to a stream.
    In the following line of code, the method `writeXml` reads the contents of the
    `ResultSet` object `rs` into the `priceList` object and then writes `priceList`
    to the `FileOutputStream` object `oStream` as an XML document.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 方法`writeXml`的另外两个版本允许您在将其写入流之前，使用`ResultSet`对象的内容填充`WebRowSet`对象。在下面的代码行中，方法`writeXml`将`ResultSet`对象`rs`的内容读入`priceList`对象，然后将`priceList`作为
    XML 文档写入`FileOutputStream`对象`oStream`：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the next line of code, the `writeXml` methodpopulates `priceList` with the
    contents of `rs`, but it writes the XML document to a `FileWriter` object instead
    of to an `OutputStream` object:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一行代码中，`writeXml`方法将`priceList`填充为`rs`的内容，但将 XML 文档写入`FileWriter`对象，而不是写入`OutputStream`对象：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Using the readXml Method
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用`readXml`方法
- en: The method `readXml` parses an XML document in order to construct the `WebRowSet`
    object the XML document describes. Similar to the method `writeXml`, you can pass
    `readXml` an `InputStream` object or a `Reader` object from which to read the
    XML document.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 方法`readXml`解析 XML 文档以构造 XML 文档描述的`WebRowSet`对象。与方法`writeXml`类似，您可以向`readXml`传递一个`InputStream`对象或`Reader`对象，从中读取
    XML 文档。
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Note that you can read the XML description into a new `WebRowSet` object or
    into the same `WebRowSet` object that called the `writeXml` method. In the scenario,
    where the price list information is being sent from headquarters to the Web site,
    you would use a new `WebRowSet` object, as shown in the following lines of code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以将 XML 描述读入一个新的`WebRowSet`对象中，或者读入调用`writeXml`方法的相同`WebRowSet`对象中。在从总部发送价格列表信息到网站的情况下，您将使用一个新的`WebRowSet`对象，如下面的代码所示：
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: What Is in XML Documents
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XML 文档中包含什么
- en: '`RowSet` objects are more than just the data they contain. They have properties
    and metadata about their columns as well. Therefore, an XML document representing
    a `WebRowSet` object includes this other information in addition to its data.
    Further, the data in an XML document includes both current values and original
    values. (Recall that original values are the values that existed immediately before
    the most recent changes to data were made. These values are necessary for checking
    if the corresponding value in the database has been changed, thus creating a conflict
    over which value should be persistent: the new value you put in the `RowSet` object
    or the new value someone else put in the database.)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`RowSet`对象不仅包含它们所包含的数据，还包含有关其列的属性和元数据。因此，表示`WebRowSet`对象的XML文档除了数据外还包括其他信息。此外，XML文档中的数据包括当前值和原始值。
    （回想一下，原始值是在对数据进行最近更改之前立即存在的值。这些值对于检查数据库中的相应值是否已更改是必要的，从而创建关于应该持久化哪个值的冲突：您放入`RowSet`对象的新值还是其他人放入数据库中的新值。）'
- en: The WebRowSet XML Schema, itself an XML document, defines what an XML document
    representing a `WebRowSet` object will contain and also the format in which it
    must be presented. Both the sender and the recipient use this schema because it
    tells the sender how to write the XML document (which represents the `WebRowSet`
    object) and the recipient how to parse the XML document. Because the actual writing
    and reading is done internally by the implementations of the methods `writeXml`
    and `readXml`, you, as a user, do not need to understand what is in the WebRowSet
    XML Schema document.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: WebRowSet XML模式本身是一个XML文档，定义了表示`WebRowSet`对象的XML文档将包含什么以及必须以什么格式呈现。发送方和接收方都使用此模式，因为它告诉发送方如何编写XML文档（表示`WebRowSet`对象的文档）以及接收方如何解析XML文档。由于实际的写入和读取是由`writeXml`和`readXml`方法的实现在内部完成的，因此作为用户，您不需要了解WebRowSet
    XML模式文档中的内容。
- en: 'XML documents contain elements and subelements in a hierarchical structure.
    The following are the three main elements in an XML document describing a `WebRowSet`
    object:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: XML文档以分层结构包含元素和子元素。以下是描述`WebRowSet`对象的XML文档中的三个主要元素：
- en: '[Properties](#properties-webrowset)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[属性](#properties-webrowset)'
- en: '[Metadata](#metadata-webrowset)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[元数据](#metadata-webrowset)'
- en: '[Data](#data-webrowset)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据](#data-webrowset)'
- en: Element tags signal the beginning and end of an element. For example, the `<properties>`
    tag signals the beginning of the properties element, and the `</properties>` tag
    signals its end. The `<map/>` tag is a shorthand way of saying that the map subelement
    (one of the subelements in the properties element) has not been assigned a value.
    The following sample XML documents uses spacing and indentation to make it easier
    to read, but those are not used in an actual XML document, where spacing does
    not mean anything.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 元素标签表示元素的开始和结束。例如，`<properties>`标签表示属性元素的开始，`</properties>`标签表示其结束。`<map/>`标签是一种简写方式，表示尚未为地图子元素（属性元素中的一个子元素）分配值。以下示例XML文档使用间距和缩进使其更易于阅读，但在实际的XML文档中不使用这些，其中间距不表示任何内容。
- en: The next three sections show you what the three main elements contain for the
    `WebRowSet` `priceList` object, created in the sample `WebRowSetSample`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的三个部分向您展示了在示例`WebRowSetSample`中创建的`WebRowSet` `priceList`对象的三个主要元素包含什么。
- en: Properties
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性
- en: 'Calling the method `writeXml` on the `priceList` object would produce an XML
    document describing `priceList`. The properties section of this XML document would
    look like the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在`priceList`对象上调用`writeXml`方法将生成描述`priceList`的XML文档。此XML文档的属性部分将如下所示：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Notice that some properties have no value. For example, the `datasource` property
    is indicated with the `<datasource/>` tag, which is a shorthand way of saying
    `<datasource></datasource>`. No value is given because the `url` property is set.
    Any connections that are established will be done using this JDBC URL, so no `DataSource`
    object needs to be set. Also, the `username` and `password` properties are not
    listed because they must remain secret.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，某些属性没有值。例如，`datasource`属性用`<datasource/>`标签表示，这是一种简写方式，表示`<datasource></datasource>`。没有给出值，因为已设置`url`属性。建立的任何连接将使用此JDBC
    URL完成，因此不需要设置`DataSource`对象。此外，`username`和`password`属性未列出，因为它们必须保持机密。
- en: Metadata
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 元数据
- en: The metadata section of the XML document describing a `WebRowSet` object contains
    information about the columns in that `WebRowSet` object. The following shows
    what this section looks like for the `WebRowSet` object `priceList`. Because the
    `priceList` object has two columns, the XML document describing it has two `<column-definition>`
    elements. Each `<column-definition>` element has subelements giving information
    about the column being described.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 描述`WebRowSet`对象的XML文档的元数据部分包含有关该`WebRowSet`对象中列的信息。以下显示了描述`priceList`对象的`WebRowSet`对象的此部分的外观。因为`priceList`对象有两列，描述它的XML文档有两个`<column-definition>`元素。每个`<column-definition>`元素都有子元素提供有关所描述列的信息。
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: From this metadata section, you can see that there are two columns in each row.
    The first column is `COF_NAME`, which holds values of type `VARCHAR`. The second
    column is `PRICE`, which holds values of type `REAL`, and so on. Note that the
    column types are the data types used in the data source, not types in the Java
    programming language. To get or update values in the `COF_NAME` column, you use
    the methods `getString` or `updateString`, and the driver makes the conversion
    to the `VARCHAR` type, as it usually does.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个元数据部分，你可以看到每行中有两列。第一列是`COF_NAME`，它保存`VARCHAR`类型的值。第二列是`PRICE`，它保存`REAL`类型的值，等等。请注意，列类型是数据源中使用的数据类型，而不是Java编程语言中的类型。要获取或更新`COF_NAME`列中的值，你可以使用`getString`或`updateString`方法，驱动程序会将其转换为`VARCHAR`类型，就像通常做的那样。
- en: Data
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据
- en: The data section gives the values for each column in each row of a `WebRowSet`
    object. If you have populated the `priceList` object and not made any changes
    to it, the data element of the XML document will look like the following. In the
    next section you will see how the XML document changes when you modify the data
    in the `priceList` object.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 数据部分提供了`WebRowSet`对象每行中每列的值。如果你已经填充了`priceList`对象并且没有对其进行任何更改，XML文档的数据元素将如下所示。在下一节中，你将看到当你修改`priceList`对象中的数据时，XML文档如何变化。
- en: For each row there is a `<currentRow>` element, and because `priceList` has
    two columns, each `<currentRow>` element contains two `<columnValue>` elements.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每一行都有一个`<currentRow>`元素，因为`priceList`有两列，所以每个`<currentRow>`元素包含两个`<columnValue>`元素。
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Making Changes to WebRowSet Objects
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对WebRowSet对象进行更改
- en: You make changes to a `WebRowSet` object the same way you do to a `CachedRowSet`
    object. Unlike a `CachedRowSet` object, however, a `WebRowSet` object keeps track
    of updates, insertions, and deletions so that the `writeXml` method can write
    both the current values and the original values. The three sections that follow
    demonstrate making changes to the data and show what the XML document describing
    the `WebRowSet` object looks like after each change. You do not have to do anything
    at all regarding the XML document; any change to it is made automatically, just
    as with writing and reading the XML document.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对`WebRowSet`对象进行更改的方式与对`CachedRowSet`对象相同。然而，与`CachedRowSet`对象不同，`WebRowSet`对象会跟踪更新、插入和删除，以便`writeXml`方法可以写入当前值和原始值。接下来的三个部分演示了对数据进行更改，并展示了描述`WebRowSet`对象的XML文档在每次更改后的样子。关于XML文档，你无需做任何事情；任何对它的更改都是自动进行的，就像写入和读取XML文档一样。
- en: Inserting Rows
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 插入行
- en: 'If the owner of the Coffee Break chain wants to add a new coffee to the price
    list, the code might look like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Coffee Break连锁店的老板想要在价格表中添加一种新的咖啡，代码可能如下所示：
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In the reference implementation, an insertion is made immediately following
    the current row. In the preceding code fragment, the current row is the third
    row, so the new row would be added after the third row and become the new fourth
    row. To reflect this insertion, the XML document would have the following `<insertRow>`
    element added to it after the third `<currentRow>` element in the `<data>` element.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在参考实现中，插入会立即在当前行之后进行。在前面的代码片段中，当前行是第三行，因此新行将在第三行之后添加，并成为新的第四行。为了反映这个插入，XML文档将在`<data>`元素中第三个`<currentRow>`元素之后添加以下`<insertRow>`元素。
- en: The `<insertRow>` element will look similar to the following.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`<insertRow>`元素看起来类似于以下内容。'
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Deleting Rows
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除行
- en: 'The owner decides that Espresso is not selling enough and should be removed
    from the coffees sold at The Coffee Break shops. The owner therefore wants to
    delete Espresso from the price list. Espresso is in the third row of the `priceList`
    object, so the following lines of code delete it:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 所有者认为浓缩咖啡销售不足，应从The Coffee Break商店出售的咖啡中移除。因此，所有者希望从价格表中删除浓缩咖啡。浓缩咖啡位于`priceList`对象的第三行，因此以下代码行将其删除：
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The following `<deleteRow>` element will appear after the second row in the
    data section of the XML document, indicating that the third row has been deleted.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下`<deleteRow>`元素将出现在XML文档数据部分的第二行之后，表示第三行已被删除。
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Modifying Rows
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改行
- en: 'The owner further decides that the price of Colombian coffee is too expensive
    and wants to lower it to $6.99 a pound. The following code sets the new price
    for Colombian coffee, which is in the first row, to $6.99 a pound:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 所有者进一步决定哥伦比亚咖啡的价格太贵，想将其降至每磅$6.99。以下代码设置了哥伦比亚咖啡的新价格，即第一行为每磅$6.99：
- en: '[PRE15]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The XML document will reflect this change in an `<updateRow>` element that
    gives the new value. The value for the first column did not change, so there is
    an `<updateValue>` element only for the second column:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: XML文档将在`<updateRow>`元素中反映这一变化，给出新值。第一列的值未更改，因此仅有第二列的`<updateValue>`元素：
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'At this point, with the insertion of a row, the deletion of a row, and the
    modification of a row, the XML document for the `priceList` object would look
    like the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，通过插入一行、删除一行和修改一行，`priceList`对象的XML文档将如下所示：
- en: '[PRE17]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: WebRowSet Code Example
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WebRowSet 代码示例
- en: The sample [`WebRowSetSample.java`](examples/JDBCTutorial/src/com/oracle/tutorial/jdbc/WebRowSetSample.java)
    demonstrates all the features described on this page.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 示例[`WebRowSetSample.java`](examples/JDBCTutorial/src/com/oracle/tutorial/jdbc/WebRowSetSample.java)展示了本页面描述的所有功能。
