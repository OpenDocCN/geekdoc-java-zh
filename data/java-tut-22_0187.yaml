- en: Creating and Reading Directories
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和读取目录
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/dirs.html](https://docs.oracle.com/javase/tutorial/essential/io/dirs.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/dirs.html](https://docs.oracle.com/javase/tutorial/essential/io/dirs.html)
- en: Some of the methods previously discussed, such as `delete`, work on files, links
    *and* directories. But how do you list all the directories at the top of a file
    system? How do you list the contents of a directory or create a directory?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些先前讨论过的方法，如`delete`，适用于文件、链接*和*目录。但是如何列出文件系统顶部的所有目录？如何列出目录的内容或创建目录？
- en: 'This section covers the following functionality specific to directories:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节涵盖了以下特定于目录的功能：
- en: '[Listing a File System''s Root Directories](#listall)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[列出文件系统的根目录](#listall)'
- en: '[Creating a Directory](#create)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建目录](#create)'
- en: '[Creating a Temporary Directory](#createTemp)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建临时目录](#createTemp)'
- en: '[Listing a Directory''s Contents](#listdir)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[列出目录的内容](#listdir)'
- en: '[Filtering a Directory Listing By Using Globbing](#glob)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过使用Globbing筛选目录列表](#glob)'
- en: '[Writing Your Own Directory Filter](#filter)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[编写自己的目录过滤器](#filter)'
- en: Listing a File System's Root Directories
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列出文件系统的根目录
- en: You can list all the root directories for a file system by using the [`FileSystem.getRootDirectories`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getRootDirectories--)
    method. This method returns an `Iterable`, which enables you to use the [enhanced
    for](../../java/nutsandbolts/for.html) statement to iterate over all the root
    directories.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`FileSystem.getRootDirectories`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getRootDirectories--)方法列出文件系统的所有根目录。此方法返回一个`Iterable`，使您可以使用[增强型for](../../java/nutsandbolts/for.html)语句遍历所有根目录。
- en: 'The following code snippet prints the root directories for the default file
    system:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段打印默认文件系统的根目录：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating a Directory
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建目录
- en: 'You can create a new directory by using the [`createDirectory(Path, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-)
    method. If you don''t specify any `FileAttributes`, the new directory will have
    default attributes. For example:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`createDirectory(Path, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-)方法创建一个新目录。如果不指定任何`FileAttributes`，新目录将具有默认属性。例如：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following code snippet creates a new directory on a POSIX file system that
    has specific permissions:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段在具有特定权限的POSIX文件系统上创建一个新目录：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To create a directory several levels deep when one or more of the parent directories
    might not yet exist, you can use the convenience method, [`createDirectories(Path,
    FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createDirectories-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-).
    As with the `createDirectory(Path, FileAttribute<?>)` method, you can specify
    an optional set of initial file attributes. The following code snippet uses default
    attributes:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要在可能尚不存在一个或多个父目录的情况下创建几层深的目录，您可以使用方便的方法[`createDirectories(Path, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createDirectories-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-)。与`createDirectory(Path,
    FileAttribute<?>)`方法一样，您可以指定一组可选的初始文件属性。以下代码片段使用默认属性：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The directories are created, as needed, from the top down. In the `foo/bar/test`
    example, if the `foo` directory does not exist, it is created. Next, the `bar`
    directory is created, if needed, and, finally, the `test` directory is created.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 目录是按需自上而下创建的。在`foo/bar/test`示例中，如果`foo`目录不存在，则会创建它。接下来，如果需要，将创建`bar`目录，最后创建`test`目录。
- en: It is possible for this method to fail after creating some, but not all, of
    the parent directories.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建一些但不是所有父目录后，此方法可能会失败。
- en: Creating a Temporary Directory
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建临时目录
- en: 'You can create a temporary directory using one of `createTempDirectory` methods:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`createTempDirectory`方法之一创建临时目录：
- en: '[`createTempDirectory(Path, String, FileAttribute<?>...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempDirectory-java.nio.file.Path-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`createTempDirectory(Path, String, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempDirectory-java.nio.file.Path-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
- en: '[`createTempDirectory(String, FileAttribute<?>...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempDirectory-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`createTempDirectory(String, FileAttribute<?>...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempDirectory-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
- en: The first method allows the code to specify a location for the temporary directory
    and the second method creates a new directory in the default temporary-file directory.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个方法允许代码指定临时目录的位置，第二个方法在默认临时文件目录中创建一个新目录。
- en: Listing a Directory's Contents
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列出目录的内容
- en: You can list all the contents of a directory by using the [`newDirectoryStream(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newDirectoryStream-java.nio.file.Path-)
    method. This method returns an object that implements the [`DirectoryStream`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/DirectoryStream.html)
    interface. The class that implements the `DirectoryStream` interface also implements
    `Iterable`, so you can iterate through the directory stream, reading all of the
    objects. This approach scales well to very large directories.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`newDirectoryStream(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newDirectoryStream-java.nio.file.Path-)方法列出目录的所有内容。此方法返回一个实现了[`DirectoryStream`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/DirectoryStream.html)接口的对象。实现`DirectoryStream`接口的类还实现了`Iterable`，因此您可以遍历目录流，读取所有对象。这种方法适用于非常大的目录。
- en: '* * *'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Remember:** The returned `DirectoryStream` is a *stream*. If you are not
    using a `try-`with-resources statement, don''t forget to close the stream in the
    `finally` block. The `try-`with-resources statement takes care of this for you.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**记住：** 返回的`DirectoryStream`是一个*流*。如果你没有使用`try-`with-resources语句，请不要忘记在`finally`块中关闭流。`try-`with-resources语句会为您处理这个问题。'
- en: '* * *'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'The following code snippet shows how to print the contents of a directory:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段展示了如何打印目录的内容：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `Path` objects returned by the iterator are the names of the entries resolved
    against the directory. So, if you are listing the contents of the `/tmp` directory,
    the entries are returned with the form `/tmp/a`, `/tmp/b`, and so on.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代器返回的`Path`对象是相对于目录解析的条目名称。因此，如果您正在列出`/tmp`目录的内容，则条目将以`/tmp/a`、`/tmp/b`等形式返回。
- en: 'This method returns the entire contents of a directory: files, links, subdirectories,
    and hidden files. If you want to be more selective about the contents that are
    retrieved, you can use one of the other `newDirectoryStream` methods, as described
    later in this page.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法返回目录的全部内容：文件、链接、子目录和隐藏文件。如果您想更有选择地检索内容，可以使用本页后面描述的其他`newDirectoryStream`方法之一。
- en: Note that if there is an exception during directory iteration then `DirectoryIteratorException`
    is thrown with the `IOException` as the cause. Iterator methods cannot throw exception
    exceptions.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果在目录迭代过程中出现异常，则会抛出`DirectoryIteratorException`，其原因是`IOException`。迭代器方法不能抛出异常。
- en: Filtering a Directory Listing By Using Globbing
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过使用Globbing筛选目录列表
- en: If you want to fetch only files and subdirectories where each name matches a
    particular pattern, you can do so by using the [`newDirectoryStream(Path, String)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newDirectoryStream-java.nio.file.Path-java.lang.String-)
    method, which provides a built-in glob filter. If you are not familiar with glob
    syntax, see [What Is a Glob?](fileOps.html#glob)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只想获取文件和子目录，其中每个名称都匹配特定模式，可以使用[`newDirectoryStream(Path, String)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newDirectoryStream-java.nio.file.Path-java.lang.String-)方法，该方法提供了内置的glob过滤器。如果您不熟悉glob语法，请参阅[什么是Glob？](fileOps.html#glob)
- en: 'For example, the following code snippet lists files relating to Java: *.class*,
    *.java*, and *.jar* files.:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下代码片段列出了与Java相关的文件：*.class*，*.java*和*.jar*文件。
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Writing Your Own Directory Filter
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写自己的目录过滤器
- en: Perhaps you want to filter the contents of a directory based on some condition
    other than pattern matching. You can create your own filter by implementing the
    [`DirectoryStream.Filter<T>`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/DirectoryStream.Filter.html)
    interface. This interface consists of one method, `accept`, which determines whether
    a file fulfills the search requirement.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 也许您想要根据除了模式匹配之外的某些条件来过滤目录的内容。您可以通过实现[`DirectoryStream.Filter<T>`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/DirectoryStream.Filter.html)接口来创建自己的过滤器。该接口由一个方法`accept`组成，用于确定文件是否满足搜索要求。
- en: 'For example, the following code snippet implements a filter that retrieves
    only directories:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下代码片段实现了一个仅检索目录的过滤器：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Once the filter has been created, it can be invoked by using the [`newDirectoryStream(Path,
    DirectoryStream.Filter<? super Path>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-)
    method. The following code snippet uses the `isDirectory` filter to print only
    the directory''s subdirectories to standard output:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦过滤器被创建，就可以通过使用[`newDirectoryStream(Path, DirectoryStream.Filter<? super Path>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-)方法来调用它。以下代码片段使用`isDirectory`过滤器仅将目录的子目录打印到标准输出：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This method is used to filter a single directory only. However, if you want
    to find all the subdirectories in a file tree, you would use the mechanism for
    [Walking the File Tree](walk.html).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法仅用于过滤单个目录。然而，如果您想要在文件树中找到所有子目录，您将使用[遍历文件树](walk.html)的机制。
