- en: How to Use Tabbed Panes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用选项卡窗格
- en: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html](https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html](https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html)
- en: With the [`JTabbedPane`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html)
    class, you can have several components, such as [panels](panel.html), share the
    same space. The user chooses which component to view by selecting the tab corresponding
    to the desired component. If you want similar functionality without the tab interface,
    you can use a [card layout](../layout/card.html) instead of a tabbed pane.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`JTabbedPane`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html)类，您可以让多个组件，比如[面板](panel.html)，共享相同的空间。用户通过选择对应所需组件的选项卡来选择要查看的组件。如果您想要类似的功能但不想使用选项卡界面，可以使用[卡片布局](../layout/card.html)而不是选项卡窗格。
- en: To Create Tabbed Panes
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建选项卡窗格
- en: To create a tabbed pane, instantiate `JTabbedPane`, create the components you
    wish it to display, and then add the components to the tabbed pane using the `addTab`
    method.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建选项卡窗格，实例化`JTabbedPane`，创建您希望显示的组件，然后使用`addTab`方法将组件添加到选项卡窗格中。
- en: The following picture introduces an application called `TabbedPaneDemo` that
    has a tabbed pane with four tabs.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片介绍了一个名为`TabbedPaneDemo`的应用程序，其中有一个带有四个选项卡的选项卡窗格。
- en: '![A screenshot of TabbedPaneDemo](../Images/3039e7552cd15c4159731578f7d181b5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![TabbedPaneDemo的屏幕截图](../Images/3039e7552cd15c4159731578f7d181b5.png)'
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run TabbedPaneDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#TabbedPaneDemo).[![Launches
    the TabbedPaneDemo Application](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/TabbedPaneDemoProject/TabbedPaneDemo.jnlp)
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行TabbedPaneDemo（[下载JDK
    7或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#TabbedPaneDemo)。[![启动TabbedPaneDemo应用程序](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/TabbedPaneDemoProject/TabbedPaneDemo.jnlp)
- en: Put the cursor over a tab.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在选项卡上。
- en: The tool tip associated with the tab appears. As a convenience, you can specify
    tool tip text when you add a component to the tabbed pane.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与标签相关联的工具提示显示出来。为了方便起见，您可以在将组件添加到选项卡窗格时指定工具提示文本。
- en: Select a tab by clicking it.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击选项卡来选择一个选项卡。
- en: The tabbed pane displays the component corresponding to the tab.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选项卡窗格显示与选项卡对应的组件。
- en: Select a tab by entering its mnemonic.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入其助记符来选择一个选项卡。
- en: For example, in the Java look and feel you can select the tab labeled "Tab 3"
    by typing Alt-3.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，在Java外观中，您可以通过键入Alt-3来选择标记为“Tab 3”的选项卡。
- en: Navigate between scrollable tabs.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在可滚动选项卡之间导航。
- en: This example provides scrollable tabs. Resize the dialog box by moving its left
    or right boundary so that tabs do not fit within the dialog. Scroll arrows appear
    next to the tabs.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此示例提供可滚动的选项卡。通过移动对话框的左侧或右侧边界来调整对话框的大小，以便选项卡不适合对话框内。在选项卡旁边会出现滚动箭头。
- en: Click the arrow to view one of the hidden tabs.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单击箭头以查看其中一个隐藏的选项卡。
- en: Note that clicking the arrow only reveals hidden tabs. It does not select a
    new tab.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，单击箭头只会显示隐藏的标签，而不会选择新的标签。
- en: '* * *'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: As the `TabbedPaneDemo` example shows, a tab can have a tool tip and a mnemonic,
    and it can display both text and an image.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 正如`TabbedPaneDemo`示例所示，选项卡可以具有工具提示���助记符，并且可以同时显示文本和图像。
- en: Tab Placement
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标签放置
- en: The default tab placement is set to the `TOP` location, as shown above. You
    can change the tab placement to `LEFT`, `RIGHT`, `TOP` or `BOTTOM` by using the
    `setTabPlacement` method.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的标签放置位置设置为`TOP`位置，如上所示。您可以使用`setTabPlacement`方法将标签放置位置更改为`LEFT`、`RIGHT`、`TOP`或`BOTTOM`。
- en: Code for Tabbed Panes
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选项卡窗格的代码
- en: The following code from [`TabbedPaneDemo.java`](../examples/components/TabbedPaneDemoProject/src/components/TabbedPaneDemo.java)
    creates the tabbed pane in the previous example. Note that no event-handling code
    is necessary. The `JTabbedPane` object takes care of mouse and keyboard events
    for you.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 来自[`TabbedPaneDemo.java`](../examples/components/TabbedPaneDemoProject/src/components/TabbedPaneDemo.java)的以下代码创建了前面示例中的选项卡窗格。请注意，不需要事件处理代码。`JTabbedPane`对象会为您处理鼠标和键盘事件。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As the previous code shows, the `addTab` method handles the bulk of the work
    in setting up a tab in a tabbed pane. The `addTab` method has several forms, but
    they all use both a string title and the component to be displayed by the tab.
    Optionally, you can specify an icon and [tool tip](tooltip.html) string. The text
    or icon (or both) can be null. Another way to create a tab is to use the `insertTab`
    method, which lets you specify the index of the tab you're adding. Note that the
    `addTab` method does not allow index specification in this step.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的代码所示，`addTab`方法处理了在选项卡窗格中设置选项卡的大部分工作。`addTab`方法有几种形式，但它们都使用字符串标题和要由选项卡显示的组件。可选地，您可以指定图标和[工具提示](tooltip.html)字符串。文本或图标（或两者）可以为null。创建选项卡的另一种方法是使用`insertTab`方法，该方法允许您指定要添加的选项卡的索��。请注意，在此步骤中，`addTab`方法不允许指定索引。
- en: To Switch to Specific Tabs
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 切换到特定选项卡
- en: There are three ways to switch to specific tabs using GUI.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种使用GUI切换到特定选项卡的方法。
- en: '**Using a mouse.** To switch to a specific tab, the user clicks it with the
    mouse.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用鼠标。** 要切换到特定选项卡，用户可以用鼠标点击它。'
- en: '**Using keyboard arrows.** When the `JTabbedPane` object has the focus, the
    keyboard arrows can be used to switch from tab to tab.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用键盘箭头。** 当`JTabbedPane`对象获得焦点时，可以使用键盘箭头从一个选项卡切换到另一个选项卡。'
- en: '**Using key mnemonics.** The `setMnemonicAt` method allows the user to switch
    to a specific tab using the keyboard. For example, `setMnemonicAt(3, KeyEvent.VK_4)`
    makes ''4'' the mnemonic for the fourth tab (which is at index 3, since the indices
    start with 0); pressing Alt-4 makes the fourth tab''s component appear. Often,
    a mnemonic uses a character in the tab''s title that is then automatically underlined.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用键盘助记键。** `setMnemonicAt`方法允许用户使用键盘切换到特定选项卡。例如，`setMnemonicAt(3, KeyEvent.VK_4)`将''4''设置为第四个选项卡的助记键（索引从0开始，因此第四个选项卡的索引为3）；按下Alt-4将显示第四个选项卡的组件。通常，助记键使用选项卡标题中的字符，然后自动加下划线。'
- en: To switch to a specific tab programmatically, use the [`setSelectedIndex`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedIndex-int-)
    or the [`setSelectedComponent`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedComponent-java.awt.Component-)
    methods.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过编程方式切换到特定选项卡，可以使用[`setSelectedIndex`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedIndex-int-)或[`setSelectedComponent`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedComponent-java.awt.Component-)方法。
- en: Preferred Size in Tabs
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选项卡的首选大小
- en: When building components to add to a tabbed pane, keep in mind that no matter
    which child of a tabbed pane is visible, each child gets the same amount of space
    in which to display itself. The preferred size of the tabbed pane is just big
    enough to display its tallest child at its preferred height, and its widest child
    at its preferred width. Similarly, the minimum size of the tabbed pane depends
    on the biggest minimum width and height of all its children.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建要添加到选项卡窗格的组件时，请记住，无论哪个选项卡的子组件可见，每个子组件都会获得相同的空间来显示自己。选项卡窗格的首选大小刚好足够显示其最高子组件的首选高度和最宽子组件的首选宽度。类似地，选项卡窗格的最小大小取决于所有子组件的最大最小宽度和高度。
- en: "In the `TabbedPaneDemo` example, the fourth panel has a preferred width and\
    \ height that are larger than those of the other panels. Thus, the preferred size\
    \ of the tabbed pane is just big enough to display the fourth panel at its preferred\
    \ size. Every panel gets exactly the same amount of space \x97 410 pixels wide\
    \ and 50 high, assuming the tabbed pane is at its preferred size. If you do not\
    \ understand how preferred size is used, please refer to [How Layout Management\
    \ Works](../layout/howLayoutWorks.html)."
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在`TabbedPaneDemo`示例中，第四个面板的首选宽度和高度大于其他面板的宽度和高度。因此，选项卡窗格的首选大小刚好足够显示第四个面板的首选大小。每个面板都获得完全相同的空间
    - 假设选项卡窗格处于首选大小状态，宽度为410像素，高度为50像素。如果您不了解首选大小的使用方式，请参考[布局管理工作原理](../layout/howLayoutWorks.html)。
- en: Tabs With Custom Components
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带有自定义组件的选项卡
- en: The `TabComponentsDemo` example introduces a tabbed pane whose tabs contain
    real components. The use of custom components brings new features such as buttons,
    combo boxes, labels and other components to tabs, and allows more complex user
    interaction.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`TabComponentsDemo`示例介绍了一个选项卡窗格，其选项卡包含真实组件。使用自定义组件带来了新功能，如按钮、组合框、标签和其他组件到选项卡，并允许更复杂的用户交互。'
- en: Here is a tabbed pane with close buttons on its tabs.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个带有选项卡关闭按钮的选项卡窗格。
- en: '![A screenshot of TabComponentsDemo](../Images/25897cf1137fde6810210c63df4db537.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![TabComponentsDemo的屏幕截图](../Images/25897cf1137fde6810210c63df4db537.png)'
- en: '* * *'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Try this:**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试这个：**'
- en: Click the Launch button to run TabComponentsDemo using [Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)
    ([download JDK 7 or later](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
    Alternatively, to compile and run the example yourself, consult the [example index](../examples/components/index.html#TabComponentsDemo).[![Launches
    the TabComponentsDemo Application](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/TabComponentsDemoProject/TabComponentsDemo.jnlp)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“启动”按钮以使用[Java™ Web Start](http://www.oracle.com/technetwork/java/javase/javawebstart/index.html)运行TabComponentsDemo（[下载JDK
    7或更高版本](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）。或者，要自行编译和运行示例，请参考[示例索引](../examples/components/index.html#TabComponentsDemo)。[![启动TabComponentsDemo应用程序](../Images/4707a69a17729d71c56b2bdbbb4cc61c.png)](https://docs.oracle.com/javase/tutorialJWS/samples/uiswing/TabComponentsDemoProject/TabComponentsDemo.jnlp)
- en: Put the cursor over a tab.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在选项卡上。
- en: Select a tab by clicking it (make sure not to hit the little cross).
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击选项卡来选择它（确保不要点击小十字）。
- en: Put the cursor over one of the widgets with a little cross.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在带有小十字的小部件上。
- en: The cross turns magenta and gets enclosed in a square. A tool tip associated
    with the close button appears.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小十字变成品红色并被包裹在一个正方形中。与关闭按钮关联的工具提示会出现。
- en: Click the cross with the left mouse button to close the tab.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用鼠标左键单击十字关闭选项卡。
- en: Restore the tabs that have been removed by choosing the Reset JTabbedPane item
    from the Options menu.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择“重置JTabbedPane”项目来恢复已删除的选项卡。
- en: Note that tabs with custom components are displayed on top of original tabbed
    pane tabs.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，带有自定义组件的选项卡显示在原始选项卡窗格选项卡的顶部。
- en: To view the tabs underneath, open the Options menu and clear the Use TabComponents
    check box.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看下面的选项卡，请打开选项菜单并取消选中“使用TabComponents”复选框。
- en: Display the tabs with components by selecting the Use TabComponents check box
    again.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过再次选择“使用TabComponents”复选框来显示带有组件的选项卡。
- en: Close all tabs. Now the tabbed pane is empty.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭所有选项卡。现在选项卡窗格是空的。
- en: '* * *'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: To Remove Tabs
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除选项卡
- en: The following code from [`ButtonTabComponent.java`](../examples/components/TabComponentsDemoProject/src/components/ButtonTabComponent.java)
    removes a tab from the tabbed pane. Note that event-handling code is necessary.
    Since each tab contains a real `JButton` object, you must attach an `ActionListener`
    to the close button. As the user clicks the button, the `actionPerformed` method
    determines the index of the tab it belongs to and removes the corresponding tab.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码来自[`ButtonTabComponent.java`](../examples/components/TabComponentsDemoProject/src/components/ButtonTabComponent.java)，从选项卡窗格中移除一个选项卡。请注意，需要事件处理代码。由于每个选项卡包含一个真实的`JButton`对象，您必须将`ActionListener`附加到关闭按钮上。当用户点击按钮时，`actionPerformed`方法确定它所属的选项卡的索引，并移除相应的选项卡。
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To Give Titles to Customized Tabs
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为自定义选项卡添加标题
- en: The code below, taken from [`ButtonTabComponent.java`](../examples/components/TabComponentsDemoProject/src/components/ButtonTabComponent.java),
    shows how a customized tab component gets a title from an original tabbed pane
    tab.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码取自[`ButtonTabComponent.java`](../examples/components/TabComponentsDemoProject/src/components/ButtonTabComponent.java)，展示了如何从原始选项卡窗格选项卡中获取自定义选项卡组件的标题。
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Tabbed Pane API
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选项卡窗格API
- en: 'The following tables list the commonly used `JTabbedPane` constructors and
    methods. The API for using tabbed panes falls into the following categories:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了常用的`JTabbedPane`构造函数和方法。使用选项卡窗格的API分为以下几个类别：
- en: '[Creating and Setting Up a Tabbed Pane](#creating)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建和设置选项卡窗格](#creating)'
- en: '[Inserting, Removing, Finding, and Selecting Tabs](#tabapi)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[插入、删除、查找和选择选项卡](#tabapi)'
- en: '[Changing Tab Appearance](#appearanceapi)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[更改选项卡外观](#appearanceapi)'
- en: '[Setting Up Custom Components on Tabs](#tabscomponents)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在选项卡上设置自定义组件](#tabscomponents)'
- en: Creating and Setting Up a Tabbed Pane
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 创建和设置选项卡窗格
- en: '| Method or Constructor | Purpose |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 方法或构造函数 | 目的 |'
- en: '| [JTabbedPane()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#JTabbedPane--)
    [JTabbedPane(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#JTabbedPane-int-)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '| [JTabbedPane()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#JTabbedPane--)
    [JTabbedPane(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#JTabbedPane-int-)'
- en: '[JTabbedPane(int, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#JTabbedPane-int-int-)
    | Creates a tabbed pane. The first optional argument specifies where the tabs
    should appear. By default, the tabs appear at the top of the tabbed pane. You
    can specify these positions (defined in the `SwingConstants` interface, which
    `JTabbedPane` implements): `TOP`, `BOTTOM`, `LEFT`, `RIGHT`. The second optional
    argument specifies the tab layout policy. You can specify one of these policies
    (defined in `JTabbedPane`): [`WRAP_TAB_LAYOUT`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#WRAP_TAB_LAYOUT)
    or [`SCROLL_TAB_LAYOUT`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#SCROLL_TAB_LAYOUT).
    |'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[JTabbedPane(int, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#JTabbedPane-int-int-)
    | 创建一个选项卡窗格。第一个可选参数指定选项卡应出现的位置。默认情况下，选项卡出现在选项卡窗格的顶部。您可以指定这些位置（在`SwingConstants`接口中定义，由`JTabbedPane`实现）：`TOP`、`BOTTOM`、`LEFT`、`RIGHT`。第二个可选参数指定选项卡布局策略。您可以指定这些策略之一（在`JTabbedPane`中定义）：[`WRAP_TAB_LAYOUT`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#WRAP_TAB_LAYOUT)或[`SCROLL_TAB_LAYOUT`](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#SCROLL_TAB_LAYOUT)。
    |'
- en: '| [addTab(String, Icon, Component, String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#addTab-java.lang.String-javax.swing.Icon-java.awt.Component-java.lang.String-)
    [addTab(String, Icon, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#addTab-java.lang.String-javax.swing.Icon-java.awt.Component-)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '| [addTab(String, Icon, Component, String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#addTab-java.lang.String-javax.swing.Icon-java.awt.Component-java.lang.String-)
    [addTab(String, Icon, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#addTab-java.lang.String-javax.swing.Icon-java.awt.Component-)'
- en: '[addTab(String, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#addTab-java.lang.String-java.awt.Component-)
    | Adds a new tab to the tabbed pane. The first argument specifies the text on
    the tab. The optional icon argument specifies the tab''s icon. The component argument
    specifies the component that the tabbed pane should show when the tab is selected.
    The fourth argument, if present, specifies the tool tip text for the tab. |'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[addTab(String, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#addTab-java.lang.String-java.awt.Component-)
    | 向选项卡窗格添加一个新选项卡。第一个参数指定选项卡上的文本。可选的图标参数指定选项卡的图标。组件参数指定选项卡被选中时选项���窗格应显示的组件。如果存在第四个参数，则指定选项卡的工具提示文本。
    |'
- en: '| [void setTabLayoutPolicy(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTabLayoutPolicy-int-)
    [int getTabLayoutPolicy()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTabLayoutPolicy--)
    | Sets or gets the policy that the tabbed pane uses in laying out tabs when all
    tabs do not fit within a single run. Possible values are `WRAP_TAB_LAYOUT` and
    `SCROLL_TAB_LAYOUT`. The default policy is `WRAP_TAB_LAYOUT`. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [void setTabLayoutPolicy(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTabLayoutPolicy-int-)
    [int getTabLayoutPolicy()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTabLayoutPolicy--)
    | 设置或获取选项卡窗格在所有选项卡不适合单个运行时使用的布局策略。可能的值为`WRAP_TAB_LAYOUT`和`SCROLL_TAB_LAYOUT`。默认策略是`WRAP_TAB_LAYOUT`。
    |'
- en: '| [void setTabPlacement(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTabPlacement-int-)
    [int getTabPlacement()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTabPlacement--)
    | Sets or gets the location where the tabs appear relative to the content. Possible
    values (defined in `SwingConstants`, which is implemented by `JTabbedPane`) are
    `TOP`, `BOTTOM`, `LEFT`, and `RIGHT`. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [void setTabPlacement(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTabPlacement-int-)
    [int getTabPlacement()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTabPlacement--)
    | 设置或获取选项卡相对于内容出现的位置。可能的值（在`SwingConstants`中定义，由`JTabbedPane`实现）为`TOP`、`BOTTOM`、`LEFT`和`RIGHT`。
    |'
- en: Inserting, Removing, Finding, and Selecting Tabs
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 插入、删除、查找和选择选项卡
- en: '| Method | Purpose |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [insertTab(String, Icon, Component, String, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#insertTab-java.lang.String-javax.swing.Icon-java.awt.Component-java.lang.String-int-)
    | Inserts a tab at the specified index, where the first tab is at index 0\. The
    arguments are the same as for `addTab`. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [insertTab(String, Icon, Component, String, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#insertTab-java.lang.String-javax.swing.Icon-java.awt.Component-java.lang.String-int-)
    | 在指定的索引处插入一个选项卡，其中第一个选项卡的索引为0。参数与`addTab`相同。 |'
- en: '| [remove(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#remove-java.awt.Component-)
    [removeTabAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#removeTabAt-int-)
    | Removes the tab corresponding to the specified component or index. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [删除(组件)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#remove-java.awt.Component-)
    [删除指定索引处的选项卡](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#removeTabAt-int-)
    | 删除与指定组件或索引对应的选项卡。 |'
- en: '| [removeAll()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#removeAll--)
    | Removes all tabs. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [删除所有](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#removeAll--)
    | 删除所有选项卡。 |'
- en: '| [int indexOfComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfComponent-java.awt.Component-)
    [int indexOfTab(String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfTab-java.lang.String-)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '| [组件的索引](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfComponent-java.awt.Component-)
    [选项卡的索引](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfTab-java.lang.String-)'
- en: '[int indexOfTab(Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfTab-javax.swing.Icon-)
    | Returns the index of the tab that has the specified component, title, or icon.
    |'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[选项卡的索引(图标)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfTab-javax.swing.Icon-)
    | 返回具有指定组件、标题或图标的选项卡的索引。 |'
- en: '| [void setSelectedIndex(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedIndex-int-)
    [void setSelectedComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedComponent-java.awt.Component-)
    | Selects the tab that has the specified component or index. Selecting a tab has
    the effect of displaying its associated component. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [void setSelectedIndex(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedIndex-int-)
    [void setSelectedComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setSelectedComponent-java.awt.Component-)
    | 选择具有指定组件或索引的选项卡。选择选项卡会显示其关联的组件。 |'
- en: '| [int getSelectedIndex()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getSelectedIndex--)
    [Component getSelectedComponent()](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getSelectedComponent--)
    | Returns the index or component for the selected tab. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [获取选定索引的整数](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getSelectedIndex--)
    [获取选定组件的组件](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getSelectedComponent--)
    | 返回选定选项卡的索引或组件。 |'
- en: Changing Tab Appearance
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 更改选项卡外观
- en: '| Method | Purpose |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 目的 |'
- en: '| [void setComponentAt(int, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setComponentAt-int-java.awt.Component-)
    [Component getComponentAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getComponentAt-int-)
    | Sets or gets which component is associated with the tab at the specified index.
    The first tab is at index 0. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [void setComponentAt(int, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setComponentAt-int-java.awt.Component-)
    [获取指定索引处选项卡关联的组件](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getComponentAt-int-)
    | 设置或获取与指定索引处选项卡关联的组件。第一个选项卡的索引为0。 |'
- en: '| [void setTitleAt(int, String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTitleAt-int-java.lang.String-)
    [String getTitleAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTitleAt-int-)
    | Sets or gets the title of the tab at the specified index. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [void setTitleAt(int, String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTitleAt-int-java.lang.String-)
    [获取指定索引处选项卡的标题](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTitleAt-int-)
    | 设置或获取指定索引处选项卡的标题。 |'
- en: '| [void setIconAt(int, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setIconAt-int-javax.swing.Icon-)
    [Icon getIconAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getIconAt-int-)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setIconAt(int, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setIconAt-int-javax.swing.Icon-)
    [获取指定索引处的图标](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getIconAt-int-)'
- en: '[void setDisabledIconAt(int, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setDisabledIconAt-int-javax.swing.Icon-)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[void setDisabledIconAt(int, Icon)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setDisabledIconAt-int-javax.swing.Icon-)'
- en: '[Icon getDisabledIconAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getDisabledIconAt-int-)
    | Sets or gets the icon displayed by the tab at the specified index. |'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[获取指定索引处选项卡显示的禁用图标](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getDisabledIconAt-int-)
    | 设置或获取指定索引处选项卡显示的图标。 |'
- en: '| [void setBackgroundAt(int, Color)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setBackgroundAt-int-java.awt.Color-)
    [Color getBackgroundAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getBackgroundAt-int-)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '| [void setBackgroundAt(int, Color)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setBackgroundAt-int-java.awt.Color-)
    [Color getBackgroundAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getBackgroundAt-int-)'
- en: '[void setForegroundAt(int, Color)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setForegroundAt-int-java.awt.Color-)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[void setForegroundAt(int, Color)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setForegroundAt-int-java.awt.Color-)'
- en: '[Color getForegroundAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getForegroundAt-int-)
    | Sets or gets the background or foreground color used by the tab at the specified
    index. By default, a tab uses the tabbed pane''s background and foreground colors.
    For example, if the tabbed pane''s foreground is black, then each tab''s title
    is black except for any tabs for which you specify another color using `setForegroundAt`.
    |'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[Color getForegroundAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getForegroundAt-int-)
    | 设置或获取指定索引处选项卡使用的背景或前景颜色。默认情况下，选项卡使用选项卡窗格的背景和前景颜色。例如，如果选项卡窗格的前景色是黑色，则每个选项卡的标题都是黑色，除非您使用`setForegroundAt`指定另一种颜色。'
- en: '| [void setEnabledAt(int, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setEnabledAt-int-boolean-)
    [boolean isEnabledAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#isEnabledAt-int-)
    | Sets or gets the enabled state of the tab at the specified index. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [void setEnabledAt(int, boolean)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setEnabledAt-int-boolean-)
    [boolean isEnabledAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#isEnabledAt-int-)
    | 设置或获取指定索引处选项卡的启用状态。'
- en: '| [void setMnemonicAt(int, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setMnemonicAt-int-int-)
    [int getMnemonicAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getMnemonicAt-int-)
    | Sets or gets the keyboard mnemonic for accessing the specified tab. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [void setMnemonicAt(int, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setMnemonicAt-int-int-)
    [int getMnemonicAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getMnemonicAt-int-)
    | 设置或获取访问指定选项卡的键盘助记符。'
- en: '| [void setDisplayedMnemonicIndexAt(int, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setDisplayedMnemonicIndexAt-int-int-)
    [int getDisplayedMnemonicIndexAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getDisplayedMnemonicIndexAt-int-)
    | Sets or gets which character should be decorated to represent the mnemonic.
    This is useful when the mnemonic character appears multiple times in the tab''s
    title and you don''t want the first occurrence underlined. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [void setDisplayedMnemonicIndexAt(int, int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setDisplayedMnemonicIndexAt-int-int-)
    [int getDisplayedMnemonicIndexAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getDisplayedMnemonicIndexAt-int-)
    | 设置或获取应该被装饰以表示助记符的字符。当助记符字符在选项卡标题中出现多次且您不希望第一次出现时被下划线标记时，这将非常有用。'
- en: '| [void setToolTipTextAt(int, String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setToolTipTextAt-int-java.lang.String-)
    [String getToolTipTextAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getToolTipTextAt-int-)
    | Sets or gets the text displayed on tool tips for the specified tab. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [void setToolTipTextAt(int, String)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setToolTipTextAt-int-java.lang.String-)
    [String getToolTipTextAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getToolTipTextAt-int-)
    | 设置或获取指定选项卡上显示的工具提示文本。'
- en: Setting Up Custom Components on Tabs
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 设置自定义组件在选项卡上
- en: '| Method | Purpose |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 方��� | 目的 |'
- en: '| [void setTabComponentAt(int, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTabComponentAt-int-java.awt.Component-)
    | Sets the component that is responsible for rendering the title or icon (or both)
    for the tab specified by the first argument. When a null value is specified, `JTabbedPane`
    renders the title or icon. The same component cannot be used for several tabs.
    |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [void setTabComponentAt(int, Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#setTabComponentAt-int-java.awt.Component-)
    | 设置负责为由第一个参数指定的选项卡渲染标题或图标（或两者）的组件。当指定空值时，`JTabbedPane`将渲染标题或图标。同一组件不能用于多个选项卡。'
- en: '| [Component getTabComponentAt(int)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTabComponentAt-int-)
    | Gets the tab component for the tab at the index specified by the argument. If
    there is no tab component for the specified tab, a null value is returned. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [获取指定索引处的选项卡组件](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#getTabComponentAt-int-)
    | 获取指定索引处选项卡的选项卡组件。如果指定选项卡没有选项卡组件，则返回空值。 |'
- en: '| [int indexOfTabComponent(Component)](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfTabComponent-java.awt.Component-)
    | Checks if the specified component belongs to one of the tabs. Return the index
    of the corresponding tab or -1 if there is no such a tab. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [检查组件是否属于选项卡](https://docs.oracle.com/javase/8/docs/api/javax/swing/JTabbedPane.html#indexOfTabComponent-java.awt.Component-)
    | 检查指定组件是否属于其中一个选项卡。返回相应选项卡的索引，如果没有这样的选项卡，则返回-1。 |'
- en: Examples That Use Tabbed Panes
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用选项卡窗格的示例
- en: This table lists examples that use `JTabbedPane` and points to where those examples
    are described.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此表列出了使用`JTabbedPane`的示例，并指向这些示例的描述位置。
- en: '| Example | Where Described | Notes |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: 示例 | 描述位置 | 备注 |
- en: '| [`TabbedPaneDemo`](../examples/components/index.html#TabbedPaneDemo) | This
    page | Demonstrates a few tabbed pane features, such as tool tips, icons, scrollable
    layout, and mnemonics. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`TabbedPaneDemo`](../examples/components/index.html#TabbedPaneDemo) | 本页
    | 演示一些选项卡窗格的功能，如工具提示、图标、可滚动布局和助记键。 |'
- en: '| [`TabComponentsDemo`](../examples/components/index.html#TabComponentsDemo)
    | This page | Demonstrates custom components on tabs. Uses a tabbed pane with
    close buttons. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`TabComponentsDemo`](../examples/components/index.html#TabComponentsDemo)
    | 本页 | 演示选项卡上的自定义组件。使用带有关闭按钮的选项卡窗格。 |'
- en: '| [`BoxAlignmentDemo`](../examples/layout/index.html#BoxAlignmentDemo) | [How
    to Use BoxLayout](../layout/box.html) | Uses a `JTabbedPane` as the only child
    of a frame''s content pane. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`BoxAlignmentDemo`](../examples/layout/index.html#BoxAlignmentDemo) | [如何使用BoxLayout](../layout/box.html)
    | 将`JTabbedPane`用作框架内容窗格的唯一子元素。 |'
- en: '| [`BorderDemo`](../examples/components/index.html#BorderDemo) | [How to Use
    Borders](../components/border.html) | Uses its tabbed pane in a manner similar
    to `BoxAlignmentDemo`. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`BorderDemo`](../examples/components/index.html#BorderDemo) | [如何使用边框](../components/border.html)
    | 以类似于`BoxAlignmentDemo`的方式使用其选项卡窗格。 |'
- en: '| [`DialogDemo`](../examples/components/index.html#DialogDemo) | [How to Use
    Dialogs](dialog.html) | Has a tabbed pane in the center of a frame''s content
    pane, with a label below it. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`DialogDemo`](../examples/components/index.html#DialogDemo) | [如何使用对话框](dialog.html)
    | 在框架内容窗格的中心有一个带有标签的选项卡窗格。 |'
