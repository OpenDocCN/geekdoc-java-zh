- en: Reading, Writing, and Creating Files
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取、写入和创建文件
- en: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/file.html](https://docs.oracle.com/javase/tutorial/essential/io/file.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.oracle.com/javase/tutorial/essential/io/file.html](https://docs.oracle.com/javase/tutorial/essential/io/file.html)
- en: This page discusses the details of reading, writing, creating, and opening files.
    There are a wide array of file I/O methods to choose from. To help make sense
    of the API, the following diagram arranges the file I/O methods by complexity.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本页讨论了读取、写入、创建和打开文件的详细信息。有各种文件I/O方法可供选择。为了帮助理解API，以下图表按复杂性排列了文件I/O方法。
- en: '![Line drawing with file I/O methods arranged from least complex (on the left)
    to most complex (on the right).](../Images/397932f8b7e5673f794dfe684c590872.png)File
    I/O Methods Arranged from Less Complex to More Complex'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '![从最不复杂（左侧）到最复杂（右侧）排列的文件I/O方法的线条图。](../Images/397932f8b7e5673f794dfe684c590872.png)从简单到复杂排列的文件I/O方法'
- en: On the far left of the diagram are the utility methods `readAllBytes`, `readAllLines`,
    and the `write` methods, designed for simple, common cases. To the right of those
    are the methods used to iterate over a stream or lines of text, such as `newBufferedReader`,
    `newBufferedWriter`, then `newInputStream` and `newOutputStream`. These methods
    are interoperable with the `java.io` package. To the right of those are the methods
    for dealing with `ByteChannels`, `SeekableByteChannels`, and `ByteBuffers`, such
    as the `newByteChannel` method. Finally, on the far right are the methods that
    use `FileChannel` for advanced applications needing file locking or memory-mapped
    I/O.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在图表的最左侧是实用方法`readAllBytes`、`readAllLines`和`write`方法，设计用于简单、常见情况。在这些方法的右侧是用于迭代流或文本行的方法，如`newBufferedReader`、`newBufferedWriter`，然后是`newInputStream`和`newOutputStream`。这些方法与`java.io`包兼容。在这些方法的右侧是处理`ByteChannels`、`SeekableByteChannels`和`ByteBuffers`的方法，如`newByteChannel`方法。最后，在最右侧是使用`FileChannel`进行文件锁定或内存映射I/O的高级应用的方法。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:** The methods for creating a new file enable you to specify an optional
    set of initial attributes for the file. For example, on a file system that supports
    the POSIX set of standards (such as UNIX), you can specify a file owner, group
    owner, or file permissions at the time the file is created. The [Managing Metadata](fileAttr.html)
    page explains file attributes, and how to access and set them.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 创建新文件的方法使您能够为文件指定一组可选的初始属性。例如，在支持POSIX标准集（如UNIX）的文件系统上，您可以在创建文件时指定文件所有者、组所有者或文件权限。[管理元数据](fileAttr.html)页面解释了文件属性，以及如何访问和设置它们。'
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'This page has the following topics:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本页包含以下主题：
- en: '[The `OpenOptions` Parameter](#openOptions)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[打开选项](#openOptions)'
- en: '[Commonly Used Methods for Small Files](#common)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[小文件常用方法](#common)'
- en: '[Buffered I/O Methods for Text Files](#textfiles)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文本文件的缓冲I/O方法](#textfiles)'
- en: '[Methods for Unbuffered Streams and Interoperable with `java.io` APIs](#streams)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[无缓冲流和与`java.io` API兼容的方法](#streams)'
- en: '[Methods for Channels and `ByteBuffers`](#channels)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通道和`ByteBuffers`的方法](#channels)'
- en: '[Methods for Creating Regular and Temporary Files](#creating)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建常规和临时文件的方法](#creating)'
- en: '* * *'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The `OpenOptions` Parameter
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打开选项
- en: Several of the methods in this section take an optional `OpenOptions` parameter.
    This parameter is optional and the API tells you what the default behavior is
    for the method when none is specified.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的几种方法采用可选的`OpenOptions`参数。此参数是可选的，API会告诉您当未指定时方法的默认行为是什么。
- en: 'The following `StandardOpenOptions` enums are supported:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 支持以下`StandardOpenOptions`枚举：
- en: '`WRITE` – Opens the file for write access.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITE` – 打开文件以进行写访问。'
- en: '`APPEND` – Appends the new data to the end of the file. This option is used
    with the `WRITE` or `CREATE` options.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`APPEND` – 将新数据追加到文件末尾。此选项与`WRITE`或`CREATE`选项一起使用。'
- en: '`TRUNCATE_EXISTING` – Truncates the file to zero bytes. This option is used
    with the `WRITE` option.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRUNCATE_EXISTING` – 将文件截断为零字节。此选项与`WRITE`选项一起使用。'
- en: '`CREATE_NEW` – Creates a new file and throws an exception if the file already
    exists.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CREATE_NEW` – 创建新文件，并在文件已存在时抛出异常。'
- en: '`CREATE` – Opens the file if it exists or creates a new file if it does not.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CREATE` – 如果文件存在则打开文件，如果不存在则创建新文件。'
- en: '`DELETE_ON_CLOSE` – Deletes the file when the stream is closed. This option
    is useful for temporary files.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DELETE_ON_CLOSE` – 在流关闭时删除文件。此选项对临时文件很有用。'
- en: '`SPARSE` – Hints that a newly created file will be sparse. This advanced option
    is honored on some file systems, such as NTFS, where large files with data "gaps"
    can be stored in a more efficient manner where those empty gaps do not consume
    disk space.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPARSE` – 暗示新创建的文件将是稀疏的。这个高级选项在一些文件系统上得到支持，比如NTFS，在这些文件系统中，具有数据“间隙”的大文件可以以更有效的方式存储，其中这些空白间隙不会占用磁盘空间。'
- en: '`SYNC` – Keeps the file (both content and metadata) synchronized with the underlying
    storage device.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SYNC` – 保持文件（内容和元数据）与底层存储设备同步。'
- en: '`DSYNC` – Keeps the file content synchronized with the underlying storage device.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DSYNC` – 保持文件内容与底层存储设备同步。'
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Commonly Used Methods for Small Files
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小文件常用方法
- en: Reading All Bytes or Lines from a File
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从文件中读取所有字节或行
- en: 'If you have a small-ish file and you would like to read its entire contents
    in one pass, you can use the [`readAllBytes(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAllBytes-java.nio.file.Path-)
    or [`readAllLines(Path, Charset)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAllLines-java.nio.file.Path-java.nio.charset.Charset-)
    method. These methods take care of most of the work for you, such as opening and
    closing the stream, but are not intended for handling large files. The following
    code shows how to use the `readAllBytes` method:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个相对较小的文件，并且希望一次读取其全部内容，您可以使用[`readAllBytes(Path)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAllBytes-java.nio.file.Path-)或[`readAllLines(Path,
    Charset)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAllLines-java.nio.file.Path-java.nio.charset.Charset-)方法。这些方法会为您处理大部分工作，比如打开和关闭流，但不适用于处理大文件。以下代码展示了如何使用`readAllBytes`方法：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Writing All Bytes or Lines to a File
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将所有字节或行写入文件
- en: You can use one of the write methods to write bytes, or lines, to a file.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用其中一种写入方法将字节或行写入文件。
- en: '[`write(Path, byte[], OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#write-java.nio.file.Path-byte:A-java.nio.file.OpenOption...-)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`write(Path, byte[], OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#write-java.nio.file.Path-byte:A-java.nio.file.OpenOption...-)'
- en: '[`write(Path, Iterable< extends CharSequence>, Charset, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#write-java.nio.file.Path-java.lang.Iterable-java.nio.charset.Charset-java.nio.file.OpenOption...-)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`write(Path, Iterable< extends CharSequence>, Charset, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#write-java.nio.file.Path-java.lang.Iterable-java.nio.charset.Charset-java.nio.file.OpenOption...-)'
- en: The following code snippet shows how to use a `write` method.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段展示了如何使用`write`方法。
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '* * *'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Buffered I/O Methods for Text Files
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用于文本文件的缓冲I/O方法
- en: The `java.nio.file` package supports channel I/O, which moves data in buffers,
    bypassing some of the layers that can bottleneck stream I/O.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`java.nio.file`包支持通道I/O，它通过缓冲区传输数据，绕过了一些可能成为流I/O瓶颈的层。'
- en: Reading a File by Using Buffered Stream I/O
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用缓冲流I/O读取文件
- en: The [`newBufferedReader(Path, Charset)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newBufferedReader-java.nio.file.Path-java.nio.charset.Charset-)
    method opens a file for reading, returning a `BufferedReader` that can be used
    to read text from a file in an efficient manner.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[`newBufferedReader(Path, Charset)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newBufferedReader-java.nio.file.Path-java.nio.charset.Charset-)方法打开一个文件进行读取，返回一个`BufferedReader`，可用于以高效的方式从文件中读取文本。'
- en: The following code snippet shows how to use the `newBufferedReader` method to
    read from a file. The file is encoded in "US-ASCII."
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段展示了如何使用`newBufferedReader`方法从文件中读取内容。该文件以"US-ASCII"编码。
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Writing a File by Using Buffered Stream I/O
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用缓冲流I/O写入文件
- en: You can use the [`newBufferedWriter(Path, Charset, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newBufferedWriter-java.nio.file.Path-java.nio.charset.Charset-java.nio.file.OpenOption...-)
    method to write to a file using a `BufferedWriter`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`newBufferedWriter(Path, Charset, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newBufferedWriter-java.nio.file.Path-java.nio.charset.Charset-java.nio.file.OpenOption...-)方法使用`BufferedWriter`写入文件。
- en: 'The following code snippet shows how to create a file encoded in "US-ASCII"
    using this method:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段展示了如何使用这种方法创建一个以"US-ASCII"编码的文件：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '* * *'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Methods for Unbuffered Streams and Interoperable with `java.io` APIs
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用于非缓冲流和与`java.io`API互操作的方法
- en: Reading a File by Using Stream I/O
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用流I/O读取文件
- en: To open a file for reading, you can use the [`newInputStream(Path, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newInputStream-java.nio.file.Path-java.nio.file.OpenOption...-)
    method. This method returns an unbuffered input stream for reading bytes from
    the file.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开文件进行读取，您可以使用[`newInputStream(Path, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newInputStream-java.nio.file.Path-java.nio.file.OpenOption...-)方法。该方法返回一个用于从文件中读取字节的无缓冲输入流。
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Creating and Writing a File by Using Stream I/O
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过流I/O创建和写入文件
- en: You can create a file, append to a file, or write to a file by using the [`newOutputStream(Path,
    OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-)
    method. This method opens or creates a file for writing bytes and returns an unbuffered
    output stream.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用[`newOutputStream(Path, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-)方法创建文件，追加到文件或向文件写入内容。该方法打开或创建一个文件以写入字节，并返回一个无缓冲的输出流。
- en: The method takes an optional `OpenOption` parameter. If no open options are
    specified, and the file does not exist, a new file is created. If the file exists,
    it is truncated. This option is equivalent to invoking the method with the `CREATE`
    and `TRUNCATE_EXISTING` options.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法接受一个可选的`OpenOption`参数。如果未指定任何打开选项，并且文件不存在，则会创建一个新文件。如果文件存在，则会被截断。此选项等同于使用`CREATE`和`TRUNCATE_EXISTING`选项调用该方法。
- en: The following example opens a log file. If the file does not exist, it is created.
    If the file exists, it is opened for appending.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例打开一个日志文件。如果文件不存在，则会创建该文件。如果文件存在，则会以追加方式打开。
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '* * *'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Methods for Channels and `ByteBuffers`
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通道和`ByteBuffers`的方法
- en: Reading and Writing Files by Using Channel I/O
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过使用通道I/O读取和写入文件
- en: While stream I/O reads a character at a time, channel I/O reads a buffer at
    a time. The [`ByteChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/ByteChannel.html)
    interface provides basic `read` and `write` functionality. A [`SeekableByteChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html)
    is a `ByteChannel` that has the capability to maintain a position in the channel
    and to change that position. A `SeekableByteChannel` also supports truncating
    the file associated with the channel and querying the file for its size.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 流I/O每次读取一个字符，而通道I/O每次读取一个缓冲区。[`ByteChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/ByteChannel.html)接口提供基本的`read`和`write`功能。[`SeekableByteChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SeekableByteChannel.html)是一个具有在通道中保持位置并更改该位置能力的`ByteChannel`。`SeekableByteChannel`还支持截断与通道关联的文件并查询文件的大小。
- en: The capability to move to different points in the file and then read from or
    write to that location makes random access of a file possible. See [Random Access
    Files](rafs.html) for more information.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件中移动到不同位置然后从该位置读取或写入使得文件的随机访问成为可能。查看[随机访问文件](rafs.html)获取更多信息。
- en: There are two methods for reading and writing channel I/O.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种读取和写入通道I/O的方法。
- en: '[`newByteChannel(Path, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newByteChannel-java.nio.file.Path-java.nio.file.OpenOption...-)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`newByteChannel(Path, OpenOption...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newByteChannel-java.nio.file.Path-java.nio.file.OpenOption...-)'
- en: '[`newByteChannel(Path, Set<? extends OpenOption>, FileAttribute<?>...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`newByteChannel(Path, Set<? extends OpenOption>, FileAttribute<?>...)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-)'
- en: '* * *'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Note:** The `newByteChannel` methods return an instance of a `SeekableByteChannel`.
    With a default file system, you can cast this seekable byte channel to a [`FileChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/FileChannel.html)
    providing access to more advanced features such mapping a region of the file directly
    into memory for faster access, locking a region of the file so other processes
    cannot access it, or reading and writing bytes from an absolute position without
    affecting the channel''s current position.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** `newByteChannel`方法返回一个`SeekableByteChannel`的实例。对于默认文件系统，您可以将此可寻址字节通道转换为[`FileChannel`](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/FileChannel.html)，从而提供对更高级功能的访问，例如将文件的某个区域直接映射到内存以实现更快的访问，锁定文件的某个区域以防其他进程访问，或者从绝对位置读取和写入字节而不影响通道的当前位置。'
- en: '* * *'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Both `newByteChannel` methods enable you to specify a list of `OpenOption`
    options. The same [open options](#openOptions) used by the `newOutputStream` methods
    are supported, in addition to one more option: `READ` is required because the
    `SeekableByteChannel` supports both reading and writing.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 两个`newByteChannel`方法都允许你指定一系列`OpenOption`选项。除了支持`newOutputStream`方法使用的相同[打开选项](#openOptions)外，还支持一个额外的选项：`READ`是必需的，因为`SeekableByteChannel`支持读取和写入。
- en: Specifying `READ` opens the channel for reading. Specifying `WRITE` or `APPEND`
    opens the channel for writing. If none of these options are specified, then the
    channel is opened for reading.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 指定`READ`打开通道以进行读取。指定`WRITE`或`APPEND`打开通道以进行写入。如果没有指定这些选项中的任何一个，则通道将被打开以进行读取。
- en: 'The following code snippet reads a file and prints it to standard output:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段读取一个文件并将其打印到标准输出：
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The following example, written for UNIX and other POSIX file systems, creates
    a log file with a specific set of file permissions. This code creates a log file
    or appends to the log file if it already exists. The log file is created with
    read/write permissions for owner and read only permissions for group.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例是为UNIX和其他POSIX文件系统编写的，它创建了一个具有特定文件权限集的日志文件。这段代码将创建一个日志文件，如果该文件已经存在，则追加到日志文件中。该日志文件为所有者提供读写权限，为组提供只读权限。
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '* * *'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Methods for Creating Regular and Temporary Files
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建常规和临时文件的方法
- en: Creating Files
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建文件
- en: You can create an empty file with an initial set of attributes by using the
    [`createFile(Path, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-)
    method. For example, if, at the time of creation, you want a file to have a particular
    set of file permissions, use the `createFile` method to do so. If you do not specify
    any attributes, the file is created with default attributes. If the file already
    exists, `createFile` throws an exception.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用[`createFile(Path, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-)方法创建一个具有初始属性集的空文件。例如，如果在创建时你想要文件具有特定的文件权限集，可以使用`createFile`方法来实现。如果你没有指定任何属性，文件将使用默认属性创建。如果文件已经存在，`createFile`会抛出异常。
- en: In a single atomic operation, the `createFile` method checks for the existence
    of the file and creates that file with the specified attributes, which makes the
    process more secure against malicious code.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在单个原子操作中，`createFile`方法检查文件是否存在，并使用指定的属性创建该文件，这使得该过程更加安全，防止恶意代码。
- en: 'The following code snippet creates a file with default attributes:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段创建一个具有默认属性的文件：
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[POSIX File Permissions](fileAttr.html#posix) has an example that uses `createFile(Path,
    FileAttribute<?>)` to create a file with pre-set permissions.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[POSIX文件权限](fileAttr.html#posix)有一个示例，使用`createFile(Path, FileAttribute<?>)`创建一个具有预设权限的文件。'
- en: You can also create a new file by using the `newOutputStream` methods, as described
    in [Creating and Writing a File using Stream I/O](file.html#createStream). If
    you open a new output stream and close it immediately, an empty file is created.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用`newOutputStream`方法创建一个新文件，如[使用流I/O创建和写入文件](file.html#createStream)中所述。如果你打开一个新的输出流并立即关闭它，将会创建一个空文件。
- en: Creating Temporary Files
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建临时文件
- en: 'You can create a temporary file using one of the following `createTempFile`
    methods:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下`createTempFile`方法之一创建一个临时文件：
- en: '[`createTempFile(Path, String, String, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempFile-java.nio.file.Path-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`createTempFile(Path, String, String, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempFile-java.nio.file.Path-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
- en: '[`createTempFile(String, String, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`createTempFile(String, String, FileAttribute<?>)`](https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-)'
- en: 'The first method allows the code to specify a directory for the temporary file
    and the second method creates a new file in the default temporary-file directory.
    Both methods allow you to specify a suffix for the filename and the first method
    allows you to also specify a prefix. The following code snippet gives an example
    of the second method:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法允许代码指定一个临时文件的目录，而第二种方法则在默认临时文件目录中创建一个新文件。这两种方法都允许你为文件名指定后缀，而第一种方法还允许你指定前缀。以下代码片段给出了第二种方法的示例：
- en: '[PRE9]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The result of running this file would be something like the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此文件的结果将类似于以下内容：
- en: '[PRE10]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The specific format of the temporary file name is platform specific.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 临时文件名的具体格式取决于平台。
